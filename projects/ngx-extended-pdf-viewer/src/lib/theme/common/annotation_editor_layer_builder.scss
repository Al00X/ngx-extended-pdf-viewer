/* Copyright 2022 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@import url(draw_layer_builder.css);

:root {
  --outline-width: 2px;
  --outline-color: #0060df;
  --outline-around-width: 1px;
  --outline-around-color: #f0f0f4;
  --hover-outline-around-color: var(--outline-around-color);
  --focus-outline: solid var(--outline-width) var(--outline-color);
  --unfocus-outline: solid var(--outline-width) transparent;
  --focus-outline-around: solid var(--outline-around-width) var(--outline-around-color);
  --hover-outline-color: #8f8f9d;
  --hover-outline: solid var(--outline-width) var(--hover-outline-color);
  --hover-outline-around: solid var(--outline-around-width) var(--hover-outline-around-color);
  --freetext-line-height: 1.35;
  --freetext-padding: 2px;
  --resizer-bg-color: var(--outline-color);
  --resizer-size: 6px;
  --resizer-shift: calc(0px - (var(--outline-width) + var(--resizer-size)) / 2 - var(--outline-around-width));
  --editorFreeText-editing-cursor: text;
  --editorInk-editing-cursor: url("data:image/svg+xml;charset=UTF-8,<svg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M2.49913 12.6251C2.61913 12.6251 2.73913 12.6051 2.85713 12.5661L6.29013 11.4201L13.2891 4.4221C14.0191 3.6911 14.0191 2.5011 13.2891 1.7701L12.2291 0.710098C11.4971 -0.0199023 10.3091 -0.0199023 9.57713 0.710098L2.57813 7.7091L1.43313 11.1451C1.29813 11.5511 1.40213 11.9931 1.70513 12.2951C1.92113 12.5101 2.20613 12.6251 2.49913 12.6251ZM10.4611 1.5951C10.7031 1.3511 11.1021 1.3511 11.3441 1.5951L12.4051 2.6561C12.6491 2.8991 12.6491 3.2961 12.4051 3.5391L11.3401 4.6051L9.39513 2.6601L10.4611 1.5951ZM3.67013 8.3851L8.51013 3.5451L10.4541 5.4891L5.61413 10.3301L2.69713 11.3031L3.67013 8.3851Z' fill='black'/><path d='M14.8169 13.314L13.0229 13.862C12.3309 14.073 11.5909 14.111 10.8859 13.968L8.80391 13.551C7.58491 13.308 6.29791 13.48 5.18491 14.036C3.95291 14.652 2.46691 14.412 1.49191 13.436L1.44091 13.385L0.60791 14.321C1.46291 15.175 2.59991 15.625 3.75291 15.625C4.42891 15.625 5.10991 15.471 5.74391 15.153C6.60891 14.721 7.60891 14.586 8.55891 14.777L10.6409 15.194C11.5509 15.376 12.5009 15.327 13.3879 15.056L15.1819 14.508L14.8169 13.314Z' fill='black'/></svg>") --editorHighlight-editing-cursor: url(images/cursor-editorTextHighlight.svg) 23 23,
    text;
  --editorFreeHighlight-editing-cursor: url(images/toolbarButton-editorHighlight.svg) 0 16,
    pointer;
  --editorFreeText-editing-cursor: url("data:image/svg+xml;charset=UTF-8,<svg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M12 2.75H12.5V2.25V1V0.5H12H10.358C9.91165 0.5 9.47731 0.625661 9.09989 0.860442L9.09886 0.861087L8 1.54837L6.89997 0.860979L6.89911 0.860443C6.5218 0.625734 6.08748 0.5 5.642 0.5H4H3.5V1V2.25V2.75H4H5.642C5.66478 2.75 5.6885 2.75641 5.71008 2.76968C5.71023 2.76977 5.71038 2.76986 5.71053 2.76995L6.817 3.461C6.81704 3.46103 6.81709 3.46105 6.81713 3.46108C6.81713 3.46108 6.81713 3.46108 6.81714 3.46109C6.8552 3.48494 6.876 3.52285 6.876 3.567V8V12.433C6.876 12.4771 6.85523 12.515 6.81722 12.5389C6.81715 12.5389 6.81707 12.539 6.817 12.539L5.70953 13.23C5.70941 13.2301 5.70929 13.2302 5.70917 13.2303C5.68723 13.2438 5.6644 13.25 5.641 13.25H4H3.5V13.75V15V15.5H4H5.642C6.08835 15.5 6.52269 15.3743 6.90011 15.1396L6.90086 15.1391L8 14.4526L9.10003 15.14L9.10089 15.1406C9.47831 15.3753 9.91265 15.501 10.359 15.501H12H12.5V15.001V13.751V13.251H12H10.358C10.3352 13.251 10.3115 13.2446 10.2899 13.2313C10.2897 13.2312 10.2896 13.2311 10.2895 13.231L9.183 12.54C9.18298 12.54 9.18295 12.54 9.18293 12.54C9.18291 12.5399 9.18288 12.5399 9.18286 12.5399C9.14615 12.5169 9.125 12.4797 9.125 12.434V8V3.567C9.125 3.52266 9.14603 3.48441 9.18364 3.4606C9.18377 3.46052 9.1839 3.46043 9.18404 3.46035L10.2895 2.76995C10.2896 2.76985 10.2898 2.76975 10.2899 2.76966C10.3119 2.75619 10.3346 2.75 10.358 2.75H12Z' fill='black' stroke='white'/></svg>") 0 16,
    pointer;
}

.textLayer.highlighting {
  cursor: var(--editorFreeHighlight-editing-cursor);

  &:not(.free) span {
    cursor: var(--editorHighlight-editing-cursor);
  }

  &.free span {
    cursor: var(--editorFreeHighlight-editing-cursor);
  }
}

@media (min-resolution: 1.1dppx) {
  :root {
    --editorFreeText-editing-cursor: url(images/cursor-editorFreeText.svg) 0 16,
      text;
  }
}

@media screen and (forced-colors: active) {
  :root {
    --outline-color: CanvasText;
    --outline-around-color: ButtonFace;
    --resizer-bg-color: ButtonText;
    --hover-outline-color: Highlight;
    --hover-outline-around-color: SelectedItemText;
  }
}

[data-editor-rotation="90"] {
  transform: rotate(90deg);
}

[data-editor-rotation="180"] {
  transform: rotate(180deg);
}

[data-editor-rotation="270"] {
  transform: rotate(270deg);
}

.annotationEditorLayer {
  background: transparent;
  position: absolute;
  inset: 0;
  font-size: calc(100px * var(--scale-factor));
  transform-origin: 0 0;
  cursor: auto;
  z-index: 4;
}

.annotationEditorLayer.waiting {
  content: "";
  cursor: wait;
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}

.annotationEditorLayer.disabled {
  pointer-events: none;
}

.annotationEditorLayer.freetextEditing {
  cursor: var(--editorFreeText-editing-cursor);
}

.annotationEditorLayer.inkEditing {
  cursor: var(--editorInk-editing-cursor);
}

/* added by ngx-extended-pdf-viewer */
.ngx-extended-pdf-viewer-prevent-touch-move #viewerContainer {
  touch-action: none;
}

/* end of addition by ngx-extended-pdf-viewer */

.annotationEditorLayer :is(.freeTextEditor, .inkEditor, .stampEditor) {
  position: absolute;
  background: transparent;
  z-index: 1;
  transform-origin: 0 0;
  cursor: auto;
  max-width: 100%;
  max-height: 100%;
  border: var(--unfocus-outline);

  &.draggable.selectedEditor {
    cursor: move;
  }

  &.moving {
    touch-action: none;
  }

  &.selectedEditor {
    border: var(--focus-outline);
    outline: var(--focus-outline-around);

    &::before {
      /*
        This is a workaround for the lack of support for stripes(...) (see
        https://drafts.csswg.org/css-images-4/#stripes).
        The outline should be composed of 1px white, 2px blue and 1px white.
        This could be achieved in different ways:
          - using a linear-gradient;
          - using a box-shadow;
          - using an outline on the selected element and an outline+border on
            the ::before pseudo-element.
        All these options lead to incorrect rendering likely due to rounding
        issues.
        That said it doesn't mean that the current is ideal, but it's the best
        we could come up with for the moment.
        One drawback of this approach is that we use a border on the selected
        element which means that we must take care of it when positioning the
        div in js (see AnnotationEditor._borderLineWidth in editor.js).
      */
      content: "";
      position: absolute;
      inset: 0;
      border: var(--focus-outline-around);
      pointer-events: none;
    }
  }

  &:hover:not(.selectedEditor) {
    border: var(--hover-outline);
    outline: var(--hover-outline-around);

    &::before {
      content: "";
      position: absolute;
      inset: 0;
      border: var(--focus-outline-around);
    }
  }
}

.annotationEditorLayer :is(.freeTextEditor, .inkEditor, .stampEditor, .highlightEditor) {
  .editToolbar {
    --editor-toolbar-delete-image: url("data:image/svg+xml; utf8, <svg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'><path fill-rule='evenodd' clip-rule='evenodd' d='M11 3H13.6C14 3 14.3 3.3 14.3 3.6C14.3 3.9 14 4.2 13.7 4.2H13.3V14C13.3 15.1 12.4 16 11.3 16H4.80005C3.70005 16 2.80005 15.1 2.80005 14V4.2H2.40005C2.00005 4.2 1.80005 4 1.80005 3.6C1.80005 3.2 2.00005 3 2.40005 3H5.00005V2C5.00005 0.9 5.90005 0 7.00005 0H9.00005C10.1 0 11 0.9 11 2V3ZM6.90005 1.2L6.30005 1.8V3H9.80005V1.8L9.20005 1.2H6.90005ZM11.4 14.7L12 14.1V4.2H4.00005V14.1L4.60005 14.7H11.4ZM7.00005 12.4C7.00005 12.7 6.70005 13 6.40005 13C6.10005 13 5.80005 12.7 5.80005 12.4V7.6C5.70005 7.3 6.00005 7 6.40005 7C6.80005 7 7.00005 7.3 7.00005 7.6V12.4ZM10.2001 12.4C10.2001 12.7 9.90006 13 9.60006 13C9.30006 13 9.00006 12.7 9.00006 12.4V7.6C9.00006 7.3 9.30006 7 9.60006 7C9.90006 7 10.2001 7.3 10.2001 7.6V12.4Z' fill='black' /></svg>");
    --editor-toolbar-bg-color: #f0f0f4;
    --editor-toolbar-fg-color: #2e2e56;
    --editor-toolbar-border-color: #8f8f9d;
    --editor-toolbar-hover-border-color: var(--editor-toolbar-border-color);
    --editor-toolbar-hover-bg-color: #e0e0e6;
    --editor-toolbar-hover-fg-color: var(--editor-toolbar-fg-color);
    --editor-toolbar-hover-outline: none;
    --editor-toolbar-focus-outline-color: #0060df;
    --editor-toolbar-shadow: 0 2px 6px 0 rgb(58 57 68 / 0.2);
    --editor-toolbar-vert-offset: 6px;
    --editor-toolbar-height: 28px;
    --editor-toolbar-padding: 2px;

    @media (prefers-color-scheme: dark) {
      --editor-toolbar-bg-color: #2b2a33;
      --editor-toolbar-fg-color: #fbfbfe;
      --editor-toolbar-hover-bg-color: #52525e;
      --editor-toolbar-focus-outline-color: #0df;
    }

    @media screen and (forced-colors: active) {
      --editor-toolbar-bg-color: ButtonFace;
      --editor-toolbar-fg-color: ButtonText;
      --editor-toolbar-border-color: ButtonText;
      --editor-toolbar-hover-border-color: AccentColor;
      --editor-toolbar-hover-bg-color: ButtonFace;
      --editor-toolbar-hover-fg-color: AccentColor;
      --editor-toolbar-hover-outline: 2px solid var(--editor-toolbar-hover-border-color);
      --editor-toolbar-focus-outline-color: ButtonBorder;
      --editor-toolbar-shadow: none;
    }

    display: flex;
    width: fit-content;
    height: var(--editor-toolbar-height);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    cursor: default;
    pointer-events: auto;
    box-sizing: content-box;
    padding: var(--editor-toolbar-padding);

    position: absolute;
    inset-inline-end: 0;
    inset-block-start: calc(100% + var(--editor-toolbar-vert-offset));

    border-radius: 6px;
    background-color: var(--editor-toolbar-bg-color);
    border: 1px solid var(--editor-toolbar-border-color);
    box-shadow: var(--editor-toolbar-shadow);

    &.hidden {
      display: none;
    }

    &:has(:focus-visible) {
      border-color: transparent;
    }

    &:dir(ltr) {
      transform-origin: 100% 0;
    }

    &:dir(rtl) {
      transform-origin: 0 0;
    }

    .buttons {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 0;
      height: 100%;

      .divider {
        width: 1px;
        height: calc(2 * var(--editor-toolbar-padding) + var(--editor-toolbar-height));
        background-color: var(--editor-toolbar-border-color);
        display: inline-block;
        margin-inline: 2px;
      }

      .delete {
        width: var(--editor-toolbar-height);

        &::before {
          content: "";
          mask-image: var(--editor-toolbar-delete-image);
          mask-repeat: no-repeat;
          mask-position: center;
          display: inline-block;
          background-color: var(--editor-toolbar-fg-color);
          width: 100%;
          height: 100%;
        }

        &:hover::before {
          background-color: var(--editor-toolbar-hover-fg-color);
        }
      }

      >* {
        height: var(--editor-toolbar-height);
      }

      > :not(.divider) {
        border: none;
        background-color: transparent;
        cursor: pointer;

        &:hover {
          border-radius: 2px;
          background-color: var(--editor-toolbar-hover-bg-color);
          color: var(--editor-toolbar-hover-fg-color);
          outline: var(--editor-toolbar-hover-outline);
          outline-offset: 1px;

          &:active {
            outline: none;
          }
        }

        &:focus-visible {
          border-radius: 2px;
          outline: 2px solid var(--editor-toolbar-focus-outline-color);
        }
      }

      .altText {
        --alt-text-add-image: url(images/altText_add.svg);
        --alt-text-done-image: url(images/altText_done.svg);

        display: flex;
        align-items: center;
        justify-content: center;
        width: max-content;
        padding-inline: 8px;
        pointer-events: all;
        font: menu;
        font-weight: 590;
        font-size: 12px;
        color: var(--editor-toolbar-fg-color);

        &:disabled {
          pointer-events: none;
        }

        &::before {
          content: "";
          mask-image: var(--alt-text-add-image);
          mask-repeat: no-repeat;
          mask-position: center;
          display: inline-block;
          width: 12px;
          height: 13px;
          background-color: var(--editor-toolbar-fg-color);
          margin-inline-end: 4px;
        }

        &:hover::before {
          background-color: var(--editor-toolbar-hover-fg-color);
        }

        &.done::before {
          mask-image: var(--alt-text-done-image);
        }

        .tooltip {
          display: none;

          &.show {
            --alt-text-tooltip-bg: #f0f0f4;
            --alt-text-tooltip-fg: #15141a;
            --alt-text-tooltip-border: #8f8f9d;
            --alt-text-tooltip-shadow: 0px 2px 6px 0px rgb(58 57 68 / 0.2);

            @media (prefers-color-scheme: dark) {
              --alt-text-tooltip-bg: #1c1b22;
              --alt-text-tooltip-fg: #fbfbfe;
              --alt-text-tooltip-shadow: 0px 2px 6px 0px #15141a;
            }

            @media screen and (forced-colors: active) {
              --alt-text-tooltip-bg: Canvas;
              --alt-text-tooltip-fg: CanvasText;
              --alt-text-tooltip-border: CanvasText;
              --alt-text-tooltip-shadow: none;
            }

            display: inline-flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            position: absolute;
            top: calc(100% + 2px);
            inset-inline-start: 0;
            padding-block: 2px 3px;
            padding-inline: 3px;
            max-width: 300px;
            width: max-content;
            height: auto;
            font-size: 12px;

            border: 0.5px solid var(--alt-text-tooltip-border);
            background: var(--alt-text-tooltip-bg);
            box-shadow: var(--alt-text-tooltip-shadow);
            color: var(--alt-text-tooltip-fg);

            pointer-events: none;
          }
        }
      }
    }
  }
}

.annotationEditorLayer .freeTextEditor {
  padding: calc(var(--freetext-padding) * var(--scale-factor));
  width: auto;
  height: auto;
  touch-action: none;
}

.annotationEditorLayer .freeTextEditor .internal {
  background: transparent;
  border: none;
  inset: 0;
  overflow: visible;
  white-space: nowrap;
  font: 10px sans-serif;
  line-height: var(--freetext-line-height);
  user-select: none;
}

.annotationEditorLayer .freeTextEditor .overlay {
  position: absolute;
  display: none;
  background: transparent;
  inset: 0;
  width: 100%;
  height: 100%;
}

.annotationEditorLayer .freeTextEditor .overlay.enabled {
  display: block;
}

.annotationEditorLayer .freeTextEditor .internal:empty::before {
  content: attr(default-content);
  color: gray;
}

.annotationEditorLayer .freeTextEditor .internal:focus {
  outline: none;
  user-select: auto;
}

.annotationEditorLayer :is(.freeTextEditor, .inkEditor, .stampEditor):hover:not(.selectedEditor) {
  outline: var(--hover-outline);
}

.annotationEditorLayer .inkEditor {
  width: 100%;
  height: 100%;
}

.annotationEditorLayer .inkEditor.editing {
  cursor: inherit;
}

.annotationEditorLayer .inkEditor .inkEditorCanvas {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  touch-action: none;
}

.annotationEditorLayer .stampEditor {
  width: auto;
  height: auto;
}

.annotationEditorLayer .stampEditor canvas {
  width: 100%;
  height: 100%;
}

.annotationEditorLayer {
  :is(.freeTextEditor, .inkEditor, .stampEditor) {
    &>.resizers {
      width: 100%;
      height: 100%;
      position: absolute;
      inset: 0;

      &.hidden {
        display: none;
      }

      &>.resizer {
        width: var(--resizer-size);
        height: var(--resizer-size);
        background: content-box var(--resizer-bg-color);
        border: var(--focus-outline-around);
        border-radius: 2px;
        position: absolute;

        &.topLeft {
          top: var(--resizer-shift);
          left: var(--resizer-shift);
        }

        &.topMiddle {
          top: var(--resizer-shift);
          left: calc(50% + var(--resizer-shift));
        }

        &.topRight {
          top: var(--resizer-shift);
          right: var(--resizer-shift);
        }

        &.middleRight {
          top: calc(50% + var(--resizer-shift));
          right: var(--resizer-shift);
        }

        &.bottomRight {
          bottom: var(--resizer-shift);
          right: var(--resizer-shift);
        }

        &.bottomMiddle {
          bottom: var(--resizer-shift);
          left: calc(50% + var(--resizer-shift));
        }

        &.bottomLeft {
          bottom: var(--resizer-shift);
          left: var(--resizer-shift);
        }

        &.middleLeft {
          top: calc(50% + var(--resizer-shift));
          left: var(--resizer-shift);
        }
      }
    }
  }

  &[data-main-rotation="0"] :is([data-editor-rotation="0"], [data-editor-rotation="180"]),
  &[data-main-rotation="90"] :is([data-editor-rotation="270"], [data-editor-rotation="90"]),
  &[data-main-rotation="180"] :is([data-editor-rotation="180"], [data-editor-rotation="0"]),
  &[data-main-rotation="270"] :is([data-editor-rotation="90"], [data-editor-rotation="270"]) {
    &>.resizers>.resizer {

      &.topLeft,
      &.bottomRight {
        cursor: nwse-resize;
      }

      &.topMiddle,
      &.bottomMiddle {
        cursor: ns-resize;
      }

      &.topRight,
      &.bottomLeft {
        cursor: nesw-resize;
      }

      &.middleRight,
      &.middleLeft {
        cursor: ew-resize;
      }
    }
  }

  &[data-main-rotation="0"] :is([data-editor-rotation="90"], [data-editor-rotation="270"]),
  &[data-main-rotation="90"] :is([data-editor-rotation="0"], [data-editor-rotation="180"]),
  &[data-main-rotation="180"] :is([data-editor-rotation="270"], [data-editor-rotation="90"]),
  &[data-main-rotation="270"] :is([data-editor-rotation="180"], [data-editor-rotation="0"]) {
    &>.resizers>.resizer {

      &.topLeft,
      &.bottomRight {
        cursor: nesw-resize;
      }

      &.topMiddle,
      &.bottomMiddle {
        cursor: ew-resize;
      }

      &.topRight,
      &.bottomLeft {
        cursor: nwse-resize;
      }

      &.middleRight,
      &.middleLeft {
        cursor: ns-resize;
      }
    }
  }

  & :is([data-main-rotation="0"] [data-editor-rotation="90"],
    [data-main-rotation="90"] [data-editor-rotation="0"],
    [data-main-rotation="180"] [data-editor-rotation="270"],
    [data-main-rotation="270"] [data-editor-rotation="180"]) {
    .editToolbar {
      rotate: 270deg;

      &:dir(ltr) {
        inset-inline-end: calc(0px - var(--editor-toolbar-vert-offset));
        inset-block-start: 0;
      }

      &:dir(rtl) {
        inset-inline-end: calc(100% + var(--editor-toolbar-vert-offset));
        inset-block-start: 0;
      }
    }
  }

  & :is([data-main-rotation="0"] [data-editor-rotation="180"],
    [data-main-rotation="90"] [data-editor-rotation="90"],
    [data-main-rotation="180"] [data-editor-rotation="0"],
    [data-main-rotation="270"] [data-editor-rotation="270"]) {
    .editToolbar {
      rotate: 180deg;
      inset-inline-end: 100%;
      inset-block-start: calc(0pc - var(--editor-toolbar-vert-offset));
    }
  }

  & :is([data-main-rotation="0"] [data-editor-rotation="270"],
    [data-main-rotation="90"] [data-editor-rotation="180"],
    [data-main-rotation="180"] [data-editor-rotation="90"],
    [data-main-rotation="270"] [data-editor-rotation="0"]) {
    .editToolbar {
      rotate: 90deg;

      &:dir(ltr) {
        inset-inline-end: calc(100% + var(--editor-toolbar-vert-offset));
        inset-block-start: 100%;
      }

      &:dir(rtl) {
        inset-inline-start: calc(0px - var(--editor-toolbar-vert-offset));
        inset-block-start: 0;
      }
    }
  }
}

#altTextDialog {
  --dialog-bg-color: white;
  --dialog-border-color: white;
  --dialog-shadow: 0 2px 14px 0 rgb(58 57 68 / 0.2);
  --text-primary-color: #15141a;
  --text-secondary-color: #5b5b66;
  --hover-filter: brightness(0.9);
  --focus-ring-color: #0060df;
  --focus-ring-outline: 2px solid var(--focus-ring-color);

  --textarea-border-color: #8f8f9d;
  --textarea-bg-color: white;
  --textarea-fg-color: var(--text-secondary-color);

  --radio-bg-color: #f0f0f4;
  --radio-checked-bg-color: #fbfbfe;
  --radio-border-color: #8f8f9d;
  --radio-checked-border-color: #0060df;

  --button-cancel-bg-color: #f0f0f4;
  --button-cancel-fg-color: var(--text-primary-color);
  --button-cancel-border-color: var(--button-cancel-bg-color);
  --button-cancel-hover-bg-color: var(--button-cancel-bg-color);
  --button-cancel-hover-fg-color: var(--button-cancel-fg-color);
  --button-cancel-hover-border-color: var(--button-cancel-hover-bg-color);

  --button-save-bg-color: #0060df;
  --button-save-fg-color: #fbfbfe;
  --button-save-hover-bg-color: var(--button-save-bg-color);
  --button-save-hover-fg-color: var(--button-save-fg-color);
  --button-save-hover-border-color: var(--button-save-hover-bg-color);

  @media (prefers-color-scheme: dark) {
    --dialog-bg-color: #1c1b22;
    --dialog-border-color: #1c1b22;
    --dialog-shadow: 0 2px 14px 0 #15141a;
    --text-primary-color: #fbfbfe;
    --text-secondary-color: #cfcfd8;
    --focus-ring-color: #0df;
    --hover-filter: brightness(1.4);

    --textarea-bg-color: #42414d;

    --radio-bg-color: #2b2a33;
    --radio-checked-bg-color: #15141a;
    --radio-checked-border-color: #0df;

    --button-cancel-bg-color: #2b2a33;
    --button-save-bg-color: #0df;
    --button-save-fg-color: #15141a;
  }

  @media screen and (forced-colors: active) {
    --dialog-bg-color: Canvas;
    --dialog-border-color: CanvasText;
    --dialog-shadow: none;
    --text-primary-color: CanvasText;
    --text-secondary-color: CanvasText;
    --hover-filter: none;
    --focus-ring-color: ButtonBorder;

    --textarea-border-color: ButtonBorder;
    --textarea-bg-color: Field;
    --textarea-fg-color: ButtonText;

    --radio-bg-color: ButtonFace;
    --radio-checked-bg-color: ButtonFace;
    --radio-border-color: ButtonText;
    --radio-checked-border-color: ButtonText;

    --button-cancel-bg-color: ButtonFace;
    --button-cancel-fg-color: ButtonText;
    --button-cancel-border-color: ButtonText;
    --button-cancel-hover-bg-color: AccentColor;
    --button-cancel-hover-fg-color: AccentColorText;

    --button-save-bg-color: ButtonText;
    --button-save-fg-color: ButtonFace;
    --button-save-hover-bg-color: AccentColor;
    --button-save-hover-fg-color: AccentColorText;
  }

  font: message-box;
  font-size: 13px;
  font-weight: 400;
  line-height: 150%;
  border-radius: 4px;
  padding: 12px 16px;
  border: 1px solid var(--dialog-border-color);
  background: var(--dialog-bg-color);
  color: var(--text-primary-color);
  box-shadow: var(--dialog-shadow);

  &::backdrop {
    /* This is needed to avoid to darken the image the user want to describe. */
    mask: url(#alttext-manager-mask);
  }

  &.positioned {
    margin: 0;
  }

  & #altTextContainer {
    width: 300px;
    height: fit-content;
    display: inline-flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 16px;

    & *:focus-visible {
      outline: var(--focus-ring-outline);
      outline-offset: 2px;
    }

    & .radio {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 4px;

      & .radioButton {
        display: flex;
        gap: 8px;
        align-self: stretch;
        align-items: center;

        & input {
          appearance: none;
          box-sizing: border-box;
          width: 16px;
          height: 16px;
          border-radius: 50%;
          background-color: var(--radio-bg-color);
          border: 1px solid var(--radio-border-color);

          &:hover {
            filter: var(--hover-filter);
          }

          &:checked {
            background-color: var(--radio-checked-bg-color);
            border: 4px solid var(--radio-checked-border-color);
          }
        }
      }

      & .radioLabel {
        display: flex;
        padding-inline-start: 24px;
        align-items: flex-start;
        gap: 10px;
        align-self: stretch;

        & span {
          flex: 1 0 0;
          font-size: 11px;
          color: var(--text-secondary-color);
        }
      }
    }

    & #overallDescription {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 4px;
      align-self: stretch;

      & span {
        align-self: stretch;
      }

      & .title {
        font-size: 13px;
        font-style: normal;
        font-weight: 590;
      }
    }

    & #addDescription {
      display: flex;
      flex-direction: column;
      align-items: stretch;
      gap: 8px;

      & .descriptionArea {
        flex: 1;
        padding-inline: 24px 10px;

        textarea {
          font: inherit;
          width: 100%;
          min-height: 75px;
          padding: 8px;
          resize: none;
          margin: 0;
          box-sizing: border-box;
          border-radius: 4px;
          border: 1px solid var(--textarea-border-color);
          background: var(--textarea-bg-color);
          color: var(--textarea-fg-color);

          &:focus {
            outline-offset: 0;
            border-color: transparent;
          }

          &:disabled {
            pointer-events: none;
            opacity: 0.4;
          }
        }
      }
    }

    & #buttons {
      display: flex;
      justify-content: flex-end;
      align-items: flex-start;
      gap: 8px;
      align-self: stretch;

      button {
        border-radius: 4px;
        border: 1px solid;
        font: menu;
        font-weight: 600;
        padding: 4px 16px;
        width: auto;
        height: 32px;

        &:hover {
          cursor: pointer;
          filter: var(--hover-filter);
        }

        &#altTextCancel {
          color: var(--button-cancel-fg-color);
          background-color: var(--button-cancel-bg-color);
          border-color: var(--button-cancel-border-color);

          &:hover {
            color: var(--button-cancel-hover-fg-color);
            background-color: var(--button-cancel-hover-bg-color);
            border-color: var(--button-cancel-hover-border-color);
          }
        }

        &#altTextSave {
          color: var(--button-save-hover-fg-color);
          background-color: var(--button-save-hover-bg-color);
          border-color: var(--button-save-hover-border-color);
          opacity: 1;

          &:hover {
            color: var(--button-save-hover-fg-color);
            background-color: var(--button-save-hover-bg-color);
            border-color: var(--button-save-hover-border-color);
          }
        }
      }
    }
  }
}

.colorPicker {
  --hover-outline-color: #0250bb;
  --selected-outline-color: #0060df;
  --swatch-border-color: #cfcfd8;

  @media (prefers-color-scheme: dark) {
    --hover-outline-color: #80ebff;
    --selected-outline-color: #aaf2ff;
    --swatch-border-color: #52525e;
  }

  @media screen and (forced-colors: active) {
    --hover-outline-color: Highlight;
    --selected-outline-color: var(--hover-outline-color);
    --swatch-border-color: ButtonText;
  }

  .swatch {
    width: 16px;
    height: 16px;
    border: 1px solid var(--swatch-border-color);
    border-radius: 100%;
    outline-offset: 2px;
    box-sizing: border-box;
    forced-color-adjust: none;
  }

  button:is(:hover, .selected)>.swatch {
    border: none;
  }
}

.annotationEditorLayer {
  &[data-main-rotation="0"] {
    .highlightEditor:not(.free)>.editToolbar {
      rotate: 0deg;
    }
  }

  &[data-main-rotation="90"] {
    .highlightEditor:not(.free)>.editToolbar {
      rotate: 270deg;
    }
  }

  &[data-main-rotation="180"] {
    .highlightEditor:not(.free)>.editToolbar {
      rotate: 180deg;
    }
  }

  &[data-main-rotation="270"] {
    .highlightEditor:not(.free)>.editToolbar {
      rotate: 90deg;
    }
  }

  .highlightEditor {
    position: absolute;
    background: transparent;
    z-index: 1;
    cursor: auto;
    max-width: 100%;
    max-height: 100%;
    border: none;
    outline: none;
    pointer-events: none;
    transform-origin: 0 0;

    &:not(.free) {
      transform: none;
    }

    .internal {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: auto;
    }

    &.disabled .internal {
      pointer-events: none;
    }

    &.selectedEditor {
      .internal {
        cursor: pointer;
      }
    }

    .editToolbar {
      --editor-toolbar-colorpicker-arrow-image: url(images/toolbarButton-menuArrow.svg);

      transform-origin: center !important;

      .buttons {
        .colorPicker {
          position: relative;
          width: auto;
          display: flex;
          justify-content: center;
          align-items: center;
          gap: 4px;
          padding: 4px;

          &::after {
            content: "";
            mask-image: var(--editor-toolbar-colorpicker-arrow-image);
            mask-repeat: no-repeat;
            mask-position: center;
            display: inline-block;
            background-color: var(--editor-toolbar-fg-color);
            width: 12px;
            height: 12px;
          }

          &:hover::after {
            background-color: var(--editor-toolbar-hover-fg-color);
          }

          &:has(.dropdown:not(.hidden)) {
            background-color: var(--editor-toolbar-hover-bg-color);

            &::after {
              scale: -1;
            }
          }

          .dropdown {
            position: absolute;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: 11px;
            padding-block: 8px;
            border-radius: 6px;
            background-color: var(--editor-toolbar-bg-color);
            border: 1px solid var(--editor-toolbar-border-color);
            box-shadow: var(--editor-toolbar-shadow);
            inset-block-start: calc(100% + 4px);
            width: calc(100% + 2 * var(--editor-toolbar-padding));

            button {
              width: 100%;
              height: auto;
              border: none;
              cursor: pointer;
              display: flex;
              justify-content: center;
              align-items: center;
              background: none;

              &:is(:active, :focus-visible) {
                outline: none;
              }

              >.swatch {
                outline-offset: 2px;
              }

              &[aria-selected="true"]>.swatch {
                outline: 2px solid var(--selected-outline-color);
              }

              &:is(:hover, :active, :focus-visible)>.swatch {
                outline: 2px solid var(--hover-outline-color);
              }
            }
          }
        }
      }
    }
  }
}

.editorParamsToolbar:has(#highlightParamsToolbarContainer) {
  padding: unset;
}

#highlightParamsToolbarContainer {
  height: auto;
  padding-inline: 10px;
  padding-block: 10px 16px;
  gap: 16px;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;

  .editorParamsLabel {
    width: fit-content;
    inset-inline-start: 0;
  }

  .colorPicker {
    display: flex;
    flex-direction: column;
    gap: 8px;

    .dropdown {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-direction: row;
      height: auto;

      button {
        width: auto;
        height: auto;
        border: none;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        background: none;
        flex: 0 0 auto;

        .swatch {
          width: 24px;
          height: 24px;
        }

        &:is(:active, :focus-visible) {
          outline: none;
        }

        &[aria-selected="true"]>.swatch {
          outline: 2px solid var(--selected-outline-color);
        }

        &:is(:hover, :active, :focus-visible)>.swatch {
          outline: 2px solid var(--hover-outline-color);
        }
      }
    }
  }

  #editorHighlightThickness {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 4px;
    align-self: stretch;

    .editorParamsLabel {
      width: 100%;
      height: auto;
      align-self: stretch;
    }

    .thicknessPicker {
      display: flex;
      justify-content: space-between;
      align-items: center;
      align-self: stretch;

      --example-color: #bfbfc9;

      @media (prefers-color-scheme: dark) {
        --example-color: #80808e;
      }

      @media screen and (forced-colors: active) {
        --example-color: HighlightText;
      }

      &::before {
        content: "";
        width: 8px;
        aspect-ratio: 1;
        display: block;
        border-radius: 100%;
        background-color: var(--example-color);
      }

      .editorParamsSlider {
        width: unset;
        height: 14px;
      }

      &::after {
        content: "";
        width: 24px;
        aspect-ratio: 1;
        display: block;
        border-radius: 100%;
        background-color: var(--example-color);
      }
    }
  }
}