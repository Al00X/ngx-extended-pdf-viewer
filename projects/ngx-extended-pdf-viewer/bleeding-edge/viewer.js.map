{"version":3,"file":"viewer.js","mappings":"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","sources":["webpack://pdf.js/web/app_options.js","webpack://pdf.js/web/app.js","webpack://pdf.js/web/ui_utils.js","webpack://pdf.js/web/pdfjs.js","webpack://pdf.js/web/pdf_cursor_tools.js","webpack://pdf.js/web/grab_to_pan.js","webpack://pdf.js/web/pdf_rendering_queue.js","webpack://pdf.js/web/overlay_manager.js","webpack://pdf.js/web/password_prompt.js","webpack://pdf.js/web/pdf_attachment_viewer.js","webpack://pdf.js/web/base_tree_viewer.js","webpack://pdf.js/web/pdf_document_properties.js","webpack://pdf.js/web/pdf_find_bar.js","webpack://pdf.js/web/pdf_find_controller.js","webpack://pdf.js/external/lodash.deburr/index.js","webpack://pdf.js/web/pdf_find_utils.js","webpack://pdf.js/external/fast-levenshtein/levenshtein.js","webpack://pdf.js/web/pdf_history.js","webpack://pdf.js/web/pdf_layer_viewer.js","webpack://pdf.js/web/pdf_link_service.js","webpack://pdf.js/web/pdf_outline_viewer.js","webpack://pdf.js/web/pdf_presentation_mode.js","webpack://pdf.js/web/pdf_scripting_manager.js","webpack://pdf.js/web/pdf_sidebar.js","webpack://pdf.js/web/pdf_sidebar_resizer.js","webpack://pdf.js/web/pdf_thumbnail_viewer.js","webpack://pdf.js/web/pdf_thumbnail_view.js","webpack://pdf.js/web/pdf_viewer.js","webpack://pdf.js/web/base_viewer.js","webpack://pdf.js/web/annotation_layer_builder.js","webpack://pdf.js/web/l10n_utils.js","webpack://pdf.js/web/page-flip.module.js","webpack://pdf.js/web/pdf_page_view.js","webpack://pdf.js/node_modules/canvas-size/dist/canvas-size.esm.js","webpack://pdf.js/src/shared/util.js","webpack://pdf.js/src/shared/compatibility.js","webpack://pdf.js/web/struct_tree_layer_builder.js","webpack://pdf.js/web/text_highlighter.js","webpack://pdf.js/web/text_layer_builder.js","webpack://pdf.js/web/xfa_layer_builder.js","webpack://pdf.js/web/secondary_toolbar.js","webpack://pdf.js/web/pdf_single_page_viewer.js","webpack://pdf.js/web/toolbar.js","webpack://pdf.js/web/view_history.js","webpack://pdf.js/web/genericcom.js","webpack://pdf.js/web/preferences.js","webpack://pdf.js/web/download_manager.js","webpack://pdf.js/web/genericl10n.js","webpack://pdf.js/external/webL10n/l10n.js","webpack://pdf.js/web/generic_scripting.js","webpack://pdf.js/web/pdf_print_service.js","webpack://pdf.js/web/print_utils.js","webpack://pdf.js/webpack/bootstrap","webpack://pdf.js/web/viewer.js"],"sourcesContent":["/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const platform =\n    (typeof navigator !== \"undefined\" && navigator.platform) || \"\";\n  const maxTouchPoints =\n    (typeof navigator !== \"undefined\" && navigator.maxTouchPoints) || 1;\n\n  const isAndroid = /Android/.test(userAgent);\n  const isIOS =\n    /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) ||\n    (platform === \"MacIntel\" && maxTouchPoints > 1);\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  // Disables URL.createObjectURL() usage in some environments.\n  // Support: Chrome on iOS\n  (function checkOnBlobSupport() {\n    // Sometimes Chrome on iOS loses data created with createObjectURL(),\n    // see issue 8081.\n    if (isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  // Limit canvas size to 5 mega-pixels on mobile.\n  // Support: Android, iOS\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      compatibilityParams.maxCanvasPixels = 5242880;\n    }\n  })();\n}\n\nconst OptionKind = {\n  VIEWER: 0x02,\n  API: 0x04,\n  WORKER: 0x08,\n  PREFERENCE: 0x80,\n};\n\n/**\n * NOTE: These options are used to generate the `default_preferences.json` file,\n *       see `OptionKind.PREFERENCE`, hence the values below must use only\n *       primitive types and cannot rely on any imported types.\n */\nconst defaultOptions = {\n  annotationMode: {\n    /** @type {number} */\n    value: 2,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  cursorToolOnLoad: {\n    /** @type {number} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  defaultUrl: {\n    /** @type {string} */\n    value: \"\",\n    kind: OptionKind.VIEWER,\n  },\n  defaultZoomValue: {\n    /** @type {string} */\n    value: \"\",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  disableHistory: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER,\n  },\n  disablePageLabels: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  enablePermissions: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  enablePrintAutoRotate: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  enableScripting: {\n    /** @type {boolean} */\n    value: typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\"),\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  externalLinkRel: {\n    /** @type {string} */\n    value: \"noopener noreferrer nofollow\",\n    kind: OptionKind.VIEWER,\n  },\n  externalLinkTarget: {\n    /** @type {number} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  historyUpdateUrl: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  ignoreDestinationZoom: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  imageResourcesPath: {\n    /** @type {string} */\n    value: \"./images/\",\n    kind: OptionKind.VIEWER,\n  },\n  maxCanvasPixels: {\n    /** @type {number} */\n    value: 16777216,\n    compatibility: compatibilityParams.maxCanvasPixels,\n    kind: OptionKind.VIEWER,\n  },\n  pdfBugEnabled: {\n    /** @type {boolean} */\n    value: typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\"),\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  printResolution: {\n    /** @type {number} */\n    value: 150,\n    kind: OptionKind.VIEWER,\n  },\n  removePageBorders: {\n    // #194\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  renderer: {\n    /** @type {string} */\n    value: \"canvas\",\n    kind: OptionKind.VIEWER,\n  },\n  sidebarViewOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  scrollModeOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  spreadModeOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  textLayerMode: {\n    /** @type {number} */\n    value: 1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  useOnlyCssZoom: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  viewerCssTheme: {\n    /** @type {number} */\n    value: typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\") ? 2 : 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  viewOnLoad: {\n    /** @type {boolean} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n\n  cMapPacked: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API,\n  },\n  cMapUrl: {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../external/bcmaps/\"\n        : \"../web/cmaps/\",\n    kind: OptionKind.API,\n  },\n  disableAutoFetch: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  disableFontFace: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  disableRange: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  disableStream: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  docBaseUrl: {\n    /** @type {string} */\n    value: \"\",\n    kind: OptionKind.API,\n  },\n  enableXfa: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  fontExtraProperties: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API,\n  },\n  isEvalSupported: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API,\n  },\n  maxImageSize: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.API,\n  },\n  pdfBug: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API,\n  },\n  standardFontDataUrl: {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../external/standard_fonts/\"\n        : \"../web/standard_fonts/\",\n    kind: OptionKind.API,\n  },\n  verbosity: {\n    /** @type {number} */\n    value: 1,\n    kind: OptionKind.API,\n  },\n\n  workerPort: {\n    /** @type {Object} */\n    value: null,\n    kind: OptionKind.WORKER,\n  },\n  workerSrc: {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../src/worker_loader.js\"\n        : \"./assets/pdf.worker.js\", // todo or pdf.worker-es5.js\n    kind: OptionKind.WORKER,\n  },\n};\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  defaultOptions.disablePreferences = {\n    /** @type {boolean} */\n    value: typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\"),\n    kind: OptionKind.VIEWER,\n  };\n  defaultOptions.locale = {\n    /** @type {string} */\n    value: typeof navigator !== \"undefined\" ? navigator.language : \"en-US\",\n    kind: OptionKind.VIEWER,\n  };\n  defaultOptions.sandboxBundleSrc = {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../build/dev-sandbox/pdf.sandbox.js\"\n        : \"../build/pdf.sandbox.js\",\n    kind: OptionKind.VIEWER,\n  };\n\n  defaultOptions.renderer.kind += OptionKind.PREFERENCE;\n} else if (PDFJSDev.test(\"CHROME\")) {\n  defaultOptions.disableTelemetry = {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  };\n  defaultOptions.sandboxBundleSrc = {\n    /** @type {string} */\n    value: \"../build/pdf.sandbox.js\",\n    kind: OptionKind.VIEWER,\n  };\n}\n\nconst userOptions = Object.create(null);\n\nclass AppOptions {\n  constructor() {\n    throw new Error(\"Cannot initialize AppOptions.\");\n  }\n\n  static get(name) {\n    const userOption = userOptions[name];\n    if (userOption !== undefined) {\n      return userOption;\n    }\n    const defaultOption = defaultOptions[name];\n    if (defaultOption !== undefined) {\n      return defaultOption.compatibility ?? defaultOption.value;\n    }\n    return undefined;\n  }\n\n  static getAll(kind = null) {\n    const options = Object.create(null);\n    for (const name in defaultOptions) {\n      const defaultOption = defaultOptions[name];\n      if (kind) {\n        if ((kind & defaultOption.kind) === 0) {\n          continue;\n        }\n        if (kind === OptionKind.PREFERENCE) {\n          const value = defaultOption.value,\n            valueType = typeof value;\n\n          if (\n            valueType === \"boolean\" ||\n            valueType === \"string\" ||\n            (valueType === \"number\" && Number.isInteger(value))\n          ) {\n            options[name] = value;\n            continue;\n          }\n          throw new Error(`Invalid type for preference: ${name}`);\n        }\n      }\n      const userOption = userOptions[name];\n      options[name] =\n        userOption !== undefined\n          ? userOption\n          : defaultOption.compatibility ?? defaultOption.value;\n    }\n    return options;\n  }\n\n  static set(name, value) {\n    userOptions[name] = value;\n  }\n\n  static setAll(options) {\n    for (const name in options) {\n      userOptions[name] = options[name];\n    }\n  }\n\n  static remove(name) {\n    delete userOptions[name];\n  }\n}\n\nexport { AppOptions, compatibilityParams, OptionKind };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals PDFBug, Stats */\n\nimport {\n  animationStarted,\n  apiPageLayoutToSpreadMode,\n  apiPageModeToSidebarView,\n  AutomationEventBus,\n  AutoPrintRegExp,\n  DEFAULT_SCALE_VALUE,\n  EventBus,\n  getActiveOrFocusedElement,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_SCALE,\n  MIN_SCALE,\n  noContextMenuHandler,\n  normalizeWheelEventDirection,\n  parseQueryString,\n  ProgressBar,\n  RendererType,\n  ScrollMode,\n  SidebarView,\n  SpreadMode,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport { AppOptions, compatibilityParams, OptionKind } from \"./app_options.js\";\nimport {\n  build,\n  createPromiseCapability,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  GlobalWorkerOptions,\n  InvalidPDFException,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  MissingPDFException,\n  OPS,\n  PDFWorker,\n  PermissionFlag,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  version,\n} from \"pdfjs-lib\";\nimport { CursorTool, PDFCursorTools } from \"./pdf_cursor_tools.js\";\nimport { PDFRenderingQueue, RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { OverlayManager } from \"./overlay_manager.js\";\nimport { PasswordPrompt } from \"./password_prompt.js\";\nimport { PDFAttachmentViewer } from \"./pdf_attachment_viewer.js\";\nimport { PDFDocumentProperties } from \"./pdf_document_properties.js\";\nimport { PDFFindBar } from \"./pdf_find_bar.js\";\nimport { PDFFindController } from \"./pdf_find_controller.js\";\nimport { PDFHistory } from \"./pdf_history.js\";\nimport { PDFLayerViewer } from \"./pdf_layer_viewer.js\";\nimport { PDFLinkService } from \"./pdf_link_service.js\";\nimport { PDFOutlineViewer } from \"./pdf_outline_viewer.js\";\nimport { PDFPresentationMode } from \"./pdf_presentation_mode.js\";\nimport { PDFScriptingManager } from \"./pdf_scripting_manager.js\";\nimport { PDFSidebar } from \"./pdf_sidebar.js\";\nimport { PDFSidebarResizer } from \"./pdf_sidebar_resizer.js\";\nimport { PDFThumbnailViewer } from \"./pdf_thumbnail_viewer.js\";\nimport { PDFViewer } from \"./pdf_viewer.js\";\nimport { SecondaryToolbar } from \"./secondary_toolbar.js\";\nimport { Toolbar } from \"./toolbar.js\";\nimport { ViewHistory } from \"./view_history.js\";\n\nconst DEFAULT_SCALE_DELTA = 1.1;\nconst DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000; // ms\nconst FORCE_PAGES_LOADED_TIMEOUT = 10000; // ms\nconst WHEEL_ZOOM_DISABLED_TIMEOUT = 1000; // ms\nconst ENABLE_PERMISSIONS_CLASS = \"enablePermissions\";\n\nconst ViewOnLoad = {\n  UNKNOWN: -1,\n  PREVIOUS: 0, // Default value.\n  INITIAL: 1,\n};\n\nconst ViewerCssTheme = {\n  AUTOMATIC: 0, // Default value.\n  LIGHT: 1,\n  DARK: 2,\n};\n\n// Keep these in sync with mozilla-central's Histograms.json.\nconst KNOWN_VERSIONS = [\n  \"1.0\",\n  \"1.1\",\n  \"1.2\",\n  \"1.3\",\n  \"1.4\",\n  \"1.5\",\n  \"1.6\",\n  \"1.7\",\n  \"1.8\",\n  \"1.9\",\n  \"2.0\",\n  \"2.1\",\n  \"2.2\",\n  \"2.3\",\n];\n// Keep these in sync with mozilla-central's Histograms.json.\nconst KNOWN_GENERATORS = [\n  \"acrobat distiller\",\n  \"acrobat pdfwriter\",\n  \"adobe livecycle\",\n  \"adobe pdf library\",\n  \"adobe photoshop\",\n  \"ghostscript\",\n  \"tcpdf\",\n  \"cairo\",\n  \"dvipdfm\",\n  \"dvips\",\n  \"pdftex\",\n  \"pdfkit\",\n  \"itext\",\n  \"prince\",\n  \"quarkxpress\",\n  \"mac os x\",\n  \"microsoft\",\n  \"openoffice\",\n  \"oracle\",\n  \"luradocument\",\n  \"pdf-xchange\",\n  \"antenna house\",\n  \"aspose.cells\",\n  \"fpdf\",\n];\n\nclass DefaultExternalServices {\n  constructor() {\n    throw new Error(\"Cannot initialize DefaultExternalServices.\");\n  }\n\n  static updateFindControlState(data) {}\n\n  static updateFindMatchesCount(data) {}\n\n  static initPassiveLoading(callbacks) {}\n\n  static async fallback(data) {}\n\n  static reportTelemetry(data) {}\n\n  static createDownloadManager(options) {\n    throw new Error(\"Not implemented: createDownloadManager\");\n  }\n\n  static createPreferences() {\n    throw new Error(\"Not implemented: createPreferences\");\n  }\n\n  static createL10n(options) {\n    throw new Error(\"Not implemented: createL10n\");\n  }\n\n  static createScripting(options) {\n    throw new Error(\"Not implemented: createScripting\");\n  }\n\n  static get supportsIntegratedFind() {\n    return shadow(this, \"supportsIntegratedFind\", false);\n  }\n\n  static get supportsDocumentFonts() {\n    return shadow(this, \"supportsDocumentFonts\", true);\n  }\n\n  static get supportedMouseWheelZoomModifierKeys() {\n    return shadow(this, \"supportedMouseWheelZoomModifierKeys\", {\n      ctrlKey: true,\n      metaKey: true,\n    });\n  }\n\n  static get isInAutomation() {\n    return shadow(this, \"isInAutomation\", false);\n  }\n}\n\nconst PDFViewerApplication = {\n  initialBookmark: document.location.hash.substring(1),\n  _initializedCapability: createPromiseCapability(),\n  _fellback: false,\n  appConfig: null,\n  pdfDocument: null,\n  pdfLoadingTask: null,\n  printService: null,\n  /** @type {PDFViewer} */\n  pdfViewer: null,\n  /** @type {PDFThumbnailViewer} */\n  pdfThumbnailViewer: null,\n  /** @type {PDFRenderingQueue} */\n  pdfRenderingQueue: null,\n  /** @type {PDFPresentationMode} */\n  pdfPresentationMode: null,\n  /** @type {PDFDocumentProperties} */\n  pdfDocumentProperties: null,\n  /** @type {PDFLinkService} */\n  pdfLinkService: null,\n  /** @type {PDFHistory} */\n  pdfHistory: null,\n  /** @type {PDFSidebar} */\n  pdfSidebar: null,\n  /** @type {PDFSidebarResizer} */\n  pdfSidebarResizer: null,\n  /** @type {PDFOutlineViewer} */\n  pdfOutlineViewer: null,\n  /** @type {PDFAttachmentViewer} */\n  pdfAttachmentViewer: null,\n  /** @type {PDFLayerViewer} */\n  pdfLayerViewer: null,\n  /** @type {PDFCursorTools} */\n  pdfCursorTools: null,\n  /** @type {PDFScriptingManager} */\n  pdfScriptingManager: null,\n  /** @type {ViewHistory} */\n  store: null,\n  /** @type {DownloadManager} */\n  downloadManager: null,\n  /** @type {OverlayManager} */\n  overlayManager: null,\n  /** @type {Preferences} */\n  preferences: null,\n  /** @type {Toolbar} */\n  toolbar: null,\n  /** @type {SecondaryToolbar} */\n  secondaryToolbar: null,\n  /** @type {EventBus} */\n  eventBus: null,\n  /** @type {IL10n} */\n  l10n: null,\n  isInitialViewSet: false,\n  downloadComplete: false,\n  isViewerEmbedded: window.parent !== window,\n  url: \"\",\n  baseUrl: \"\",\n  _downloadUrl: \"\",\n  externalServices: DefaultExternalServices,\n  _boundEvents: Object.create(null),\n  documentInfo: null,\n  metadata: null,\n  _contentDispositionFilename: null,\n  _contentLength: null,\n  _saveInProgress: false,\n  _wheelUnusedTicks: 0,\n  _idleCallbacks: new Set(),\n\n  // Called once when the document is loaded.\n  async initialize(appConfig) {\n    this.preferences = this.externalServices.createPreferences();\n    this.appConfig = appConfig;\n\n    await this._readPreferences();\n    await this._parseHashParameters();\n    this._forceCssTheme();\n    await this._initializeL10n();\n\n    if (\n      this.isViewerEmbedded &&\n      AppOptions.get(\"externalLinkTarget\") === LinkTarget.NONE\n    ) {\n      // Prevent external links from \"replacing\" the viewer,\n      // when it's embedded in e.g. an <iframe> or an <object>.\n      AppOptions.set(\"externalLinkTarget\", LinkTarget.TOP);\n    }\n    await this._initializeViewerComponents();\n\n    // Bind the various event handlers *after* the viewer has been\n    // initialized, to prevent errors if an event arrives too soon.\n    this.bindEvents();\n    this.bindWindowEvents();\n\n    // We can start UI localization now.\n    const appContainer = appConfig.appContainer || document.documentElement;\n    this.l10n.translate(appContainer).then(() => {\n      // Dispatch the 'localized' event on the `eventBus` once the viewer\n      // has been fully initialized and translated.\n      this.eventBus.dispatch(\"localized\", { source: this });\n    });\n\n    this._initializedCapability.resolve();\n\n    /* modified by ngx-extended-pdf-viewer #633.\n       The shadow() function must be called each time the PDF viewer is initialized. */\n    this.initializeLoadingBar();\n    /* #633 end of modification */\n  },\n\n  /**\n   * @private\n   */\n  async _readPreferences() {\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n      AppOptions.get(\"disablePreferences\")\n    ) {\n      // Give custom implementations of the default viewer a simpler way to\n      // opt-out of having the `Preferences` override existing `AppOptions`.\n      return;\n    }\n    try {\n      AppOptions.setAll(await this.preferences.getAll());\n    } catch (reason) {\n      console.error(`_readPreferences: \"${reason?.message}\".`);\n    }\n  },\n\n  /**\n   * Potentially parse special debugging flags in the hash section of the URL.\n   * @private\n   */\n  async _parseHashParameters() {\n    if (!AppOptions.get(\"pdfBugEnabled\")) {\n      return;\n    }\n    const hash = document.location.hash.substring(1);\n    if (!hash) {\n      return;\n    }\n    const params = parseQueryString(hash),\n      waitOn = [];\n\n    if (params.get(\"disableworker\") === \"true\") {\n      waitOn.push(loadFakeWorker());\n    }\n    if (params.has(\"disablerange\")) {\n      AppOptions.set(\"disableRange\", params.get(\"disablerange\") === \"true\");\n    }\n    if (params.has(\"disablestream\")) {\n      AppOptions.set(\"disableStream\", params.get(\"disablestream\") === \"true\");\n    }\n    if (params.has(\"disableautofetch\")) {\n      AppOptions.set(\n        \"disableAutoFetch\",\n        params.get(\"disableautofetch\") === \"true\"\n      );\n    }\n    if (params.has(\"disablefontface\")) {\n      AppOptions.set(\n        \"disableFontFace\",\n        params.get(\"disablefontface\") === \"true\"\n      );\n    }\n    if (params.has(\"disablehistory\")) {\n      AppOptions.set(\"disableHistory\", params.get(\"disablehistory\") === \"true\");\n    }\n    if (params.has(\"verbosity\")) {\n      AppOptions.set(\"verbosity\", params.get(\"verbosity\") | 0);\n    }\n    if (params.has(\"textlayer\")) {\n      switch (params.get(\"textlayer\")) {\n        case \"off\":\n          AppOptions.set(\"textLayerMode\", TextLayerMode.DISABLE);\n          break;\n        case \"visible\":\n        case \"shadow\":\n        case \"hover\":\n          const viewer = this.appConfig.viewerContainer;\n          viewer.classList.add(`textLayer-${params.get(\"textlayer\")}`);\n          break;\n      }\n    }\n    if (params.has(\"pdfbug\")) {\n      AppOptions.set(\"pdfBug\", true);\n      AppOptions.set(\"fontExtraProperties\", true);\n\n      const enabled = params.get(\"pdfbug\").split(\",\");\n      waitOn.push(initPDFBug(enabled));\n    }\n    // It is not possible to change locale for the (various) extension builds.\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n      params.has(\"locale\")\n    ) {\n      AppOptions.set(\"locale\", params.get(\"locale\"));\n    }\n\n    if (waitOn.length === 0) {\n      return;\n    }\n    try {\n      await Promise.all(waitOn);\n    } catch (reason) {\n      console.error(`_parseHashParameters: \"${reason.message}\".`);\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializeL10n() {\n    this.l10n = this.externalServices.createL10n(\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n        ? { locale: AppOptions.get(\"locale\") }\n        : null\n    );\n    const dir = await this.l10n.getDirection();\n    document.getElementsByTagName(\"html\")[0].dir = dir;\n  },\n\n  /**\n   * @private\n   */\n  _forceCssTheme() {\n    const cssTheme = AppOptions.get(\"viewerCssTheme\");\n    if (\n      cssTheme === ViewerCssTheme.AUTOMATIC ||\n      !Object.values(ViewerCssTheme).includes(cssTheme)\n    ) {\n      return;\n    }\n    try {\n      const styleSheet = document.styleSheets[0];\n      const cssRules = styleSheet?.cssRules || [];\n      const mediaMatcher =\n        typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")\n          ? \"-moz-toolbar-prefers-color-scheme\"\n          : \"prefers-color-scheme\";\n      const mediaRule = `(${mediaMatcher}: dark)`;\n      const mediaRegex = new RegExp(\n        `^@media \\\\(${mediaMatcher}: dark\\\\) {\\\\n\\\\s*([\\\\w\\\\s-.,:;/\\\\\\\\{}()]+)\\\\n}$`\n      );\n      for (let i = 0, ii = cssRules.length; i < ii; i++) {\n        const rule = cssRules[i];\n        if (rule instanceof CSSMediaRule && rule.media?.[0] === mediaRule) {\n          if (cssTheme === ViewerCssTheme.LIGHT) {\n            styleSheet.deleteRule(i);\n            return;\n          }\n          // cssTheme === ViewerCssTheme.DARK\n          const darkRules = mediaRegex.exec(rule.cssText);\n          if (darkRules?.[1]) {\n            styleSheet.deleteRule(i);\n            styleSheet.insertRule(darkRules[1], i);\n          }\n          return;\n        }\n      }\n    } catch (reason) {\n      console.error(`_forceCssTheme: \"${reason?.message}\".`);\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializeViewerComponents() {\n    const { appConfig, externalServices } = this;\n\n    let eventBus;\n    if (appConfig.eventBus) {\n      eventBus = appConfig.eventBus;\n    } else if (externalServices.isInAutomation) {\n      eventBus = new AutomationEventBus();\n    } else {\n      eventBus = new EventBus();\n    }\n    this.eventBus = eventBus;\n\n    this.overlayManager = new OverlayManager();\n\n    const pdfRenderingQueue = new PDFRenderingQueue();\n    pdfRenderingQueue.onIdle = this._cleanup.bind(this);\n    this.pdfRenderingQueue = pdfRenderingQueue;\n\n    const pdfLinkService = new PDFLinkService({\n      eventBus,\n      externalLinkTarget: AppOptions.get(\"externalLinkTarget\"),\n      externalLinkRel: AppOptions.get(\"externalLinkRel\"),\n      ignoreDestinationZoom: AppOptions.get(\"ignoreDestinationZoom\"),\n    });\n    this.pdfLinkService = pdfLinkService;\n\n    const downloadManager = externalServices.createDownloadManager();\n    this.downloadManager = downloadManager;\n\n    const findController = new PDFFindController({\n      linkService: pdfLinkService,\n      eventBus,\n      // #492 modified by ngx-extended-pdf-viewer\n      pageViewMode: AppOptions.get(\"pageViewMode\"),\n      // #492 modification end\n    });\n    this.findController = findController;\n\n    const pdfScriptingManager = new PDFScriptingManager({\n      eventBus,\n      sandboxBundleSrc:\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC || CHROME\")\n          ? AppOptions.get(\"sandboxBundleSrc\")\n          : null,\n      scriptingFactory: externalServices,\n      docPropertiesLookup: this._scriptingDocProperties.bind(this),\n    });\n    this.pdfScriptingManager = pdfScriptingManager;\n\n    const container = appConfig.mainContainer;\n    const viewer = appConfig.viewerContainer;\n    this.pdfViewer = new PDFViewer({\n      container,\n      viewer,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      downloadManager,\n      findController,\n      scriptingManager:\n        AppOptions.get(\"enableScripting\") && pdfScriptingManager,\n      renderer: AppOptions.get(\"renderer\"),\n      l10n: this.l10n,\n      textLayerMode: AppOptions.get(\"textLayerMode\"),\n      annotationMode: AppOptions.get(\"annotationMode\"),\n      imageResourcesPath: AppOptions.get(\"imageResourcesPath\"),\n      removePageBorders: AppOptions.get(\"removePageBorders\"), // #194\n      renderInteractiveForms: AppOptions.get(\"renderInteractiveForms\"),\n      enablePrintAutoRotate: AppOptions.get(\"enablePrintAutoRotate\"),\n      useOnlyCssZoom: AppOptions.get(\"useOnlyCssZoom\"),\n      maxCanvasPixels: AppOptions.get(\"maxCanvasPixels\"),\n      /** #495 modified by ngx-extended-pdf-viewer */\n      pageViewMode: AppOptions.get(\"pageViewMode\"),\n      /** end of modification */\n    });\n    pdfRenderingQueue.setViewer(this.pdfViewer);\n    pdfLinkService.setViewer(this.pdfViewer);\n    pdfScriptingManager.setViewer(this.pdfViewer);\n\n    this.pdfThumbnailViewer = new PDFThumbnailViewer({\n      container: appConfig.sidebar.thumbnailView,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      l10n: this.l10n,\n    });\n    pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer);\n\n    // The browsing history is only enabled when the viewer is standalone,\n    // i.e. not when it is embedded in a web page.\n    if (!this.isViewerEmbedded && !AppOptions.get(\"disableHistory\")) {\n      this.pdfHistory = new PDFHistory({\n        linkService: pdfLinkService,\n        eventBus,\n      });\n      pdfLinkService.setHistory(this.pdfHistory);\n    }\n\n    if (!this.supportsIntegratedFind) {\n      this.findBar = new PDFFindBar(appConfig.findBar, eventBus, this.l10n);\n    }\n\n    this.pdfDocumentProperties = new PDFDocumentProperties(\n      appConfig.documentProperties,\n      this.overlayManager,\n      eventBus,\n      this.l10n\n    );\n\n    this.pdfCursorTools = new PDFCursorTools({\n      container,\n      eventBus,\n      cursorToolOnLoad: AppOptions.get(\"cursorToolOnLoad\"),\n    });\n\n    this.toolbar = new Toolbar(appConfig.toolbar, eventBus, this.l10n);\n\n    this.secondaryToolbar = new SecondaryToolbar(\n      appConfig.secondaryToolbar,\n      container,\n      eventBus\n    );\n\n    if (this.supportsFullscreen) {\n      this.pdfPresentationMode = new PDFPresentationMode({\n        container,\n        pdfViewer: this.pdfViewer,\n        eventBus,\n      });\n    }\n\n    this.passwordPrompt = new PasswordPrompt(\n      appConfig.passwordOverlay,\n      this.overlayManager,\n      this.l10n,\n      this.isViewerEmbedded\n    );\n\n    this.pdfOutlineViewer = new PDFOutlineViewer({\n      container: appConfig.sidebar.outlineView,\n      eventBus,\n      linkService: pdfLinkService,\n    });\n\n    this.pdfAttachmentViewer = new PDFAttachmentViewer({\n      container: appConfig.sidebar.attachmentsView,\n      eventBus,\n      downloadManager,\n    });\n\n    this.pdfLayerViewer = new PDFLayerViewer({\n      container: appConfig.sidebar.layersView,\n      eventBus,\n      l10n: this.l10n,\n    });\n\n    this.pdfSidebar = new PDFSidebar({\n      elements: appConfig.sidebar,\n      pdfViewer: this.pdfViewer,\n      pdfThumbnailViewer: this.pdfThumbnailViewer,\n      eventBus,\n      l10n: this.l10n,\n    });\n    this.pdfSidebar.onToggled = this.forceRendering.bind(this);\n\n    this.pdfSidebarResizer = new PDFSidebarResizer(\n      appConfig.sidebarResizer,\n      eventBus,\n      this.l10n\n    );\n  },\n\n  run(config) {\n    this.initialize(config).then(webViewerInitialized);\n  },\n\n  get initialized() {\n    return this._initializedCapability.settled;\n  },\n\n  get initializedPromise() {\n    return this._initializedCapability.promise;\n  },\n\n  zoomIn(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n\n    let newScale = this.pdfViewer.currentScale;\n    // modified by ngx-extended-pdf-viewer #367\n    let maxScale = Number(AppOptions.get(\"maxZoom\"));\n    if (!maxScale) {\n      maxScale = MAX_SCALE;\n    }\n    do {\n      newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.ceil(newScale * 10) / 10;\n      newScale = Math.min(maxScale, newScale);\n    } while (--ticks > 0 && newScale < maxScale);\n    // end of modification\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomOut(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    let newScale = this.pdfViewer.currentScale;\n    // modified by ngx-extended-pdf-viewer #367\n    let minScale = Number(AppOptions.get(\"minZoom\"));\n    if (!minScale) {\n      minScale = MIN_SCALE;\n    }\n    do {\n      newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.floor(newScale * 10) / 10;\n      newScale = Math.max(minScale, newScale);\n    } while (--ticks > 0 && newScale > minScale);\n    // end of modification\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomReset() {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n  },\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  },\n\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  },\n\n  set page(val) {\n    this.pdfViewer.currentPageNumber = val;\n  },\n\n  get supportsPrinting() {\n    return PDFPrintServiceFactory.instance.supportsPrinting;\n  },\n\n  get supportsFullscreen() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return shadow(this, \"supportsFullscreen\", document.fullscreenEnabled);\n    }\n    return shadow(\n      this,\n      \"supportsFullscreen\",\n      document.fullscreenEnabled ||\n        document.mozFullScreenEnabled ||\n        document.webkitFullscreenEnabled\n    );\n  },\n\n  get supportsIntegratedFind() {\n    return this.externalServices.supportsIntegratedFind;\n  },\n\n  get supportsDocumentFonts() {\n    return this.externalServices.supportsDocumentFonts;\n  },\n\n  /* modified by ngx-extended-pdf-viewer #633. The shadow() function        */\n  /* replaces the getter by a property,so when a new instance of            */\n  /* ngx-extended-pdf-viewer is opened, it still references the old viewer. */\n  /** The bug fix solves this problem.                                      */\n  initializeLoadingBar() {\n    const bar = new ProgressBar(\"#loadingBar\");\n    bar.hide();\n    return shadow(this, \"loadingBar\", bar);\n  },\n  // get loadingBar() {\n  //  const bar = new ProgressBar(\"#loadingBar\");\n  //  return shadow(this, \"loadingBar\", bar);\n  // },\n  /** end of modification */\n\n  get supportedMouseWheelZoomModifierKeys() {\n    return this.externalServices.supportedMouseWheelZoomModifierKeys;\n  },\n\n  initPassiveLoading() {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      !PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      throw new Error(\"Not implemented: initPassiveLoading\");\n    }\n    this.externalServices.initPassiveLoading({\n      onOpenWithTransport: (url, length, transport) => {\n        this.open(url, { length, range: transport });\n      },\n      onOpenWithData: (data, contentDispositionFilename) => {\n        if (isPdfFile(contentDispositionFilename)) {\n          this._contentDispositionFilename = contentDispositionFilename;\n        }\n        this.open(data);\n      },\n      onOpenWithURL: (url, length, originalUrl) => {\n        const file = originalUrl !== undefined ? { url, originalUrl } : url;\n        const args = length !== undefined ? { length } : null;\n\n        this.open(file, args);\n      },\n      onError: err => {\n        this.l10n.get(\"loading_error\").then(msg => {\n          this._documentError(msg, err);\n        });\n      },\n      onProgress(loaded, total) {\n        this.progress(loaded / total);\n        // #588 modified by ngx-extended-pdf-viewer\n        this.eventBus.dispatch(\"progress\", {\n          source: this,\n          type: \"load\",\n          total,\n          loaded,\n          percent: (100 * loaded) / total,\n        });\n        // #588 end of modification\n      },\n    });\n  },\n\n  setTitleUsingUrl(url = \"\", downloadUrl = null) {\n    this.url = url;\n    this.baseUrl = url.split(\"#\")[0];\n    if (downloadUrl) {\n      this._downloadUrl =\n        downloadUrl === url ? this.baseUrl : downloadUrl.split(\"#\")[0];\n    }\n    let title = getPdfFilenameFromUrl(url, \"\");\n    if (!title) {\n      try {\n        title = decodeURIComponent(getFilenameFromUrl(url)) || url;\n      } catch (ex) {\n        // decodeURIComponent may throw URIError,\n        // fall back to using the unprocessed url in that case\n        title = url;\n      }\n    }\n    this.setTitle(title);\n  },\n\n  setTitle(title) {\n    if (this.isViewerEmbedded) {\n      // Embedded PDF viewers should not be changing their parent page's title.\n      return;\n    }\n    document.title = title;\n  },\n\n  get _docFilename() {\n    // Use `this.url` instead of `this.baseUrl` to perform filename detection\n    // based on the reference fragment as ultimate fallback if needed.\n    return this._contentDispositionFilename || getPdfFilenameFromUrl(this.url);\n  },\n\n  /**\n   * @private\n   */\n  _hideViewBookmark() {\n    // URL does not reflect proper document location - hiding some buttons.\n    const { toolbar, secondaryToolbar } = this.appConfig;\n    toolbar.viewBookmark.hidden = true;\n    secondaryToolbar.viewBookmarkButton.hidden = true;\n  },\n\n  /**\n   * @private\n   */\n  _cancelIdleCallbacks() {\n    if (!this._idleCallbacks.size) {\n      return;\n    }\n    for (const callback of this._idleCallbacks) {\n      window.cancelIdleCallback(callback);\n    }\n    this._idleCallbacks.clear();\n  },\n\n  /**\n   * Closes opened PDF document.\n   * @returns {Promise} - Returns the promise, which is resolved when all\n   *                      destruction is completed.\n   */\n  async close() {\n    this._unblockDocumentLoadEvent();\n    this._hideViewBookmark();\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      const { container } = this.appConfig.errorWrapper;\n      container.hidden = true;\n    }\n\n    if (!this.pdfLoadingTask) {\n      return;\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this.pdfDocument?.annotationStorage.size > 0 &&\n      this._annotationStorageModified\n    ) {\n      try {\n        // Trigger saving, to prevent data loss in forms; see issue 12257.\n        await this.save({ sourceEventType: \"save\" });\n      } catch (reason) {\n        // Ignoring errors, to ensure that document closing won't break.\n      }\n    }\n    const promises = [];\n\n    promises.push(this.pdfLoadingTask.destroy());\n    this.pdfLoadingTask = null;\n\n    if (this.pdfDocument) {\n      this.pdfDocument = null;\n\n      this.pdfThumbnailViewer.setDocument(null);\n      this.pdfViewer.setDocument(null);\n      this.pdfLinkService.setDocument(null);\n      this.pdfDocumentProperties.setDocument(null);\n    }\n    webViewerResetPermissions();\n    this.pdfLinkService.externalLinkEnabled = true;\n    this._fellback = false;\n    this.store = null;\n    this.isInitialViewSet = false;\n    this.downloadComplete = false;\n    this.url = \"\";\n    this.baseUrl = \"\";\n    this._downloadUrl = \"\";\n    this.documentInfo = null;\n    this.metadata = null;\n    this._contentDispositionFilename = null;\n    this._contentLength = null;\n    this._saveInProgress = false;\n\n    this._cancelIdleCallbacks();\n    promises.push(this.pdfScriptingManager.destroyPromise);\n\n    this.pdfSidebar.reset();\n    this.pdfOutlineViewer.reset();\n    this.pdfAttachmentViewer.reset();\n    this.pdfLayerViewer.reset();\n\n    this.pdfHistory?.reset();\n    this.findBar?.reset();\n    this.toolbar.reset();\n    this.secondaryToolbar.reset();\n\n    if (typeof PDFBug !== \"undefined\") {\n      PDFBug.cleanup();\n    }\n    await Promise.all(promises);\n  },\n\n  /**\n   * Opens PDF document specified by URL or array with additional arguments.\n   * @param {string|TypedArray|ArrayBuffer} file - PDF location or binary data.\n   * @param {Object} [args] - Additional arguments for the getDocument call,\n   *                          e.g. HTTP headers ('httpHeaders') or alternative\n   *                          data transport ('range').\n   * @returns {Promise} - Returns the promise, which is resolved when document\n   *                      is opened.\n   */\n  async open(file, args) {\n    if (this.pdfLoadingTask) {\n      // We need to destroy already opened document.\n      await this.close();\n    }\n    // Set the necessary global worker parameters, using the available options.\n    const workerParameters = AppOptions.getAll(OptionKind.WORKER);\n    for (const key in workerParameters) {\n      GlobalWorkerOptions[key] = workerParameters[key];\n    }\n\n    const parameters = Object.create(null);\n    if (typeof file === \"string\") {\n      // URL\n      this.setTitleUsingUrl(file, /* downloadUrl = */ file);\n      parameters.url = file;\n    } else if (file && \"byteLength\" in file) {\n      // ArrayBuffer\n      parameters.data = file;\n    } else if (file.url && file.originalUrl) {\n      this.setTitleUsingUrl(file.originalUrl, /* downloadUrl = */ file.url);\n      parameters.url = file.url;\n    }\n    // Set the necessary API parameters, using the available options.\n    const apiParameters = AppOptions.getAll(OptionKind.API);\n    for (const key in apiParameters) {\n      let value = apiParameters[key];\n\n      if (key === \"docBaseUrl\" && !value) {\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n          value = document.URL.split(\"#\")[0];\n        } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n          value = this.baseUrl;\n        }\n      }\n      parameters[key] = value;\n    }\n    // Finally, update the API parameters with the arguments (if they exist).\n    if (args) {\n      for (const key in args) {\n        parameters[key] = args[key];\n      }\n    }\n\n    const loadingTask = getDocument(parameters);\n    this.pdfLoadingTask = loadingTask;\n\n    loadingTask.onPassword = (updateCallback, reason) => {\n      this.pdfLinkService.externalLinkEnabled = false;\n      this.passwordPrompt.setUpdateCallback(updateCallback, reason);\n      this.passwordPrompt.open();\n    };\n\n    loadingTask.onProgress = ({ loaded, total }) => {\n      this.progress(loaded / total);\n      // #588 modified by ngx-extended-pdf-viewer\n      this.eventBus.dispatch(\"progress\", {\n        source: this,\n        type: \"load\",\n        total,\n        loaded,\n        percent: (100 * loaded) / total,\n      });\n      // #588 end of modification\n    };\n\n    // Listen for unsupported features to trigger the fallback UI.\n    loadingTask.onUnsupportedFeature = this.fallback.bind(this);\n\n    this.loadingBar.show(); // #707 added by ngx-extended-pdf-viewer\n    return loadingTask.promise.then(\n      pdfDocument => {\n        this.load(pdfDocument);\n      },\n      exception => {\n        if (loadingTask !== this.pdfLoadingTask) {\n          return undefined; // Ignore errors for previously opened PDF files.\n        }\n\n        let key = \"loading_error\";\n        if (exception instanceof InvalidPDFException) {\n          key = \"invalid_file_error\";\n        } else if (exception instanceof MissingPDFException) {\n          key = \"missing_file_error\";\n        } else if (exception instanceof UnexpectedResponseException) {\n          key = \"unexpected_response_error\";\n        }\n        return this.l10n.get(key).then(msg => {\n          this._documentError(msg, { message: exception?.message });\n          this.onError(exception);\n          throw exception;\n        });\n      }\n    );\n  },\n\n  /**\n   * @private\n   */\n  _ensureDownloadComplete() {\n    if (this.pdfDocument && this.downloadComplete) {\n      return;\n    }\n    throw new Error(\"PDF document not downloaded.\");\n  },\n\n  async download({ sourceEventType = \"download\" } = {}) {\n    const url = this._downloadUrl,\n      filename = this._docFilename;\n    try {\n      this._ensureDownloadComplete();\n\n      const data = await this.pdfDocument.getData();\n      const blob = new Blob([data], { type: \"application/pdf\" });\n\n      await this.downloadManager.download(blob, url, filename, sourceEventType);\n    } catch (reason) {\n      // When the PDF document isn't ready, or the PDF file is still\n      // downloading, simply download using the URL.\n      await this.downloadManager.downloadUrl(url, filename);\n    }\n  },\n\n  async save({ sourceEventType = \"download\" } = {}) {\n    if (this._saveInProgress) {\n      return;\n    }\n    this._saveInProgress = true;\n    await this.pdfScriptingManager.dispatchWillSave();\n\n    const url = this._downloadUrl,\n      filename = this._docFilename;\n    try {\n      this._ensureDownloadComplete();\n\n      const data = await this.pdfDocument.saveDocument();\n      const blob = new Blob([data], { type: \"application/pdf\" });\n\n      await this.downloadManager.download(blob, url, filename, sourceEventType);\n    } catch (reason) {\n      // When the PDF document isn't ready, or the PDF file is still\n      // downloading, simply fallback to a \"regular\" download.\n      await this.download({ sourceEventType });\n    } finally {\n      await this.pdfScriptingManager.dispatchDidSave();\n      this._saveInProgress = false;\n    }\n  },\n\n  downloadOrSave(options) {\n    if (this.pdfDocument?.annotationStorage.size > 0) {\n      this.save(options);\n    } else {\n      this.download(options);\n    }\n  },\n\n  fallback(featureId) {\n    this.externalServices.reportTelemetry({\n      type: \"unsupportedFeature\",\n      featureId,\n    });\n\n    // Only trigger the fallback once so we don't spam the user with messages\n    // for one PDF.\n    if (this._fellback) {\n      return;\n    }\n    this._fellback = true;\n\n    this.externalServices\n      .fallback({\n        featureId,\n        url: this.baseUrl,\n      })\n      .then(download => {\n        if (!download) {\n          return;\n        }\n        this.download({ sourceEventType: \"download\" });\n      });\n  },\n\n  /**\n   * Show the error box; used for errors affecting loading and/or parsing of\n   * the entire PDF document.\n   */\n  _documentError(message, moreInfo = null) {\n    this._unblockDocumentLoadEvent();\n\n    this._otherError(message, moreInfo);\n  },\n\n  /**\n   * Show the error box; used for errors affecting e.g. only a single page.\n   *\n   * @param {string} message - A message that is human readable.\n   * @param {Object} [moreInfo] - Further information about the error that is\n   *                              more technical.  Should have a 'message' and\n   *                              optionally a 'stack' property.\n   */\n  _otherError(message, moreInfo = null) {\n    const moreInfoText = [\n      this.l10n.get(\"error_version_info\", {\n        version: version || \"?\",\n        build: build || \"?\",\n      }),\n    ];\n    if (moreInfo) {\n      moreInfoText.push(\n        this.l10n.get(\"error_message\", { message: moreInfo.message })\n      );\n      if (moreInfo.stack) {\n        moreInfoText.push(\n          this.l10n.get(\"error_stack\", { stack: moreInfo.stack })\n        );\n      } else {\n        if (moreInfo.filename) {\n          moreInfoText.push(\n            this.l10n.get(\"error_file\", { file: moreInfo.filename })\n          );\n        }\n        if (moreInfo.lineNumber) {\n          moreInfoText.push(\n            this.l10n.get(\"error_line\", { line: moreInfo.lineNumber })\n          );\n        }\n      }\n    }\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      const errorWrapperConfig = this.appConfig.errorWrapper;\n      const errorWrapper = errorWrapperConfig.container;\n      errorWrapper.hidden = false;\n\n      const errorMessage = errorWrapperConfig.errorMessage;\n      errorMessage.textContent = message;\n\n      const closeButton = errorWrapperConfig.closeButton;\n      closeButton.onclick = function () {\n        errorWrapper.hidden = true;\n      };\n\n      const errorMoreInfo = errorWrapperConfig.errorMoreInfo;\n      const moreInfoButton = errorWrapperConfig.moreInfoButton;\n      const lessInfoButton = errorWrapperConfig.lessInfoButton;\n      moreInfoButton.onclick = function () {\n        errorMoreInfo.hidden = false;\n        moreInfoButton.hidden = true;\n        lessInfoButton.hidden = false;\n        errorMoreInfo.style.height = errorMoreInfo.scrollHeight + \"px\";\n      };\n      lessInfoButton.onclick = function () {\n        errorMoreInfo.hidden = true;\n        moreInfoButton.hidden = false;\n        lessInfoButton.hidden = true;\n      };\n      moreInfoButton.oncontextmenu = noContextMenuHandler;\n      lessInfoButton.oncontextmenu = noContextMenuHandler;\n      closeButton.oncontextmenu = noContextMenuHandler;\n      moreInfoButton.hidden = false;\n      lessInfoButton.hidden = true;\n      Promise.all(moreInfoText).then(parts => {\n        errorMoreInfo.value = parts.join(\"\\n\");\n      });\n    } else {\n      Promise.all(moreInfoText).then(parts => {\n        console.error(message + \"\\n\" + parts.join(\"\\n\"));\n      });\n      this.fallback();\n    }\n  },\n\n  progress(level) {\n    if (this.downloadComplete) {\n      // Don't accidentally show the loading bar again when the entire file has\n      // already been fetched (only an issue when disableAutoFetch is enabled).\n      return;\n    }\n    const percent = Math.round(level * 100);\n    // When we transition from full request to range requests, it's possible\n    // that we discard some of the loaded data. This can cause the loading\n    // bar to move backwards. So prevent this by only updating the bar if it\n    // increases.\n    if (percent > this.loadingBar.percent || isNaN(percent)) {\n      this.loadingBar.percent = percent;\n\n      // When disableAutoFetch is enabled, it's not uncommon for the entire file\n      // to never be fetched (depends on e.g. the file structure). In this case\n      // the loading bar will not be completely filled, nor will it be hidden.\n      // To prevent displaying a partially filled loading bar permanently, we\n      // hide it when no data has been loaded during a certain amount of time.\n      const disableAutoFetch = this.pdfDocument\n        ? this.pdfDocument.loadingParams.disableAutoFetch\n        : AppOptions.get(\"disableAutoFetch\");\n\n      if (disableAutoFetch && percent) {\n        if (this.disableAutoFetchLoadingBarTimeout) {\n          clearTimeout(this.disableAutoFetchLoadingBarTimeout);\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }\n        this.loadingBar.show();\n\n        this.disableAutoFetchLoadingBarTimeout = setTimeout(() => {\n          this.loadingBar.hide();\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT);\n      }\n    }\n  },\n\n  load(pdfDocument) {\n    this.pdfDocument = pdfDocument;\n\n    pdfDocument.getDownloadInfo().then(({ length }) => {\n      this._contentLength = length; // Ensure that the correct length is used.\n      this.downloadComplete = true;\n      this.loadingBar.hide();\n\n      firstPagePromise.then(() => {\n        this.eventBus.dispatch(\"documentloaded\", { source: this });\n      });\n    });\n\n    // Since the `setInitialView` call below depends on this being resolved,\n    // fetch it early to avoid delaying initial rendering of the PDF document.\n    const pageLayoutPromise = pdfDocument.getPageLayout().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n    const pageModePromise = pdfDocument.getPageMode().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n    const openActionPromise = pdfDocument.getOpenAction().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n\n    this.toolbar.setPagesCount(pdfDocument.numPages, false);\n    this.secondaryToolbar.setPagesCount(pdfDocument.numPages);\n\n    let baseDocumentUrl;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      baseDocumentUrl = null;\n    } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n      baseDocumentUrl = this.baseUrl;\n    } else if (PDFJSDev.test(\"CHROME\")) {\n      baseDocumentUrl = location.href.split(\"#\")[0];\n    }\n    this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl);\n    this.pdfDocumentProperties.setDocument(pdfDocument, this.url);\n\n    const pdfViewer = this.pdfViewer;\n    pdfViewer.setDocument(pdfDocument);\n    const { firstPagePromise, onePageRendered, pagesPromise } = pdfViewer;\n\n    const pdfThumbnailViewer = this.pdfThumbnailViewer;\n    pdfThumbnailViewer.setDocument(pdfDocument);\n\n    const storedPromise = (this.store = new ViewHistory(\n      pdfDocument.fingerprints[0]\n    ))\n      .getMultiple({\n        page: null,\n        zoom: DEFAULT_SCALE_VALUE,\n        scrollLeft: \"0\",\n        scrollTop: \"0\",\n        rotation: null,\n        sidebarView: SidebarView.UNKNOWN,\n        scrollMode: ScrollMode.UNKNOWN,\n        spreadMode: SpreadMode.UNKNOWN,\n      })\n      .catch(() => {\n        /* Unable to read from storage; ignoring errors. */\n        return Object.create(null);\n      });\n\n    firstPagePromise.then(pdfPage => {\n      this.loadingBar.setWidth(this.appConfig.viewerContainer);\n      this._initializeAnnotationStorageCallbacks(pdfDocument);\n\n      Promise.all([\n        animationStarted,\n        storedPromise,\n        pageLayoutPromise,\n        pageModePromise,\n        openActionPromise,\n      ])\n        .then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => {\n          const viewOnLoad = AppOptions.get(\"viewOnLoad\");\n\n          this._initializePdfHistory({\n            fingerprint: pdfDocument.fingerprints[0],\n            viewOnLoad,\n            initialDest: openAction?.dest,\n          });\n          const initialBookmark = this.initialBookmark;\n\n          // Initialize the default values, from user preferences.\n          const zoom = AppOptions.get(\"defaultZoomValue\");\n          let hash = zoom ? `zoom=${zoom}` : null;\n\n          let rotation = null;\n          let sidebarView = AppOptions.get(\"sidebarViewOnLoad\");\n          let scrollMode = AppOptions.get(\"scrollModeOnLoad\");\n          let spreadMode = AppOptions.get(\"spreadModeOnLoad\");\n\n          if (stored.page && viewOnLoad !== ViewOnLoad.INITIAL) {\n            hash =\n              `page=${stored.page}&zoom=${zoom || stored.zoom},` +\n              `${stored.scrollLeft},${stored.scrollTop}`;\n\n            rotation = parseInt(stored.rotation, 10);\n            // Always let user preference take precedence over the view history.\n            if (sidebarView === SidebarView.UNKNOWN) {\n              sidebarView = stored.sidebarView | 0;\n            }\n            if (scrollMode === ScrollMode.UNKNOWN) {\n              scrollMode = stored.scrollMode | 0;\n            }\n            if (spreadMode === SpreadMode.UNKNOWN) {\n              spreadMode = stored.spreadMode | 0;\n            }\n          }\n          // Always let the user preference/view history take precedence.\n          if (pageMode && sidebarView === SidebarView.UNKNOWN) {\n            sidebarView = apiPageModeToSidebarView(pageMode);\n          }\n          if (pageLayout && spreadMode === SpreadMode.UNKNOWN) {\n            spreadMode = apiPageLayoutToSpreadMode(pageLayout);\n          }\n\n          this.setInitialView(hash, {\n            rotation,\n            sidebarView,\n            scrollMode,\n            spreadMode,\n          });\n          this.eventBus.dispatch(\"documentinit\", { source: this });\n          // Make all navigation keys work on document load,\n          // unless the viewer is embedded in a web page.\n          if (!this.isViewerEmbedded) {\n            pdfViewer.focus();\n          }\n\n          // Currently only the \"copy\"-permission is supported, hence we delay\n          // the `getPermissions` API call until *after* rendering has started.\n          this._initializePermissions(pdfDocument);\n\n          // For documents with different page sizes, once all pages are\n          // resolved, ensure that the correct location becomes visible on load.\n          // (To reduce the risk, in very large and/or slow loading documents,\n          //  that the location changes *after* the user has started interacting\n          //  with the viewer, wait for either `pagesPromise` or a timeout.)\n          await Promise.race([\n            pagesPromise,\n            new Promise(resolve => {\n              setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT);\n            }),\n          ]);\n          if (!initialBookmark && !hash) {\n            return;\n          }\n          if (pdfViewer.hasEqualPageSizes) {\n            return;\n          }\n          this.initialBookmark = initialBookmark;\n\n          // eslint-disable-next-line no-self-assign\n          pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n          // Re-apply the initial document location.\n          this.setInitialView(hash);\n        })\n        .catch(() => {\n          // Ensure that the document is always completely initialized,\n          // even if there are any errors thrown above.\n          this.setInitialView();\n        })\n        .then(function () {\n          // At this point, rendering of the initial page(s) should always have\n          // started (and may even have completed).\n          // To prevent any future issues, e.g. the document being completely\n          // blank on load, always trigger rendering here.\n          pdfViewer.update();\n        });\n    });\n\n    pagesPromise.then(() => {\n      this._unblockDocumentLoadEvent();\n\n      this._initializeAutoPrint(pdfDocument, openActionPromise);\n    });\n\n    onePageRendered.then(() => {\n      pdfDocument.getOutline().then(outline => {\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the outline resolved.\n        }\n        this.pdfOutlineViewer.render({ outline, pdfDocument });\n      });\n      pdfDocument.getAttachments().then(attachments => {\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the attachments resolved.\n        }\n        this.pdfAttachmentViewer.render({ attachments });\n      });\n      // Ensure that the layers accurately reflects the current state in the\n      // viewer itself, rather than the default state provided by the API.\n      pdfViewer.optionalContentConfigPromise.then(optionalContentConfig => {\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the layers resolved.\n        }\n        this.pdfLayerViewer.render({ optionalContentConfig, pdfDocument });\n      });\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        \"requestIdleCallback\" in window\n      ) {\n        const callback = window.requestIdleCallback(\n          () => {\n            this._collectTelemetry(pdfDocument);\n            this._idleCallbacks.delete(callback);\n          },\n          { timeout: 1000 }\n        );\n        this._idleCallbacks.add(callback);\n      }\n    });\n\n    this._initializePageLabels(pdfDocument);\n    this._initializeMetadata(pdfDocument);\n  },\n\n  /**\n   * @private\n   */\n  async _scriptingDocProperties(pdfDocument) {\n    if (!this.documentInfo) {\n      // It should be *extremely* rare for metadata to not have been resolved\n      // when this code runs, but ensure that we handle that case here.\n      await new Promise(resolve => {\n        this.eventBus._on(\"metadataloaded\", resolve, { once: true });\n      });\n      if (pdfDocument !== this.pdfDocument) {\n        return null; // The document was closed while the metadata resolved.\n      }\n    }\n    if (!this._contentLength) {\n      // Always waiting for the entire PDF document to be loaded will, most\n      // likely, delay sandbox-creation too much in the general case for all\n      // PDF documents which are not provided as binary data to the API.\n      // Hence we'll simply have to trust that the `contentLength` (as provided\n      // by the server), when it exists, is accurate enough here.\n      await new Promise(resolve => {\n        this.eventBus._on(\"documentloaded\", resolve, { once: true });\n      });\n      if (pdfDocument !== this.pdfDocument) {\n        return null; // The document was closed while the downloadInfo resolved.\n      }\n    }\n\n    return {\n      ...this.documentInfo,\n      baseURL: this.baseUrl,\n      filesize: this._contentLength,\n      filename: this._docFilename,\n      metadata: this.metadata?.getRaw(),\n      authors: this.metadata?.get(\"dc:creator\"),\n      numPages: this.pagesCount,\n      URL: this.url,\n    };\n  },\n\n  /**\n   * A place to fetch data for telemetry after one page is rendered and the\n   * viewer is idle.\n   * @private\n   */\n  async _collectTelemetry(pdfDocument) {\n    const markInfo = await this.pdfDocument.getMarkInfo();\n    if (pdfDocument !== this.pdfDocument) {\n      return; // Document was closed while waiting for mark info.\n    }\n    const tagged = markInfo?.Marked || false;\n    this.externalServices.reportTelemetry({\n      type: \"tagged\",\n      tagged,\n    });\n  },\n\n  /**\n   * @private\n   */\n  async _initializeAutoPrint(pdfDocument, openActionPromise) {\n    const [openAction, javaScript] = await Promise.all([\n      openActionPromise,\n      !this.pdfViewer.enableScripting ? pdfDocument.getJavaScript() : null,\n    ]);\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the auto print data resolved.\n    }\n    let triggerAutoPrint = false;\n\n    if (openAction?.action === \"Print\") {\n      triggerAutoPrint = true;\n    }\n    if (javaScript) {\n      javaScript.some(js => {\n        if (!js) {\n          // Don't warn/fallback for empty JavaScript actions.\n          return false;\n        }\n        console.warn(\"Warning: JavaScript support is not enabled\");\n        this.fallback(UNSUPPORTED_FEATURES.javaScript);\n        return true;\n      });\n\n      if (!triggerAutoPrint) {\n        // Hack to support auto printing.\n        for (const js of javaScript) {\n          if (js && AutoPrintRegExp.test(js)) {\n            triggerAutoPrint = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (triggerAutoPrint) {\n      this.triggerPrinting();\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializeMetadata(pdfDocument) {\n    const { info, metadata, contentDispositionFilename, contentLength } =\n      await pdfDocument.getMetadata();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the metadata resolved.\n    }\n    this.documentInfo = info;\n    this.metadata = metadata;\n    this._contentDispositionFilename ??= contentDispositionFilename;\n    this._contentLength ??= contentLength; // See `getDownloadInfo`-call above.\n\n    // Provides some basic debug information\n    const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n    if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n      console.log(\n        \"PDF viewer: ngx-extended-pdf-viewer running on pdf.js \" +\n          (window[\"pdfjs-dist/build/pdf\"]\n            ? window[\"pdfjs-dist/build/pdf\"].version\n            : \" developer version (?)\")\n      );\n      console.log(\n        `PDF ${pdfDocument.fingerprints[0]} [${info.PDFFormatVersion} ` +\n          `${(info.Producer || \"-\").trim()} / ${(info.Creator || \"-\").trim()}] ` +\n          `(PDF.js: ${version || \"-\"}` +\n          `${\n            this.pdfViewer.enableWebGL ? \" [WebGL]\" : \"\"\n          }) modified by ngx-extended-pdf-viewer)`\n      );\n    }\n\n    let pdfTitle = info?.Title;\n\n    const metadataTitle = metadata?.get(\"dc:title\");\n    if (metadataTitle) {\n      // Ghostscript can produce invalid 'dc:title' Metadata entries:\n      //  - The title may be \"Untitled\" (fixes bug 1031612).\n      //  - The title may contain incorrectly encoded characters, which thus\n      //    looks broken, hence we ignore the Metadata entry when it\n      //    contains characters from the Specials Unicode block\n      //    (fixes bug 1605526).\n      if (\n        metadataTitle !== \"Untitled\" &&\n        !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)\n      ) {\n        pdfTitle = metadataTitle;\n      }\n    }\n    if (pdfTitle) {\n      this.setTitle(\n        `${pdfTitle} - ${contentDispositionFilename || document.title}`\n      );\n    } else if (contentDispositionFilename) {\n      this.setTitle(contentDispositionFilename);\n    }\n\n    if (\n      info.IsXFAPresent &&\n      !info.IsAcroFormPresent &&\n      // Note: `isPureXfa === true` implies that `enableXfa = true` was set.\n      !pdfDocument.isPureXfa\n    ) {\n      console.warn(\"Warning: XFA support is not enabled\");\n      this.fallback(UNSUPPORTED_FEATURES.forms);\n    } else if (\n      (info.IsAcroFormPresent || info.IsXFAPresent) &&\n      !this.pdfViewer.renderForms\n    ) {\n      console.warn(\"Warning: Interactive form support is not enabled\");\n      this.fallback(UNSUPPORTED_FEATURES.forms);\n    }\n\n    if (info.IsSignaturesPresent) {\n      console.warn(\"Warning: Digital signatures validation is not supported\");\n      this.fallback(UNSUPPORTED_FEATURES.signatures);\n    }\n\n    // Telemetry labels must be C++ variable friendly.\n    let versionId = \"other\";\n    if (KNOWN_VERSIONS.includes(info.PDFFormatVersion)) {\n      versionId = `v${info.PDFFormatVersion.replace(\".\", \"_\")}`;\n    }\n    let generatorId = \"other\";\n    if (info.Producer) {\n      const producer = info.Producer.toLowerCase();\n      KNOWN_GENERATORS.some(function (generator) {\n        if (!producer.includes(generator)) {\n          return false;\n        }\n        generatorId = generator.replace(/[ .-]/g, \"_\");\n        return true;\n      });\n    }\n    let formType = null;\n    if (info.IsXFAPresent) {\n      formType = \"xfa\";\n    } else if (info.IsAcroFormPresent) {\n      formType = \"acroform\";\n    }\n    this.externalServices.reportTelemetry({\n      type: \"documentInfo\",\n      version: versionId,\n      generator: generatorId,\n      formType,\n    });\n\n    this.eventBus.dispatch(\"metadataloaded\", { source: this });\n  },\n\n  /**\n   * @private\n   */\n  async _initializePageLabels(pdfDocument) {\n    const labels = await pdfDocument.getPageLabels();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the page labels resolved.\n    }\n    if (!labels || AppOptions.get(\"disablePageLabels\")) {\n      return;\n    }\n    const numLabels = labels.length;\n    if (numLabels !== this.pagesCount) {\n      console.error(\n        \"The number of Page Labels does not match the number of pages in the document.\"\n      );\n      return;\n    }\n    let i = 0;\n    // Ignore page labels that correspond to standard page numbering.\n    while (i < numLabels && labels[i] === (i + 1).toString()) {\n      i++;\n    }\n    if (i === numLabels) {\n      return;\n    }\n    const { pdfViewer, pdfThumbnailViewer, toolbar } = this;\n\n    pdfViewer.setPageLabels(labels);\n    pdfThumbnailViewer.setPageLabels(labels);\n\n    // Changing toolbar page display to use labels and we need to set\n    // the label of the current page.\n    toolbar.setPagesCount(numLabels, true);\n    toolbar.setPageNumber(\n      pdfViewer.currentPageNumber,\n      pdfViewer.currentPageLabel\n    );\n  },\n\n  /**\n   * @private\n   */\n  _initializePdfHistory({ fingerprint, viewOnLoad, initialDest = null }) {\n    if (!this.pdfHistory) {\n      return;\n    }\n    this.pdfHistory.initialize({\n      fingerprint,\n      resetHistory: viewOnLoad === ViewOnLoad.INITIAL,\n      updateUrl: AppOptions.get(\"historyUpdateUrl\"),\n    });\n\n    if (this.pdfHistory.initialBookmark) {\n      this.initialBookmark = this.pdfHistory.initialBookmark;\n\n      this.initialRotation = this.pdfHistory.initialRotation;\n    }\n\n    // Always let the browser history/document hash take precedence.\n    if (\n      initialDest &&\n      !this.initialBookmark &&\n      viewOnLoad === ViewOnLoad.UNKNOWN\n    ) {\n      this.initialBookmark = JSON.stringify(initialDest);\n      // TODO: Re-factor the `PDFHistory` initialization to remove this hack\n      // that's currently necessary to prevent weird initial history state.\n      this.pdfHistory.push({ explicitDest: initialDest, pageNumber: null });\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializePermissions(pdfDocument) {\n    const permissions = await pdfDocument.getPermissions();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the permissions resolved.\n    }\n    if (!permissions || !AppOptions.get(\"enablePermissions\")) {\n      return;\n    }\n    // Currently only the \"copy\"-permission is supported.\n    if (!permissions.includes(PermissionFlag.COPY)) {\n      this.appConfig.viewerContainer.classList.add(ENABLE_PERMISSIONS_CLASS);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initializeAnnotationStorageCallbacks(pdfDocument) {\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n    const { annotationStorage } = pdfDocument;\n\n    annotationStorage.onSetModified = () => {\n      window.addEventListener(\"beforeunload\", beforeUnload);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        this._annotationStorageModified = true;\n      }\n    };\n    annotationStorage.onResetModified = () => {\n      window.removeEventListener(\"beforeunload\", beforeUnload);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        delete this._annotationStorageModified;\n      }\n    };\n  },\n\n  setInitialView(\n    storedHash,\n    { rotation, sidebarView, scrollMode, spreadMode } = {}\n  ) {\n    const setRotation = angle => {\n      if (isValidRotation(angle)) {\n        this.pdfViewer.pagesRotation = angle;\n      }\n    };\n    const setViewerModes = (scroll, spread) => {\n      if (isValidScrollMode(scroll)) {\n        this.pdfViewer.scrollMode = scroll;\n      }\n      if (isValidSpreadMode(spread)) {\n        this.pdfViewer.spreadMode = spread;\n      }\n    };\n    this.isInitialViewSet = true;\n    this.pdfSidebar.setInitialView(sidebarView);\n\n    setViewerModes(scrollMode, spreadMode);\n\n    if (this.initialBookmark) {\n      setRotation(this.initialRotation);\n      delete this.initialRotation;\n\n      this.pdfLinkService.setHash(this.initialBookmark);\n      this.initialBookmark = null;\n    } else if (storedHash) {\n      setRotation(rotation);\n\n      this.pdfLinkService.setHash(storedHash);\n    }\n\n    // Ensure that the correct page number is displayed in the UI,\n    // even if the active page didn't change during document load.\n    this.toolbar.setPageNumber(\n      this.pdfViewer.currentPageNumber,\n      this.pdfViewer.currentPageLabel\n    );\n    this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber);\n\n    if (!this.pdfViewer.currentScaleValue) {\n      // Scale was not initialized: invalid bookmark or scale was not specified.\n      // Setting the default one.\n      // eslint-disable-next-line no-undef\n      const defaultZoomOption = PDFViewerApplicationOptions.get('defaultZoomValue');\n      // #556 #543 modified by ngx-extended-pdf-viewer\n      if (defaultZoomOption) {\n        this.pdfViewer.currentScaleValue = defaultZoomOption;\n      }\n      // #556 #543 end of modification\n    }\n  },\n\n  /**\n   * @private\n   */\n  _cleanup() {\n    if (!this.pdfDocument) {\n      return; // run cleanup when document is loaded\n    }\n    this.pdfViewer.cleanup();\n    this.pdfThumbnailViewer.cleanup();\n\n    // We don't want to remove fonts used by active page SVGs.\n    this.pdfDocument.cleanup(\n      /* keepLoadedFonts = */ this.pdfViewer.renderer === RendererType.SVG\n    );\n  },\n\n  forceRendering() {\n    this.pdfRenderingQueue.printing = !!this.printService;\n    this.pdfRenderingQueue.isThumbnailViewEnabled =\n      this.pdfSidebar.isThumbnailViewVisible;\n    this.pdfRenderingQueue.renderHighestPriority();\n  },\n\n  beforePrint() {\n    // Given that the \"beforeprint\" browser event is synchronous, we\n    // unfortunately cannot await the scripting event dispatching here.\n    this.pdfScriptingManager.dispatchWillPrint();\n\n    if (this.printService) {\n      // There is no way to suppress beforePrint/afterPrint events,\n      // but PDFPrintService may generate double events -- this will ignore\n      // the second event that will be coming from native window.printPDF().\n      return;\n    }\n\n    if (!this.supportsPrinting) {\n      this.l10n.get(\"printing_not_supported\").then(msg => {\n        this._otherError(msg);\n      });\n      return;\n    }\n\n    // The beforePrint is a sync method and we need to know layout before\n    // returning from this method. Ensure that we can get sizes of the pages.\n    if (!this.pdfViewer.pageViewsReady) {\n      this.l10n.get(\"printing_not_ready\").then(msg => {\n        // eslint-disable-next-line no-alert\n        window.alert(msg);\n      });\n      return;\n    }\n\n    const pagesOverview = this.pdfViewer.getPagesOverview();\n    const printContainer = this.appConfig.printContainer;\n    const printResolution = AppOptions.get(\"printResolution\");\n    const optionalContentConfigPromise =\n      this.pdfViewer.optionalContentConfigPromise;\n\n    const printService = PDFPrintServiceFactory.instance.createPrintService(\n      this.pdfDocument,\n      pagesOverview,\n      printContainer,\n      printResolution,\n      optionalContentConfigPromise,\n      this.l10n,\n      this.pdfViewer.eventBus // #588 modified by ngx-extended-pdf-viewer\n    );\n    this.printService = printService;\n    this.forceRendering();\n\n    printService.layout();\n\n    this.externalServices.reportTelemetry({\n      type: \"print\",\n    });\n  },\n\n  afterPrint() {\n    // Given that the \"afterprint\" browser event is synchronous, we\n    // unfortunately cannot await the scripting event dispatching here.\n    this.pdfScriptingManager.dispatchDidPrint();\n\n    if (this.printService) {\n      document.body.removeAttribute(\"data-pdfjsprinting\");\n      this.printService.destroy();\n      this.printService = null;\n\n      this.pdfDocument?.annotationStorage.resetModified();\n    }\n    this.forceRendering();\n  },\n\n  rotatePages(delta) {\n    this.pdfViewer.pagesRotation += delta;\n    // Note that the thumbnail viewer is updated, and rendering is triggered,\n    // in the 'rotationchanging' event handler.\n  },\n\n  requestPresentationMode() {\n    this.pdfPresentationMode?.request();\n  },\n\n  triggerPrinting() {\n    if (!this.supportsPrinting) {\n      return;\n    }\n    window.printPDF();\n  },\n\n  bindEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    _boundEvents.beforePrint = this.beforePrint.bind(this);\n    _boundEvents.afterPrint = this.afterPrint.bind(this);\n\n    eventBus._on(\"resize\", webViewerResize);\n    eventBus._on(\"hashchange\", webViewerHashchange);\n    eventBus._on(\"beforeprint\", _boundEvents.beforePrint);\n    eventBus._on(\"afterprint\", _boundEvents.afterPrint);\n    eventBus._on(\"pagerendered\", webViewerPageRendered);\n    eventBus._on(\"updateviewarea\", webViewerUpdateViewarea);\n    eventBus._on(\"pagechanging\", webViewerPageChanging);\n    eventBus._on(\"scalechanging\", webViewerScaleChanging);\n    eventBus._on(\"rotationchanging\", webViewerRotationChanging);\n    eventBus._on(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n    eventBus._on(\"pagemode\", webViewerPageMode);\n    eventBus._on(\"namedaction\", webViewerNamedAction);\n    eventBus._on(\"presentationmodechanged\", webViewerPresentationModeChanged);\n    eventBus._on(\"presentationmode\", webViewerPresentationMode);\n    eventBus._on(\"print\", webViewerPrint);\n    eventBus._on(\"download\", webViewerDownload);\n    eventBus._on(\"save\", webViewerSave);\n    eventBus._on(\"firstpage\", webViewerFirstPage);\n    eventBus._on(\"lastpage\", webViewerLastPage);\n    eventBus._on(\"nextpage\", webViewerNextPage);\n    eventBus._on(\"previouspage\", webViewerPreviousPage);\n    eventBus._on(\"zoomin\", webViewerZoomIn);\n    eventBus._on(\"zoomout\", webViewerZoomOut);\n    eventBus._on(\"zoomreset\", webViewerZoomReset);\n    eventBus._on(\"pagenumberchanged\", webViewerPageNumberChanged);\n    eventBus._on(\"scalechanged\", webViewerScaleChanged);\n    eventBus._on(\"rotatecw\", webViewerRotateCw);\n    eventBus._on(\"rotateccw\", webViewerRotateCcw);\n    eventBus._on(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n    eventBus._on(\"switchscrollmode\", webViewerSwitchScrollMode);\n    eventBus._on(\"scrollmodechanged\", webViewerScrollModeChanged);\n    eventBus._on(\"switchspreadmode\", webViewerSwitchSpreadMode);\n    eventBus._on(\"spreadmodechanged\", webViewerSpreadModeChanged);\n    eventBus._on(\"documentproperties\", webViewerDocumentProperties);\n    eventBus._on(\"find\", webViewerFind);\n    eventBus._on(\"findfromurlhash\", webViewerFindFromUrlHash);\n    eventBus._on(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n    eventBus._on(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (AppOptions.get(\"pdfBug\")) {\n      _boundEvents.reportPageStatsPDFBug = reportPageStatsPDFBug;\n\n      eventBus._on(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n      eventBus._on(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      eventBus._on(\"fileinputchange\", webViewerFileInputChange);\n      eventBus._on(\"openfile\", webViewerOpenFile);\n    }\n  },\n\n  bindWindowEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    _boundEvents.windowResize = () => {\n      eventBus.dispatch(\"resize\", { source: window });\n    };\n    _boundEvents.windowHashChange = () => {\n      eventBus.dispatch(\"hashchange\", {\n        source: window,\n        hash: document.location.hash.substring(1),\n      });\n    };\n    _boundEvents.windowBeforePrint = () => {\n      eventBus.dispatch(\"beforeprint\", { source: window });\n    };\n    _boundEvents.windowAfterPrint = () => {\n      eventBus.dispatch(\"afterprint\", { source: window });\n    };\n    _boundEvents.windowUpdateFromSandbox = event => {\n      eventBus.dispatch(\"updatefromsandbox\", {\n        source: window,\n        detail: event.detail,\n      });\n    };\n\n    window.addEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.addEventListener(\"wheel\", webViewerWheel, { passive: false });\n    window.addEventListener(\"touchstart\", webViewerTouchStart, {\n      passive: false,\n    });\n    window.addEventListener(\"click\", webViewerClick);\n    window.addEventListener(\"keydown\", webViewerKeyDown);\n    window.addEventListener(\"resize\", _boundEvents.windowResize);\n    window.addEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.addEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.addEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n    window.addEventListener(\n      \"updatefromsandbox\",\n      _boundEvents.windowUpdateFromSandbox\n    );\n  },\n\n  unbindEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    eventBus._off(\"resize\", webViewerResize);\n    eventBus._off(\"hashchange\", webViewerHashchange);\n    eventBus._off(\"beforeprint\", _boundEvents.beforePrint);\n    eventBus._off(\"afterprint\", _boundEvents.afterPrint);\n    eventBus._off(\"pagerendered\", webViewerPageRendered);\n    eventBus._off(\"updateviewarea\", webViewerUpdateViewarea);\n    eventBus._off(\"pagechanging\", webViewerPageChanging);\n    eventBus._off(\"scalechanging\", webViewerScaleChanging);\n    eventBus._off(\"rotationchanging\", webViewerRotationChanging);\n    eventBus._off(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n    eventBus._off(\"pagemode\", webViewerPageMode);\n    eventBus._off(\"namedaction\", webViewerNamedAction);\n    eventBus._off(\"presentationmodechanged\", webViewerPresentationModeChanged);\n    eventBus._off(\"presentationmode\", webViewerPresentationMode);\n    eventBus._off(\"print\", webViewerPrint);\n    eventBus._off(\"download\", webViewerDownload);\n    eventBus._off(\"save\", webViewerSave);\n    eventBus._off(\"firstpage\", webViewerFirstPage);\n    eventBus._off(\"lastpage\", webViewerLastPage);\n    eventBus._off(\"nextpage\", webViewerNextPage);\n    eventBus._off(\"previouspage\", webViewerPreviousPage);\n    eventBus._off(\"zoomin\", webViewerZoomIn);\n    eventBus._off(\"zoomout\", webViewerZoomOut);\n    eventBus._off(\"zoomreset\", webViewerZoomReset);\n    eventBus._off(\"pagenumberchanged\", webViewerPageNumberChanged);\n    eventBus._off(\"scalechanged\", webViewerScaleChanged);\n    eventBus._off(\"rotatecw\", webViewerRotateCw);\n    eventBus._off(\"rotateccw\", webViewerRotateCcw);\n    eventBus._off(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n    eventBus._off(\"switchscrollmode\", webViewerSwitchScrollMode);\n    eventBus._off(\"scrollmodechanged\", webViewerScrollModeChanged);\n    eventBus._off(\"switchspreadmode\", webViewerSwitchSpreadMode);\n    eventBus._off(\"spreadmodechanged\", webViewerSpreadModeChanged);\n    eventBus._off(\"documentproperties\", webViewerDocumentProperties);\n    eventBus._off(\"find\", webViewerFind);\n    eventBus._off(\"findfromurlhash\", webViewerFindFromUrlHash);\n    eventBus._off(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n    eventBus._off(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (_boundEvents.reportPageStatsPDFBug) {\n      eventBus._off(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n      eventBus._off(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n\n      _boundEvents.reportPageStatsPDFBug = null;\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      eventBus._off(\"fileinputchange\", webViewerFileInputChange);\n      eventBus._off(\"openfile\", webViewerOpenFile);\n    }\n\n    _boundEvents.beforePrint = null;\n    _boundEvents.afterPrint = null;\n  },\n\n  unbindWindowEvents() {\n    const { _boundEvents } = this;\n\n    window.removeEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.removeEventListener(\"wheel\", webViewerWheel, { passive: false });\n    window.removeEventListener(\"touchstart\", webViewerTouchStart, {\n      passive: false,\n    });\n    window.removeEventListener(\"click\", webViewerClick);\n    window.removeEventListener(\"keydown\", webViewerKeyDown);\n    window.removeEventListener(\"resize\", _boundEvents.windowResize);\n    window.removeEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.removeEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.removeEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n    window.removeEventListener(\n      \"updatefromsandbox\",\n      _boundEvents.windowUpdateFromSandbox\n    );\n\n    _boundEvents.windowResize = null;\n    _boundEvents.windowHashChange = null;\n    _boundEvents.windowBeforePrint = null;\n    _boundEvents.windowAfterPrint = null;\n    _boundEvents.windowUpdateFromSandbox = null;\n  },\n\n  accumulateWheelTicks(ticks) {\n    // If the scroll direction changed, reset the accumulated wheel ticks.\n    if (\n      (this._wheelUnusedTicks > 0 && ticks < 0) ||\n      (this._wheelUnusedTicks < 0 && ticks > 0)\n    ) {\n      this._wheelUnusedTicks = 0;\n    }\n    this._wheelUnusedTicks += ticks;\n    const wholeTicks =\n      Math.sign(this._wheelUnusedTicks) *\n      Math.floor(Math.abs(this._wheelUnusedTicks));\n    this._wheelUnusedTicks -= wholeTicks;\n    return wholeTicks;\n  },\n\n  /**\n   * Should be called *after* all pages have loaded, or if an error occurred,\n   * to unblock the \"load\" event; see https://bugzilla.mozilla.org/show_bug.cgi?id=1618553\n   * @private\n   */\n  _unblockDocumentLoadEvent() {\n    if (document.blockUnblockOnload) {\n      document.blockUnblockOnload(false);\n    }\n    // Ensure that this method is only ever run once.\n    this._unblockDocumentLoadEvent = () => {};\n  },\n\n  /**\n   * Used together with the integration-tests, to enable awaiting full\n   * initialization of the scripting/sandbox.\n   */\n  get scriptingReady() {\n    return this.pdfScriptingManager.ready;\n  },\n};\n\nlet validateFileURL;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const HOSTED_VIEWER_ORIGINS = [\n    \"null\",\n    \"http://mozilla.github.io\",\n    \"https://mozilla.github.io\",\n  ];\n  validateFileURL = function (file) {\n    if (file === undefined) {\n      return;\n    }\n    try {\n      const viewerOrigin = new URL(window.location.href).origin || \"null\";\n      if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) {\n        // Hosted or local viewer, allow for any file locations\n        return;\n      }\n      const { origin, protocol } = new URL(file, window.location.href);\n      // Removing of the following line will not guarantee that the viewer will\n      // start accepting URLs from foreign origin -- CORS headers on the remote\n      // server must be properly configured.\n      // IE10 / IE11 does not include an origin in `blob:`-URLs. So don't block\n      // any blob:-URL. The browser's same-origin policy will block requests to\n      // blob:-URLs from other origins, so this is safe.\n      if (origin !== viewerOrigin && protocol !== \"blob:\") {\n        throw new Error(\"file origin does not match viewer's\");\n      }\n    } catch (ex) {\n      PDFViewerApplication.l10n.get(\"loading_error\").then(msg => {\n        PDFViewerApplication._documentError(msg, { message: ex?.message });\n      });\n      throw ex;\n    }\n  };\n}\n\nasync function loadFakeWorker() {\n  if (!GlobalWorkerOptions.workerSrc) {\n    GlobalWorkerOptions.workerSrc = AppOptions.get(\"workerSrc\");\n  }\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n    window.pdfjsWorker = await import(\"pdfjs/core/worker.js\");\n    return;\n  }\n  await loadScript(PDFWorker.workerSrc);\n}\n\nasync function initPDFBug(enabledTabs) {\n  const { debuggerScriptPath, mainContainer } = PDFViewerApplication.appConfig;\n  await loadScript(debuggerScriptPath);\n  PDFBug.init({ OPS }, mainContainer, enabledTabs);\n}\n\nfunction reportPageStatsPDFBug({ pageNumber }) {\n  if (typeof Stats === \"undefined\" || !Stats.enabled) {\n    return;\n  }\n  const pageView = PDFViewerApplication.pdfViewer.getPageView(\n    /* index = */ pageNumber - 1\n  );\n  const pageStats = pageView?.pdfPage?.stats;\n  if (!pageStats) {\n    return;\n  }\n  Stats.add(pageNumber, pageStats);\n}\n\nfunction webViewerInitialized() {\n  const appConfig = PDFViewerApplication.appConfig;\n  let file;\n  // #907 modified by ngx-extended-pdf-viewer\n  // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  //   const queryString = document.location.search.substring(1);\n  //   const params = parseQueryString(queryString);\n  //   file = params.get(\"file\") ?? AppOptions.get(\"defaultUrl\");\n  //   validateFileURL(file);\n  // } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n  //   file = window.location.href;\n  // } else if (PDFJSDev.test(\"CHROME\")) {\n  //   file = AppOptions.get(\"defaultUrl\");\n  // }\n  // #907 end of modification by ngx-extended-pdf-viewer\n\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    const fileInput = document.createElement(\"input\");\n    fileInput.id = appConfig.openFileInputName;\n    fileInput.className = \"fileInput\";\n    fileInput.setAttribute(\"accept\", \".pdf,application/pdf\");\n    fileInput.setAttribute(\"type\", \"file\");\n    fileInput.oncontextmenu = noContextMenuHandler;\n    document.body.appendChild(fileInput);\n\n    if (\n      !window.File ||\n      !window.FileReader ||\n      !window.FileList ||\n      !window.Blob\n    ) {\n      appConfig.toolbar.openFile.hidden = true;\n      appConfig.secondaryToolbar.openFileButton.hidden = true;\n    } else {\n      fileInput.value = null;\n    }\n\n    fileInput.addEventListener(\"change\", function (evt) {\n      const files = evt.target.files;\n      if (!files || files.length === 0) {\n        return;\n      }\n      PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n        source: this,\n        fileInput: evt.target,\n      });\n    });\n\n    // Enable dragging-and-dropping a new PDF file onto the viewerContainer.\n    appConfig.mainContainer.addEventListener(\"dragover\", function (evt) {\n      if (AppOptions.get(\"enableDragAndDrop\")) { // #686 modified by ngx-extended-pdf-viewer\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = \"move\";\n      } // #686 end of modification\n    });\n    appConfig.mainContainer.addEventListener(\"drop\", function (evt) {\n      if (AppOptions.get(\"enableDragAndDrop\")) { // #686 modified by ngx-extended-pdf-viewer\n        evt.preventDefault();\n\n        const files = evt.dataTransfer.files;\n        if (!files || files.length === 0) {\n          return;\n        }\n        PDFViewerApplication.eventBus.dispatch(\"fileinputchange\",  {\n          source: this,\n          fileInput: evt.dataTransfer,\n        });\n      } // #686 end of modification\n    });\n  } else {\n    appConfig.toolbar.openFile.hidden = true;\n    appConfig.secondaryToolbar.openFileButton.hidden = true;\n  }\n\n  if (!PDFViewerApplication.supportsDocumentFonts) {\n    AppOptions.set(\"disableFontFace\", true);\n    PDFViewerApplication.l10n.get(\"web_fonts_disabled\").then(msg => {\n      console.warn(msg);\n    });\n  }\n\n  if (!PDFViewerApplication.supportsPrinting) {\n    appConfig.toolbar.print.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.printButton.classList.add(\"hidden\");\n  }\n\n  if (!PDFViewerApplication.supportsFullscreen) {\n    appConfig.toolbar.presentationModeButton.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.presentationModeButton.classList.add(\"hidden\");\n  }\n\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    appConfig.toolbar.viewFind.classList.add(\"hidden\");\n  }\n\n  appConfig.mainContainer.addEventListener(\n    \"transitionend\",\n    function (evt) {\n      if (evt.target === /* mainContainer */ this) {\n        PDFViewerApplication.eventBus.dispatch(\"resize\", { source: this });\n      }\n    },\n    true\n  );\n\n  try {\n    webViewerOpenFileViaURL(file);\n  } catch (reason) {\n    PDFViewerApplication.l10n.get(\"loading_error\").then(msg => {\n      PDFViewerApplication._documentError(msg, reason);\n    });\n  }\n}\n\nfunction webViewerOpenFileViaURL(file) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    if (file) {\n      PDFViewerApplication.open(file);\n    } else {\n      PDFViewerApplication._hideViewBookmark();\n    }\n  } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n    PDFViewerApplication.setTitleUsingUrl(file, /* downloadUrl = */ file);\n    PDFViewerApplication.initPassiveLoading();\n  } else {\n    if (file) {\n      throw new Error(\"Not implemented: webViewerOpenFileViaURL\");\n    } else {\n      PDFViewerApplication._hideViewBookmark();\n    }\n  }\n}\n\nfunction webViewerResetPermissions() {\n  const { appConfig } = PDFViewerApplication;\n  if (!appConfig) {\n    return;\n  }\n  // Currently only the \"copy\"-permission is supported.\n  appConfig.viewerContainer.classList.remove(ENABLE_PERMISSIONS_CLASS);\n}\n\nfunction webViewerPageRendered({ pageNumber, timestamp, error }) {\n  // If the page is still visible when it has finished rendering,\n  // ensure that the page number input loading indicator is hidden.\n  if (pageNumber === PDFViewerApplication.page) {\n    PDFViewerApplication.toolbar.updateLoadingIndicatorState(false);\n  }\n\n  // Use the rendered page to set the corresponding thumbnail image.\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    const pageView = PDFViewerApplication.pdfViewer.getPageView(\n      /* index = */ pageNumber - 1\n    );\n    const thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(\n      /* index = */ pageNumber - 1\n    );\n    if (pageView && thumbnailView) {\n      thumbnailView.setImage(pageView);\n    }\n  }\n\n  if (error) {\n    PDFViewerApplication.l10n.get(\"rendering_error\").then(msg => {\n      PDFViewerApplication._otherError(msg, error);\n    });\n  }\n\n  PDFViewerApplication.externalServices.reportTelemetry({\n    type: \"pageInfo\",\n    timestamp,\n  });\n  // It is a good time to report stream and font types.\n  PDFViewerApplication.pdfDocument.getStats().then(function (stats) {\n    PDFViewerApplication.externalServices.reportTelemetry({\n      type: \"documentStats\",\n      stats,\n    });\n  });\n}\n\nfunction webViewerPageMode({ mode }) {\n  // Handle the 'pagemode' hash parameter, see also `PDFLinkService_setHash`.\n  let view;\n  switch (mode) {\n    case \"thumbs\":\n      view = SidebarView.THUMBS;\n      break;\n    case \"bookmarks\":\n    case \"outline\": // non-standard\n      view = SidebarView.OUTLINE;\n      break;\n    case \"attachments\": // non-standard\n      view = SidebarView.ATTACHMENTS;\n      break;\n    case \"layers\": // non-standard\n      view = SidebarView.LAYERS;\n      break;\n    case \"none\":\n      view = SidebarView.NONE;\n      break;\n    default:\n      console.error('Invalid \"pagemode\" hash parameter: ' + mode);\n      return;\n  }\n  PDFViewerApplication.pdfSidebar.switchView(view, /* forceOpen = */ true);\n}\n\nfunction webViewerNamedAction(evt) {\n  // Processing a couple of named actions that might be useful, see also\n  // `PDFLinkService.executeNamedAction`.\n  switch (evt.action) {\n    case \"GoToPage\":\n      PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n      break;\n\n    case \"Find\":\n      if (!PDFViewerApplication.supportsIntegratedFind) {\n        PDFViewerApplication.findBar.toggle();\n      }\n      break;\n\n    case \"Print\":\n      PDFViewerApplication.triggerPrinting();\n      break;\n\n    case \"SaveAs\":\n      webViewerSave();\n      break;\n  }\n}\n\nfunction webViewerPresentationModeChanged(evt) {\n  PDFViewerApplication.pdfViewer.presentationModeState = evt.state;\n}\n\nfunction webViewerSidebarViewChanged(evt) {\n  PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled =\n    PDFViewerApplication.pdfSidebar.isThumbnailViewVisible;\n\n  const store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    store.set(\"sidebarView\", evt.view).catch(function () {});\n  }\n}\n\nfunction webViewerUpdateViewarea(evt) {\n  const location = evt.location,\n    store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // #90 #543 modified by ngx-extended-pdf-viewer\n    const settings = {};\n    if (location.pageNumber !== undefined || location.pageNumber !== null) {\n      settings.page = location.pageNumber;\n    }\n    if (location.scale) {\n      settings.zoom = location.scale;\n    }\n    if (location.left) {\n      settings.scrollLeft = location.left;\n    }\n    if (location.top) {\n      settings.scrollTop = location.top;\n    }\n    if (location.rotation !== undefined || location.rotation !== null) {\n      settings.rotation = location.rotation;\n    }\n    store\n      .setMultiple(settings)\n      .catch(function () {\n        /* unable to write to storage */\n      });\n      // #90 #543 end of modification\n  }\n  const href = PDFViewerApplication.pdfLinkService.getAnchorUrl(\n    location.pdfOpenParams\n  );\n  PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href;\n  PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href =\n    href;\n\n  // Show/hide the loading indicator in the page number input element.\n  const currentPage = PDFViewerApplication.pdfViewer.getPageView(\n    /* index = */ PDFViewerApplication.page - 1\n  );\n  const loading = currentPage?.renderingState !== RenderingStates.FINISHED;\n  PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading);\n}\n\nfunction webViewerScrollModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    store.set(\"scrollMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerSpreadModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    store.set(\"spreadMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerResize() {\n  const { pdfDocument, pdfViewer } = PDFViewerApplication;\n  if (!pdfDocument) {\n    return;\n  }\n  const currentScaleValue = pdfViewer.currentScaleValue;\n  if (\n    currentScaleValue === \"auto\" ||\n    currentScaleValue === \"page-fit\" ||\n    currentScaleValue === \"page-width\"\n  ) {\n    // Note: the scale is constant for 'page-actual'.\n    pdfViewer.currentScaleValue = currentScaleValue;\n  }\n  pdfViewer.update();\n}\n\nfunction webViewerHashchange(evt) {\n  const hash = evt.hash;\n  if (!hash) {\n    return;\n  }\n  if (!PDFViewerApplication.isInitialViewSet) {\n    PDFViewerApplication.initialBookmark = hash;\n  } else if (!PDFViewerApplication.pdfHistory?.popStateInProgress) {\n    PDFViewerApplication.pdfLinkService.setHash(hash);\n  }\n}\n\nlet webViewerFileInputChange, webViewerOpenFile;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  webViewerFileInputChange = function (evt) {\n    if (PDFViewerApplication.pdfViewer?.isInPresentationMode) {\n      return; // Opening a new PDF file isn't supported in Presentation Mode.\n    }\n    const file = evt.fileInput.files[0];\n\n    if (!compatibilityParams.disableCreateObjectURL) {\n      let url = URL.createObjectURL(file);\n      if (file.name) {\n        url = { url, originalUrl: file.name };\n      }\n      PDFViewerApplication.open(url);\n    } else {\n      PDFViewerApplication.setTitleUsingUrl(file.name);\n      // Read the local file into a Uint8Array.\n      const fileReader = new FileReader();\n      fileReader.onload = function webViewerChangeFileReaderOnload(event) {\n        const buffer = event.target.result;\n        PDFViewerApplication.open(new Uint8Array(buffer));\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n  };\n\n  webViewerOpenFile = function (evt) {\n    const openFileInputName = PDFViewerApplication.appConfig.openFileInputName;\n    document.getElementById(openFileInputName).click();\n  };\n}\n\nfunction webViewerPresentationMode() {\n  PDFViewerApplication.requestPresentationMode();\n}\nfunction webViewerPrint() {\n  PDFViewerApplication.triggerPrinting();\n}\nfunction webViewerDownload() {\n  PDFViewerApplication.downloadOrSave({ sourceEventType: \"download\" });\n}\nfunction webViewerSave() {\n  PDFViewerApplication.downloadOrSave({ sourceEventType: \"save\" });\n}\nfunction webViewerFirstPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = 1;\n  }\n}\nfunction webViewerLastPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n    // #542 prevent IE11 and Edge from scrolling to the end of the page\n    if (PDFViewerApplication.pageViewMode === \"single\") {\n      if (PDFViewerApplication.pdfViewer && PDFViewerApplication.pdfViewer.container) {\n        PDFViewerApplication.pdfViewer.container.scrollTop = 0;\n      }\n    }\n    // #542 end of modification\n  }\n}\nfunction webViewerNextPage() {\n  PDFViewerApplication.pdfViewer.nextPage();\n  // #542 prevent IE11 and Edge from scrolling to the end of the page\n  if (PDFViewerApplication.pageViewMode === \"single\") {\n    if (PDFViewerApplication.pdfViewer && PDFViewerApplication.pdfViewer.container) {\n     PDFViewerApplication.pdfViewer.container.scrollTop = 0;\n    }\n  }\n  // #542 end of modification\n}\nfunction webViewerPreviousPage() {\n  PDFViewerApplication.pdfViewer.previousPage();\n}\nfunction webViewerZoomIn() {\n  PDFViewerApplication.zoomIn();\n}\nfunction webViewerZoomOut() {\n  PDFViewerApplication.zoomOut();\n}\nfunction webViewerZoomReset() {\n  PDFViewerApplication.zoomReset();\n}\nfunction webViewerPageNumberChanged(evt) {\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n  // Note that for `<input type=\"number\">` HTML elements, an empty string will\n  // be returned for non-number inputs; hence we simply do nothing in that case.\n  if (evt.value !== \"\") {\n    PDFViewerApplication.pdfLinkService.goToPage(evt.value);\n  }\n\n  // Ensure that the page number input displays the correct value, even if the\n  // value entered by the user was invalid (e.g. a floating point number).\n  if (\n    evt.value !== pdfViewer.currentPageNumber.toString() &&\n    evt.value !== pdfViewer.currentPageLabel\n  ) {\n    PDFViewerApplication.toolbar.setPageNumber(\n      pdfViewer.currentPageNumber,\n      pdfViewer.currentPageLabel\n    );\n  }\n}\nfunction webViewerScaleChanged(evt) {\n  PDFViewerApplication.pdfViewer.currentScaleValue = evt.value;\n}\nfunction webViewerRotateCw() {\n  PDFViewerApplication.rotatePages(90);\n}\nfunction webViewerRotateCcw() {\n  PDFViewerApplication.rotatePages(-90);\n}\nfunction webViewerOptionalContentConfig(evt) {\n  PDFViewerApplication.pdfViewer.optionalContentConfigPromise = evt.promise;\n}\nfunction webViewerSwitchScrollMode(evt) {\n  PDFViewerApplication.pdfViewer.scrollMode = evt.mode;\n}\nfunction webViewerSwitchSpreadMode(evt) {\n  PDFViewerApplication.pdfViewer.spreadMode = evt.mode;\n}\nfunction webViewerDocumentProperties() {\n  PDFViewerApplication.pdfDocumentProperties.open();\n}\n\nfunction webViewerFind(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\" + evt.type, {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: evt.caseSensitive,\n    entireWord: evt.entireWord,\n    ignoreAccents: evt.ignoreAccents, // #177\n    fuzzySearch: evt.fuzzySearch, // #304\n    highlightAll: evt.highlightAll,\n    findPrevious: evt.findPrevious,\n  });\n}\n\nfunction webViewerFindFromUrlHash(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\", {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: false,\n    entireWord: false,\n    ignoreAccents: false, // #177\n    fuzzySearch: false, // #304\n    highlightAll: true,\n    findPrevious: false,\n  });\n}\n\nfunction webViewerUpdateFindMatchesCount({ matchesCount }) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindMatchesCount(matchesCount);\n  } else {\n    PDFViewerApplication.findBar.updateResultsCount(matchesCount);\n  }\n}\n\nfunction webViewerUpdateFindControlState({\n  state,\n  previous,\n  matchesCount,\n  rawQuery,\n}) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindControlState({\n      result: state,\n      findPrevious: previous,\n      matchesCount,\n      rawQuery,\n    });\n  } else {\n    PDFViewerApplication.findBar.updateUIState(state, previous, matchesCount);\n  }\n}\n\nfunction webViewerScaleChanging(evt) {\n  PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale);\n\n  PDFViewerApplication.pdfViewer.update();\n}\n\nfunction webViewerRotationChanging(evt) {\n  PDFViewerApplication.pdfThumbnailViewer.pagesRotation = evt.pagesRotation;\n\n  PDFViewerApplication.forceRendering();\n  // Ensure that the active page doesn't change during rotation.\n  PDFViewerApplication.pdfViewer.currentPageNumber = evt.pageNumber;\n}\n\nfunction webViewerPageChanging({ pageNumber, pageLabel }) {\n  PDFViewerApplication.toolbar.setPageNumber(pageNumber, pageLabel);\n  PDFViewerApplication.secondaryToolbar.setPageNumber(pageNumber);\n\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(pageNumber);\n  }\n  const pageNumberInput = document.getElementById(\"pageNumber\");\n  if (pageNumberInput) {\n    const pageScrollEvent = new CustomEvent(\"page-change\");\n    pageNumberInput.dispatchEvent(pageScrollEvent);\n  }\n}\n\nfunction webViewerVisibilityChange(evt) {\n  if (document.visibilityState === \"visible\") {\n    // Ignore mouse wheel zooming during tab switches (bug 1503412).\n    setZoomDisabledTimeout();\n  }\n}\n\nlet zoomDisabledTimeout = null;\nfunction setZoomDisabledTimeout() {\n  if (zoomDisabledTimeout) {\n    clearTimeout(zoomDisabledTimeout);\n  }\n  zoomDisabledTimeout = setTimeout(function () {\n    zoomDisabledTimeout = null;\n  }, WHEEL_ZOOM_DISABLED_TIMEOUT);\n}\n\nfunction webViewerWheel(evt) {\n  const { pdfViewer, supportedMouseWheelZoomModifierKeys } =\n    PDFViewerApplication;\n\n  if (pdfViewer.isInPresentationMode) {\n    return;\n  }\n\n  const cmd =\n    (evt.ctrlKey ? 1 : 0) |\n    (evt.altKey ? 2 : 0) |\n    (evt.shiftKey ? 4 : 0) |\n    (evt.metaKey ? 8 : 0);\n\n  if (window.isKeyIgnored && window.isKeyIgnored(cmd, \"WHEEL\")) {\n    return;\n  }\n\n  if (\n    (evt.ctrlKey && supportedMouseWheelZoomModifierKeys.ctrlKey) ||\n    (evt.metaKey && supportedMouseWheelZoomModifierKeys.metaKey)\n  ) {\n    // Only zoom the pages, not the entire viewer.\n    evt.preventDefault();\n    // NOTE: this check must be placed *after* preventDefault.\n    if (zoomDisabledTimeout || document.visibilityState === \"hidden\") {\n      return;\n    }\n\n    const previousScale = pdfViewer.currentScale;\n\n    const delta = normalizeWheelEventDirection(evt);\n    let ticks = 0;\n    if (\n      evt.deltaMode === WheelEvent.DOM_DELTA_LINE ||\n      evt.deltaMode === WheelEvent.DOM_DELTA_PAGE\n    ) {\n      // For line-based devices, use one tick per event, because different\n      // OSs have different defaults for the number lines. But we generally\n      // want one \"clicky\" roll of the wheel (which produces one event) to\n      // adjust the zoom by one step.\n      if (Math.abs(delta) >= 1) {\n        ticks = Math.sign(delta);\n      } else {\n        // If we're getting fractional lines (I can't think of a scenario\n        // this might actually happen), be safe and use the accumulator.\n        ticks = PDFViewerApplication.accumulateWheelTicks(delta);\n      }\n    } else {\n      // pixel-based devices\n      const PIXELS_PER_LINE_SCALE = 30;\n      ticks = PDFViewerApplication.accumulateWheelTicks(\n        delta / PIXELS_PER_LINE_SCALE\n      );\n    }\n\n    if (ticks < 0) {\n      PDFViewerApplication.zoomOut(-ticks);\n    } else if (ticks > 0) {\n      PDFViewerApplication.zoomIn(ticks);\n    }\n\n    const currentScale = pdfViewer.currentScale;\n    if (previousScale !== currentScale) {\n      // After scaling the page via zoomIn/zoomOut, the position of the upper-\n      // left corner is restored. When the mouse wheel is used, the position\n      // under the cursor should be restored instead.\n      const scaleCorrectionFactor = currentScale / previousScale - 1;\n      const rect = pdfViewer.container.getBoundingClientRect();\n      const dx = evt.clientX - rect.left;\n      const dy = evt.clientY - rect.top;\n      pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor;\n      pdfViewer.container.scrollTop += dy * scaleCorrectionFactor;\n    }\n  } else {\n    setZoomDisabledTimeout();\n  }\n}\n\nfunction webViewerTouchStart(evt) {\n  if (evt.touches.length > 1) {\n    // Disable touch-based zooming, because the entire UI bits gets zoomed and\n    // that doesn't look great. If we do want to have a good touch-based\n    // zooming experience, we need to implement smooth zoom capability (probably\n    // using a CSS transform for faster visual response, followed by async\n    // re-rendering at the final zoom level) and do gesture detection on the\n    // touchmove events to drive it. Or if we want to settle for a less good\n    // experience we can make the touchmove events drive the existing step-zoom\n    // behaviour that the ctrl+mousewheel path takes.\n    evt.preventDefault();\n  }\n}\n\nfunction webViewerClick(evt) {\n  if (!PDFViewerApplication.secondaryToolbar.isOpen) {\n    return;\n  }\n  const appConfig = PDFViewerApplication.appConfig;\n  if (\n    PDFViewerApplication.pdfViewer.containsElement(evt.target) ||\n    (appConfig.toolbar.container.contains(evt.target) &&\n      evt.target !== appConfig.secondaryToolbar.toggleButton)\n  ) {\n    if (\n      evt.target &&\n      evt.target.parentElement === appConfig.secondaryToolbar.toggleButton\n    ) {\n      return;\n    }\n    if (\n      evt.target &&\n      evt.target.parentElement &&\n      evt.target.parentElement.parentElement ===\n        appConfig.secondaryToolbar.toggleButton\n    ) {\n      return;\n    }\n\n    PDFViewerApplication.secondaryToolbar.close();\n  }\n}\n\nfunction webViewerKeyDown(evt) {\n  if (PDFViewerApplication.overlayManager.active) {\n    return;\n  }\n\n  let handled = false,\n    ensureViewerFocused = false;\n  const cmd =\n    (evt.ctrlKey ? 1 : 0) |\n    (evt.altKey ? 2 : 0) |\n    (evt.shiftKey ? 4 : 0) |\n    (evt.metaKey ? 8 : 0);\n\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n  const isViewerInPresentationMode = pdfViewer?.isInPresentationMode;\n\n  if (window.isKeyIgnored && window.isKeyIgnored(cmd, evt.keyCode)) {\n    return;\n  }\n  // First, handle the key bindings that are independent whether an input\n  // control is selected or not.\n  if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n    // either CTRL or META key with optional SHIFT.\n    switch (evt.keyCode) {\n      case 70: // f\n        if (!PDFViewerApplication.supportsIntegratedFind && !evt.shiftKey) {\n          PDFViewerApplication.findBar.open();\n          handled = true;\n        }\n        break;\n      case 71: // g\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          const findState = PDFViewerApplication.findController.state;\n          if (findState) {\n            PDFViewerApplication.findController.executeCommand(\"findagain\", {\n              query: findState.query,\n              phraseSearch: findState.phraseSearch,\n              caseSensitive: findState.caseSensitive,\n              entireWord: findState.entireWord,\n              ignoreAccents: findState.ignoreAccents, // #177\n              fuzzySearch: findState.fuzzySearch, // #304\n              highlightAll: findState.highlightAll,\n              findPrevious: cmd === 5 || cmd === 12,\n            });\n          }\n          handled = true;\n        }\n        break;\n      case 61: // FF/Mac '='\n      case 107: // FF '+' and '='\n      case 187: // Chrome '+'\n      case 171: // FF with German keyboard\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomIn();\n        }\n        handled = true;\n        break;\n      case 173: // FF/Mac '-'\n      case 109: // FF '-'\n      case 189: // Chrome '-'\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomOut();\n        }\n        handled = true;\n        break;\n      case 48: // '0'\n      case 96: // '0' on Numpad of Swedish keyboard\n        if (!isViewerInPresentationMode) {\n          // keeping it unhandled (to restore page zoom to 100%)\n          setTimeout(function () {\n            // ... and resetting the scale after browser adjusts its scale\n            PDFViewerApplication.zoomReset();\n          });\n          handled = false;\n        }\n        break;\n\n      case 38: // up arrow\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 40: // down arrow\n        if (\n          isViewerInPresentationMode ||\n          PDFViewerApplication.page < PDFViewerApplication.pagesCount\n        ) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n    }\n  }\n\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC || CHROME\")) {\n    const { eventBus } = PDFViewerApplication;\n\n    // CTRL or META without shift\n    if (cmd === 1 || cmd === 8) {\n      switch (evt.keyCode) {\n        case 83: // s\n          eventBus.dispatch(\"download\", { source: window });\n          handled = true;\n          break;\n\n        case 79: // o\n          if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n            eventBus.dispatch(\"openfile\", { source: window });\n            handled = true;\n          }\n          break;\n      }\n    }\n  }\n\n  // CTRL+ALT or Option+Command\n  if (cmd === 3 || cmd === 10) {\n    switch (evt.keyCode) {\n      case 80: // p\n        PDFViewerApplication.requestPresentationMode();\n        handled = true;\n        break;\n      case 71: // g\n        // focuses input#pageNumber field\n        PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n        handled = true;\n        break;\n    }\n  }\n\n  if (handled) {\n    if (ensureViewerFocused && !isViewerInPresentationMode) {\n      pdfViewer.focus();\n    }\n    evt.preventDefault();\n    return;\n  }\n\n  // Some shortcuts should not get handled if a control/input element\n  // is selected.\n  const curElement = getActiveOrFocusedElement();\n  const curElementTagName = curElement?.tagName.toUpperCase();\n  if (\n    curElementTagName === \"INPUT\" ||\n    curElementTagName === \"TEXTAREA\" ||\n    curElementTagName === \"SELECT\" ||\n    curElement?.isContentEditable\n  ) {\n    // Make sure that the secondary toolbar is closed when Escape is pressed.\n    if (evt.keyCode !== /* Esc = */ 27) {\n      return;\n    }\n  }\n\n  // No control key pressed at all.\n  if (cmd === 0) {\n    let turnPage = 0,\n      turnOnlyIfPageFit = false;\n    switch (evt.keyCode) {\n      case 38: // up arrow\n      case 33: // pg up\n        // vertical scrolling using arrow/pg keys\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 8: // backspace\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 37: // left arrow\n        // horizontal scrolling using arrow keys\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      /* falls through */\n      case 75: // 'k'\n      case 80: // 'p'\n        turnPage = -1;\n        break;\n      case 27: // esc key\n        if (PDFViewerApplication.secondaryToolbar.isOpen) {\n          PDFViewerApplication.secondaryToolbar.close();\n          handled = true;\n        }\n        if (\n          !PDFViewerApplication.supportsIntegratedFind &&\n          PDFViewerApplication.findBar.opened\n        ) {\n          PDFViewerApplication.findBar.close();\n          handled = true;\n        }\n        break;\n      case 40: // down arrow\n      case 34: // pg down\n        // vertical scrolling using arrow/pg keys\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 13: // enter key\n      case 32: // spacebar\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 39: // right arrow\n        // horizontal scrolling using arrow keys\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      /* falls through */\n      case 74: // 'j'\n      case 78: // 'n'\n        turnPage = 1;\n        break;\n\n      case 36: // home\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 35: // end\n        if (\n          isViewerInPresentationMode ||\n          PDFViewerApplication.page < PDFViewerApplication.pagesCount\n        ) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n\n      case 83: // 's'\n        PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.SELECT);\n        break;\n      case 72: // 'h'\n        PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.HAND);\n        break;\n\n      case 82: // 'r'\n        PDFViewerApplication.rotatePages(90);\n        break;\n\n      case 115: // F4\n        PDFViewerApplication.pdfSidebar.toggle();\n        break;\n    }\n\n    if (\n      turnPage !== 0 &&\n      (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === \"page-fit\")\n    ) {\n      if (turnPage > 0) {\n        pdfViewer.nextPage();\n      } else {\n        pdfViewer.previousPage();\n      }\n      handled = true;\n    }\n  }\n\n  // shift-key\n  if (cmd === 4) {\n    switch (evt.keyCode) {\n      case 13: // enter key\n      case 32: // spacebar\n        if (\n          !isViewerInPresentationMode &&\n          pdfViewer.currentScaleValue !== \"page-fit\"\n        ) {\n          break;\n        }\n        if (PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page--;\n        }\n        handled = true;\n        break;\n\n      case 82: // 'r'\n        PDFViewerApplication.rotatePages(-90);\n        break;\n    }\n  }\n\n  // ngx-extended-pdf-viewer must not enforce getting the focus\n\n  if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n    // The page container is not focused, but a page navigation key has been\n    // pressed. Change the focus to the viewer container to make sure that\n    // navigation by keyboard works as expected.\n    pdfViewer.focus();\n  }\n\n  if (handled) {\n    evt.preventDefault();\n  }\n}\n\nfunction beforeUnload(evt) {\n  evt.preventDefault();\n  evt.returnValue = \"\";\n  return false;\n}\n\n/* Abstract factory for the print service. */\nconst PDFPrintServiceFactory = {\n  instance: {\n    supportsPrinting: false,\n    createPrintService() {\n      throw new Error(\"Not implemented: createPrintService\");\n    },\n  },\n};\n\nexport {\n  DefaultExternalServices,\n  PDFPrintServiceFactory,\n  PDFViewerApplication,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PixelsPerInch } from \"pdfjs-lib\";\n\nconst CSS_UNITS = PixelsPerInch.CSS / PixelsPerInch.PDF;\nconst DEFAULT_SCALE_VALUE = \"auto\";\nconst DEFAULT_SCALE = 1.0;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10.0;\nconst UNKNOWN_SCALE = 0;\nconst MAX_AUTO_SCALE = 1.25;\nconst SCROLLBAR_PADDING = 40;\nconst VERTICAL_PADDING = 5;\n\nconst LOADINGBAR_END_OFFSET_VAR = \"--loadingBar-end-offset\";\n\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3,\n};\n\nconst SidebarView = {\n  UNKNOWN: -1,\n  NONE: 0,\n  THUMBS: 1, // Default value.\n  OUTLINE: 2,\n  ATTACHMENTS: 3,\n  LAYERS: 4,\n};\n\nconst RendererType = {\n  CANVAS: \"canvas\",\n  SVG: \"svg\",\n};\n\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_ENHANCE: 2,\n};\n\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0, // Default value.\n  HORIZONTAL: 1,\n  WRAPPED: 2,\n};\n\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0, // Default value.\n  ODD: 1,\n  EVEN: 2,\n};\n\n// Used by `PDFViewerApplication`, and by the API unit-tests.\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\n\n/**\n * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n * @returns {Object} The object with horizontal (sx) and vertical (sy)\n *                   scales. The scaled property is set to false if scaling is\n *                   not required, true otherwise.\n */\nfunction getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio =\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1,\n  };\n}\n\n/**\n * Scrolls specified element into view of its parent.\n * @param {Object} element - The element to be visible.\n * @param {Object} spot - An object with optional top and left properties,\n *   specifying the offset from the top left edge.\n * @param {boolean} [scrollMatches] - When scrolling search results into view,\n *   ignore elements that either: Contains marked content identifiers,\n *   or have the CSS-rule `overflow: hidden;` set. The default value is `false`.\n */\n// #492 modified by ngx-extended-pdf-viewer\nfunction scrollIntoView(element, spot, scrollMatches = false, infiniteScroll=false) {\n// #492 end of modification\n  // Assuming offsetParent is available (it's not available when viewer is in\n  // hidden iframe or object). We have to scroll: if the offsetParent is not set\n  // producing the error. See also animationStarted.\n\n  // #716 modified by ngx-extended-pdf-viewer\n  if (element.classList.contains(\"stf__item\")) {\n    console.log(\"don't scroll in book mode\");\n    return;\n  }\n  // #716 end of modification\n  \n  let parent = element.offsetParent;\n  if (!parent) {\n    console.error(\"offsetParent is not set -- cannot scroll\");\n    return;\n  }\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n  while (\n    (parent.clientHeight === parent.scrollHeight &&\n      parent.clientWidth === parent.scrollWidth) ||\n    (scrollMatches &&\n      (parent.classList.contains(\"markedContent\") ||\n        getComputedStyle(parent).overflow === \"hidden\"))\n  ) {\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n\n    parent = parent.offsetParent;\n    if (!parent) {\n      // modified by ngx-extended-pdf-viewer #492\n      if (infiniteScroll) {\n        if (document.body.clientHeight > offsetY) {\n          // infinite scroll\n          offsetY -= 32;\n          window.scrollTo(window.scrollX, offsetY);\n        }\n      }\n      // end of modification #492\n      return; // no need to scroll\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\n\n/**\n * Helper function to start monitoring the scroll event and converting them into\n * PDF.js friendly one: with scroll debounce and scroll direction.\n */\nfunction watchScroll(viewAreaElement, callback) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n    // schedule an invocation of scroll for next animation frame.\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll,\n  };\n\n  let rAF = null;\n  viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n  return state;\n}\n\n/**\n * Helper function to parse query string (e.g. ?param1=value&param2=...).\n * @param {string}\n * @returns {Map}\n */\nfunction parseQueryString(query) {\n  const params = new Map();\n  for (const part of query.split(\"&\")) {\n    const param = part.split(\"=\"),\n      key = param[0].toLowerCase(),\n      value = param.length > 1 ? param[1] : \"\";\n    params.set(decodeURIComponent(key), decodeURIComponent(value));\n  }\n  return params;\n}\n\n/**\n * Use binary search to find the index of the first item in a given array which\n * passes a given condition. The items are expected to be sorted in the sense\n * that if the condition is true for one item in the array, then it is also true\n * for all following items.\n *\n * @returns {number} Index of the first array element to pass the test,\n *                   or |items.length| if no such element exists.\n */\nfunction binarySearchFirstItem(items, condition) {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    const currentIndex = (minIndex + maxIndex) >> 1;\n    const currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n  return minIndex; /* === maxIndex */\n}\n\n/**\n *  Approximates float number as a fraction using Farey sequence (max order\n *  of 8).\n *  @param {number} x - Positive float number.\n *  @returns {Array} Estimated fraction: the first array item is a numerator,\n *                   the second one is a denominator.\n */\nfunction approximateFraction(x) {\n  // Fast paths for int numbers or their inversions.\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  const xinv = 1 / x;\n  const limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  // a/b and c/d are neighbours in Farey sequence.\n  let a = 0,\n    b = 1,\n    c = 1,\n    d = 1;\n  // Limiting search to order 8.\n  while (true) {\n    // Generating next term in sequence (order of q).\n    const p = a + c,\n      q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  let result;\n  // Select closest of the neighbours to x.\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\n\nfunction roundToDivide(x, div) {\n  const r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\n\n/**\n * @typedef {Object} GetPageSizeInchesParameters\n * @property {number[]} view\n * @property {number} userUnit\n * @property {number} rotate\n */\n\n/**\n * @typedef {Object} PageSize\n * @property {number} width - In inches.\n * @property {number} height - In inches.\n */\n\n/**\n * Gets the size of the specified page, converted from PDF units to inches.\n * @param {GetPageSizeInchesParameters} params\n * @returns {PageSize}\n */\nfunction getPageSizeInches({ view, userUnit, rotate }) {\n  const [x1, y1, x2, y2] = view;\n  // We need to take the page rotation into account as well.\n  const changeOrientation = rotate % 180 !== 0;\n\n  const width = ((x2 - x1) / 72) * userUnit;\n  const height = ((y2 - y1) / 72) * userUnit;\n\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height,\n  };\n}\n\n/**\n * Helper function for getVisibleElements.\n *\n * @param {number} index - initial guess at the first visible element\n * @param {Array} views - array of pages, into which `index` is an index\n * @param {number} top - the top of the scroll pane\n * @returns {number} less than or equal to `index` that is definitely at or\n *   before the first visible element in `views`, but not by too much. (Usually,\n *   this will be the first element in the first partially visible row in\n *   `views`, although sometimes it goes back one row further.)\n */\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  // binarySearchFirstItem's assumption is that the input is ordered, with only\n  // one index where the conditions flips from false to true: [false ...,\n  // true...]. With vertical scrolling and spreads, it is possible to have\n  // [false ..., true, false, true ...]. With wrapped scrolling we can have a\n  // similar sequence, with many more mixed true and false in the middle.\n  //\n  // So there is no guarantee that the binary search yields the index of the\n  // first visible element. It could have been any of the other visible elements\n  // that were preceded by a hidden element.\n\n  // Of course, if either this element or the previous (hidden) element is also\n  // the first element, there's nothing to worry about.\n  if (index < 2) {\n    return index;\n  }\n\n  // That aside, the possible cases are represented below.\n  //\n  //     ****  = fully hidden\n  //     A*B*  = mix of partially visible and/or hidden pages\n  //     CDEF  = fully visible\n  //\n  // (1) Binary search could have returned A, in which case we can stop.\n  // (2) Binary search could also have returned B, in which case we need to\n  // check the whole row.\n  // (3) Binary search could also have returned C, in which case we need to\n  // check the whole previous row.\n  //\n  // There's one other possibility:\n  //\n  //     ****  = fully hidden\n  //     ABCD  = mix of fully and/or partially visible pages\n  //\n  // (4) Binary search could only have returned A.\n\n  // Initially assume that we need to find the beginning of the current row\n  // (case 1, 2, or 4), which means finding a page that is above the current\n  // page's top. If the found page is partially visible, we're definitely not in\n  // case 3, and this assumption is correct.\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    // The found page is fully visible, so we're actually either in case 3 or 4,\n    // and unfortunately we can't tell the difference between them without\n    // scanning the entire previous row, so we just conservatively assume that\n    // we do need to backtrack to that row. In both cases, the previous page is\n    // in the previous row, so use its top instead.\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  // Now we backtrack to the first page that still has its bottom below\n  // `pageTop`, which is the top of a page in the first visible row (unless\n  // we're in case 4, in which case it's the row before that).\n  // `index` is found by binary search, so the page at `index - 1` is\n  // invisible and we can start looking for potentially visible pages from\n  // `index - 2`. (However, if this loop terminates on its first iteration,\n  // which is the case when pages are stacked vertically, `index` should remain\n  // unchanged, so we use a distinct loop variable.)\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      // We have reached the previous row, so stop now.\n      // This loop is expected to terminate relatively quickly because the\n      // number of pages per row is expected to be small.\n      break;\n    }\n    index = i;\n  }\n  return index;\n}\n\n/**\n * @typedef {Object} GetVisibleElementsParameters\n * @property {HTMLElement} scrollEl - A container that can possibly scroll.\n * @property {Array} views - Objects with a `div` property that contains an\n *   HTMLElement, which should all be descendants of `scrollEl` satisfying the\n *   relevant layout assumptions.\n * @property {boolean} sortByVisibility - If `true`, the returned elements are\n *   sorted in descending order of the percent of their padding box that is\n *   visible. The default value is `false`.\n * @property {boolean} horizontal - If `true`, the elements are assumed to be\n *   laid out horizontally instead of vertically. The default value is `false`.\n * @property {boolean} rtl - If `true`, the `scrollEl` container is assumed to\n *   be in right-to-left mode. The default value is `false`.\n */\n\n/**\n * Generic helper to find out what elements are visible within a scroll pane.\n *\n * Well, pretty generic. There are some assumptions placed on the elements\n * referenced by `views`:\n *   - If `horizontal`, no left of any earlier element is to the right of the\n *     left of any later element.\n *   - Otherwise, `views` can be split into contiguous rows where, within a row,\n *     no top of any element is below the bottom of any other element, and\n *     between rows, no bottom of any element in an earlier row is below the\n *     top of any element in a later row.\n *\n * (Here, top, left, etc. all refer to the padding edge of the element in\n * question. For pages, that ends up being equivalent to the bounding box of the\n * rendering canvas. Earlier and later refer to index in `views`, not page\n * layout.)\n *\n * @param {GetVisibleElementsParameters}\n * @returns {Object} `{ first, last, views: [{ id, x, y, view, percent }] }`\n */\nfunction getVisibleElements({\n  scrollEl,\n  views,\n  sortByVisibility = false,\n  horizontal = false,\n  rtl = false,\n}) {\n  const top = scrollEl.scrollTop,\n    bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n    right = left + scrollEl.clientWidth;\n\n  // Throughout this \"generic\" function, comments will assume we're working with\n  // PDF document pages, which is the most important and complex case. In this\n  // case, the visible elements we're actually interested is the page canvas,\n  // which is contained in a wrapper which adds no padding/border/margin, which\n  // is itself contained in `view.div` which adds no padding (but does add a\n  // border). So, as specified in this function's doc comment, this function\n  // does all of its work on the padding edge of the provided views, starting at\n  // offsetLeft/Top (which includes margin) and adding clientLeft/Top (which is\n  // the border). Adding clientWidth/Height gets us the bottom-right corner of\n  // the padding edge.\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom =\n      element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n  function isElementNextAfterViewHorizontally(view) {\n    const element = view.div;\n    const elementLeft = element.offsetLeft + element.clientLeft;\n    const elementRight = elementLeft + element.clientWidth;\n    return rtl ? elementLeft < right : elementRight > left;\n  }\n\n  const visible = [],\n    numViews = views.length;\n  let firstVisibleElementInd = binarySearchFirstItem(\n    views,\n    horizontal\n      ? isElementNextAfterViewHorizontally\n      : isElementBottomAfterViewTop\n  );\n\n  // Please note the return value of the `binarySearchFirstItem` function when\n  // no valid element is found (hence the `firstVisibleElementInd` check below).\n  if (\n    firstVisibleElementInd > 0 &&\n    firstVisibleElementInd < numViews &&\n    !horizontal\n  ) {\n    // In wrapped scrolling (or vertical scrolling with spreads), with some page\n    // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\n    // condition: there can be pages with bottoms above the view top between\n    // pages with bottoms below. This function detects and corrects that error;\n    // see it for more comments.\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(\n      firstVisibleElementInd,\n      views,\n      top\n    );\n  }\n\n  // lastEdge acts as a cutoff for us to stop looping, because we know all\n  // subsequent pages will be hidden.\n  //\n  // When using wrapped scrolling or vertical scrolling with spreads, we can't\n  // simply stop the first time we reach a page below the bottom of the view;\n  // the tops of subsequent pages on the same row could still be visible. In\n  // horizontal scrolling, we don't have that issue, so we can stop as soon as\n  // we pass `right`, without needing the code below that handles the -1 case.\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n      element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n      viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      // As commented above, this is only needed in non-horizontal cases.\n      // Setting lastEdge to the bottom of the first page that is partially\n      // visible ensures that the next page fully below lastEdge is on the\n      // next row, which has to be fully hidden along with all subsequent rows.\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (\n      viewBottom <= top ||\n      currentHeight >= bottom ||\n      viewRight <= left ||\n      currentWidth >= right\n    ) {\n      continue;\n    }\n\n    const hiddenHeight =\n      Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth =\n      Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n\n    const fractionHeight = (viewHeight - hiddenHeight) / viewHeight,\n      fractionWidth = (viewWidth - hiddenWidth) / viewWidth;\n    const percent = (fractionHeight * fractionWidth * 100) | 0;\n\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n      widthPercent: (fractionWidth * 100) | 0,\n    });\n  }\n\n  const first = visible[0],\n    last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id; // ensure stability\n    });\n  }\n  return { first, last, views: visible };\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\n\nfunction normalizeWheelEventDirection(evt) {\n  let delta = Math.hypot(evt.deltaX, evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    // All that is left-up oriented has to change the sign.\n    delta = -delta;\n  }\n  return delta;\n}\n\nfunction normalizeWheelEventDelta(evt) {\n  let delta = normalizeWheelEventDirection(evt);\n\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n\n  // Converts delta to per-page units\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n  return delta;\n}\n\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction isValidScrollMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(ScrollMode).includes(mode) &&\n    mode !== ScrollMode.UNKNOWN\n  );\n}\n\nfunction isValidSpreadMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(SpreadMode).includes(mode) &&\n    mode !== SpreadMode.UNKNOWN\n  );\n}\n\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nconst WaitOnType = {\n  EVENT: \"event\",\n  TIMEOUT: \"timeout\",\n};\n\n/**\n * @typedef {Object} WaitOnEventOrTimeoutParameters\n * @property {Object} target - The event target, can for example be:\n *   `window`, `document`, a DOM element, or an {EventBus} instance.\n * @property {string} name - The name of the event.\n * @property {number} delay - The delay, in milliseconds, after which the\n *   timeout occurs (if the event wasn't already dispatched).\n */\n\n/**\n * Allows waiting for an event or a timeout, whichever occurs first.\n * Can be used to ensure that an action always occurs, even when an event\n * arrives late or not at all.\n *\n * @param {WaitOnEventOrTimeoutParameters}\n * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\n */\nfunction waitOnEventOrTimeout({ target, name, delay = 0 }) {\n  return new Promise(function (resolve, reject) {\n    if (\n      typeof target !== \"object\" ||\n      !(name && typeof name === \"string\") ||\n      !(Number.isInteger(delay) && delay >= 0)\n    ) {\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    }\n\n    function handler(type) {\n      if (target instanceof EventBus) {\n        target._off(name, eventHandler);\n      } else {\n        target.removeEventListener(name, eventHandler);\n      }\n\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      resolve(type);\n    }\n\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\n    if (target instanceof EventBus) {\n      target._on(name, eventHandler);\n    } else {\n      target.addEventListener(name, eventHandler);\n    }\n\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n    const timeout = setTimeout(timeoutHandler, delay);\n  });\n}\n\n/**\n * Promise that is resolved when DOM window becomes visible.\n */\nconst animationStarted = new Promise(function (resolve) {\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"LIB\") &&\n    typeof window === \"undefined\"\n  ) {\n    // Prevent \"ReferenceError: window is not defined\" errors when running the\n    // unit-tests in Node.js environments.\n    setTimeout(resolve, 20);\n    return;\n  }\n  window.requestAnimationFrame(resolve);\n});\n\n/**\n * Simple event bus for an application. Listeners are attached using the `on`\n * and `off` methods. To raise an event, the `dispatch` method shall be used.\n */\nclass EventBus {\n  constructor() {\n    this._listeners = Object.create(null);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   * @param {Object} [options]\n   */\n  on(eventName, listener, options = null) {\n    this._on(eventName, listener, {\n      external: true,\n      once: options?.once,\n    });\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   * @param {Object} [options]\n   */\n  off(eventName, listener, options = null) {\n    this._off(eventName, listener, {\n      external: true,\n      once: options?.once,\n    });\n  }\n\n  dispatch(eventName) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners || eventListeners.length === 0) {\n      return;\n    }\n    // Passing all arguments after the eventName to the listeners.\n    const args = Array.prototype.slice.call(arguments, 1);\n    let externalListeners;\n    // Making copy of the listeners array in case if it will be modified\n    // during dispatch.\n    for (const { listener, external, once } of eventListeners.slice(0)) {\n      if (once) {\n        this._off(eventName, listener);\n      }\n      if (external) {\n        (externalListeners ||= []).push(listener);\n        continue;\n      }\n      listener.apply(null, args);\n    }\n    // Dispatch any \"external\" listeners *after* the internal ones, to give the\n    // viewer components time to handle events and update their state first.\n    if (externalListeners) {\n      for (const listener of externalListeners) {\n        listener.apply(null, args);\n      }\n      externalListeners = null;\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  _on(eventName, listener, options = null) {\n    const eventListeners = (this._listeners[eventName] ||= []);\n    eventListeners.push({\n      listener,\n      external: options?.external === true,\n      once: options?.once === true,\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _off(eventName, listener, options = null) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners) {\n      return;\n    }\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n      if (eventListeners[i].listener === listener) {\n        eventListeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n}\n\n/**\n * NOTE: Only used to support various PDF viewer tests in `mozilla-central`.\n */\nclass AutomationEventBus extends EventBus {\n  dispatch(eventName) {\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: AutomationEventBus.dispatch\");\n    }\n    super.dispatch(...arguments);\n\n    const details = Object.create(null);\n    if (arguments.length > 1) {\n      const obj = arguments[1];\n      for (const key in obj) {\n        const value = obj[key];\n        if (key === \"source\") {\n          if (value === window || value === document) {\n            return; // No need to re-dispatch (already) global events.\n          }\n          continue; // Ignore the `source` property.\n        }\n        details[key] = value;\n      }\n    }\n    const event = document.createEvent(\"CustomEvent\");\n    event.initCustomEvent(eventName, true, true, details);\n    document.dispatchEvent(event);\n  }\n}\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nclass ProgressBar {\n  constructor(id, { height, width, units } = {}) {\n    this.visible = true;\n\n    // Fetch the sub-elements for later.\n    this.div = document.querySelector(id + \" .progress\");\n    // Get the loading bar element, so it can be resized to fit the viewer.\n    if (this.div) {\n      this.bar = this.div.parentNode;\n    }\n\n    // Get options, with sensible defaults.\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || \"%\";\n\n    // Initialize heights.\n    if (this.div) {\n      this.div.style.height = this.height + this.units;\n    }\n    this.percent = 0;\n  }\n\n  _updateBar() {\n    if (this._indeterminate) {\n      this.div.classList.add(\"indeterminate\");\n      this.div.style.width = this.width + this.units;\n      return;\n    }\n\n    if (this.div) {\n      this.div.classList.remove(\"indeterminate\");\n    }\n\n    const progressSize = (this.width * this._percent) / 100;\n    if (this.div) {\n      this.div.style.width = progressSize + this.units;\n    }\n  }\n\n  get percent() {\n    return this._percent;\n  }\n\n  set percent(val) {\n    this._indeterminate = isNaN(val);\n    this._percent = clamp(val, 0, 100);\n    this._updateBar();\n  }\n\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n    const container = viewer.parentNode;\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n    if (scrollbarWidth > 0) {\n      const doc = document.documentElement;\n      doc.style.setProperty(LOADINGBAR_END_OFFSET_VAR, `${scrollbarWidth}px`);\n    }\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n    this.visible = false;\n    this.div = document.querySelector(\".body #mainContainer .progress\"); // always set this new instead of trying to cache this value\n    if (this.div) {\n      this.bar = this.div.parentNode; // always set this new instead of trying to cache this value\n      this.bar.classList.add(\"hidden\");\n    }\n\n    document.body.classList.remove(\"loadingInProgress\");\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n    this.visible = true;\n    this.bar.classList.remove(\"hidden\");\n  }\n}\n\n/**\n * Moves all elements of an array that satisfy condition to the end of the\n * array, preserving the order of the rest.\n */\nfunction moveToEndOfArray(arr, condition) {\n  const moved = [],\n    len = arr.length;\n  let write = 0;\n  for (let read = 0; read < len; ++read) {\n    if (condition(arr[read])) {\n      moved.push(arr[read]);\n    } else {\n      arr[write] = arr[read];\n      ++write;\n    }\n  }\n  for (let read = 0; write < len; ++read, ++write) {\n    arr[write] = moved[read];\n  }\n}\n\n/**\n * Get the active or focused element in current DOM.\n *\n * Recursively search for the truly active or focused element in case there are\n * shadow DOMs.\n *\n * @returns {Element} the truly active or focused element.\n */\nfunction getActiveOrFocusedElement() {\n  let curRoot = document;\n  let curActiveOrFocused =\n    curRoot.activeElement || curRoot.querySelector(\":focus\");\n\n  while (curActiveOrFocused?.shadowRoot) {\n    curRoot = curActiveOrFocused.shadowRoot;\n    curActiveOrFocused =\n      curRoot.activeElement || curRoot.querySelector(\":focus\");\n  }\n\n  return curActiveOrFocused;\n}\n\n/**\n * Converts API PageLayout values to the format used by `BaseViewer`.\n * NOTE: This is supported to the extent that the viewer implements the\n *       necessary Scroll/Spread modes (since SinglePage, TwoPageLeft,\n *       and TwoPageRight all suggests using non-continuous scrolling).\n * @param {string} mode - The API PageLayout value.\n * @returns {number} A value from {SpreadMode}.\n */\nfunction apiPageLayoutToSpreadMode(layout) {\n  switch (layout) {\n    case \"SinglePage\":\n    case \"OneColumn\":\n      return SpreadMode.NONE;\n    case \"TwoColumnLeft\":\n    case \"TwoPageLeft\":\n      return SpreadMode.ODD;\n    case \"TwoColumnRight\":\n    case \"TwoPageRight\":\n      return SpreadMode.EVEN;\n  }\n  return SpreadMode.NONE; // Default value.\n}\n\n/**\n * Converts API PageMode values to the format used by `PDFSidebar`.\n * NOTE: There's also a \"FullScreen\" parameter which is not possible to support,\n *       since the Fullscreen API used in browsers requires that entering\n *       fullscreen mode only occurs as a result of a user-initiated event.\n * @param {string} mode - The API PageMode value.\n * @returns {number} A value from {SidebarView}.\n */\nfunction apiPageModeToSidebarView(mode) {\n  switch (mode) {\n    case \"UseNone\":\n      return SidebarView.NONE;\n    case \"UseThumbs\":\n      return SidebarView.THUMBS;\n    case \"UseOutlines\":\n      return SidebarView.OUTLINE;\n    case \"UseAttachments\":\n      return SidebarView.ATTACHMENTS;\n    case \"UseOC\":\n      return SidebarView.LAYERS;\n  }\n  return SidebarView.NONE; // Default value.\n}\n\nexport {\n  animationStarted,\n  apiPageLayoutToSpreadMode,\n  apiPageModeToSidebarView,\n  approximateFraction,\n  AutomationEventBus,\n  AutoPrintRegExp,\n  backtrackBeforeAllVisibleElements, // only exported for testing\n  binarySearchFirstItem,\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_VALUE,\n  EventBus,\n  getActiveOrFocusedElement,\n  getOutputScale,\n  getPageSizeInches,\n  getVisibleElements,\n  isPortraitOrientation,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_AUTO_SCALE,\n  MAX_SCALE,\n  MIN_SCALE,\n  moveToEndOfArray,\n  noContextMenuHandler,\n  normalizeWheelEventDelta,\n  normalizeWheelEventDirection,\n  parseQueryString,\n  PresentationModeState,\n  ProgressBar,\n  RendererType,\n  roundToDivide,\n  SCROLLBAR_PADDING,\n  scrollIntoView,\n  ScrollMode,\n  SidebarView,\n  SpreadMode,\n  TextLayerMode,\n  UNKNOWN_SCALE,\n  VERTICAL_PADDING,\n  waitOnEventOrTimeout,\n  WaitOnType,\n  watchScroll,\n};\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals module, __non_webpack_require__ */\n\n\"use strict\";\n\nmodule.exports = window[\"pdfjs-dist/build/pdf\"];\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GrabToPan } from \"./grab_to_pan.js\";\nimport { PresentationModeState } from \"./ui_utils.js\";\n\nconst CursorTool = {\n  SELECT: 0, // The default value.\n  HAND: 1,\n  ZOOM: 2,\n};\n\n/**\n * @typedef {Object} PDFCursorToolsOptions\n * @property {HTMLDivElement} container - The document container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [cursorToolOnLoad] - The cursor tool that will be enabled\n *   on load; the constants from {CursorTool} should be used. The default value\n *   is `CursorTool.SELECT`.\n */\n\nclass PDFCursorTools {\n  /**\n   * @param {PDFCursorToolsOptions} options\n   */\n  constructor({ container, eventBus, cursorToolOnLoad = CursorTool.SELECT }) {\n    this.container = container;\n    this.eventBus = eventBus;\n\n    this.active = CursorTool.SELECT;\n    this.activeBeforePresentationMode = null;\n\n    this.handTool = new GrabToPan({\n      element: this.container,\n    });\n\n    this._addEventListeners();\n\n    // Defer the initial `switchTool` call, to give other viewer components\n    // time to initialize *and* register 'cursortoolchanged' event listeners.\n    Promise.resolve().then(() => {\n      this.switchTool(cursorToolOnLoad);\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {CursorTool}.\n   */\n  get activeTool() {\n    return this.active;\n  }\n\n  /**\n   * NOTE: This method is ignored while Presentation Mode is active.\n   * @param {number} tool - The cursor mode that should be switched to,\n   *                        must be one of the values in {CursorTool}.\n   */\n  switchTool(tool) {\n    if (this.activeBeforePresentationMode !== null) {\n      return; // Cursor tools cannot be used in Presentation Mode.\n    }\n    if (tool === this.active) {\n      return; // The requested tool is already active.\n    }\n\n    const disableActiveTool = () => {\n      switch (this.active) {\n        case CursorTool.SELECT:\n          break;\n        case CursorTool.HAND:\n          this.handTool.deactivate();\n          break;\n        case CursorTool.ZOOM:\n        /* falls through */\n      }\n    };\n\n    // Enable the new cursor tool.\n    switch (tool) {\n      case CursorTool.SELECT:\n        disableActiveTool();\n        break;\n      case CursorTool.HAND:\n        disableActiveTool();\n        this.handTool.activate();\n        break;\n      case CursorTool.ZOOM:\n      /* falls through */\n      default:\n        console.error(`switchTool: \"${tool}\" is an unsupported value.`);\n        return;\n    }\n    // Update the active tool *after* it has been validated above,\n    // in order to prevent setting it to an invalid state.\n    this.active = tool;\n\n    this._dispatchEvent();\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"cursortoolchanged\", {\n      source: this,\n      tool: this.active,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    this.eventBus._on(\"switchcursortool\", evt => {\n      this.switchTool(evt.tool);\n    });\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      switch (evt.state) {\n        case PresentationModeState.FULLSCREEN: {\n          const previouslyActive = this.active;\n\n          this.switchTool(CursorTool.SELECT);\n          this.activeBeforePresentationMode = previouslyActive;\n          break;\n        }\n        case PresentationModeState.NORMAL: {\n          const previouslyActive = this.activeBeforePresentationMode;\n\n          this.activeBeforePresentationMode = null;\n          this.switchTool(previouslyActive);\n          break;\n        }\n      }\n    });\n  }\n}\n\nexport { CursorTool, PDFCursorTools };\n","/* Copyright 2013 Rob Wu <rob@robwu.nl>\n * https://github.com/Rob--W/grab-to-pan.js\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Construct a GrabToPan instance for a given HTML element.\n * @param options.element {Element}\n * @param options.ignoreTarget {function} optional. See `ignoreTarget(node)`\n * @param options.onActiveChanged {function(boolean)} optional. Called\n *  when grab-to-pan is (de)activated. The first argument is a boolean that\n *  shows whether grab-to-pan is activated.\n */\nfunction GrabToPan(options) {\n  this.element = options.element;\n  this.document = options.element.ownerDocument;\n  if (typeof options.ignoreTarget === \"function\") {\n    this.ignoreTarget = options.ignoreTarget;\n  }\n  this.onActiveChanged = options.onActiveChanged;\n\n  // Bind the contexts to ensure that `this` always points to\n  // the GrabToPan instance.\n  this.activate = this.activate.bind(this);\n  this.deactivate = this.deactivate.bind(this);\n  this.toggle = this.toggle.bind(this);\n  this._onmousedown = this._onmousedown.bind(this);\n  this._onmousemove = this._onmousemove.bind(this);\n  this._endPan = this._endPan.bind(this);\n\n  // This overlay will be inserted in the document when the mouse moves during\n  // a grab operation, to ensure that the cursor has the desired appearance.\n  const overlay = (this.overlay = document.createElement(\"div\"));\n  overlay.className = \"grab-to-pan-grabbing\";\n}\nGrabToPan.prototype = {\n  /**\n   * Class name of element which can be grabbed\n   */\n  CSS_CLASS_GRAB: \"grab-to-pan-grab\",\n\n  /**\n   * Bind a mousedown event to the element to enable grab-detection.\n   */\n  activate: function GrabToPan_activate() {\n    if (!this.active) {\n      this.active = true;\n      this.element.addEventListener(\"mousedown\", this._onmousedown, true);\n      this.element.classList.add(this.CSS_CLASS_GRAB);\n      if (this.onActiveChanged) {\n        this.onActiveChanged(true);\n      }\n    }\n  },\n\n  /**\n   * Removes all events. Any pending pan session is immediately stopped.\n   */\n  deactivate: function GrabToPan_deactivate() {\n    if (this.active) {\n      this.active = false;\n      this.element.removeEventListener(\"mousedown\", this._onmousedown, true);\n      this._endPan();\n      this.element.classList.remove(this.CSS_CLASS_GRAB);\n      if (this.onActiveChanged) {\n        this.onActiveChanged(false);\n      }\n    }\n  },\n\n  toggle: function GrabToPan_toggle() {\n    if (this.active) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  },\n\n  /**\n   * Whether to not pan if the target element is clicked.\n   * Override this method to change the default behaviour.\n   *\n   * @param node {Element} The target of the event\n   * @returns {boolean} Whether to not react to the click event.\n   */\n  ignoreTarget: function GrabToPan_ignoreTarget(node) {\n    // #716 modified by ngx-extended-pdf-viewer\n    if (document.querySelector(\".stf__item\")) {\n      return true;\n    }\n\t// #716 end of modification\n    \n    // Check whether the clicked element is, a child of, an input element/link.\n    return node.matches(\n      \"a[href], a[href] *, input, textarea, button, button *, select, option\"\n    );\n  },\n\n  /**\n   * @private\n   */\n  _onmousedown: function GrabToPan__onmousedown(event) {\n    if (event.button !== 0 || this.ignoreTarget(event.target)) {\n      return;\n    }\n    if (event.originalTarget) {\n      try {\n        // eslint-disable-next-line no-unused-expressions\n        event.originalTarget.tagName;\n      } catch (e) {\n        // Mozilla-specific: element is a scrollbar (XUL element)\n        return;\n      }\n    }\n\n    this.scrollLeftStart = this.element.scrollLeft;\n    this.scrollTopStart = this.element.scrollTop;\n    this.clientXStart = event.clientX;\n    this.clientYStart = event.clientY;\n\n    /* modified by ngx-extended-pdf-viewer #469 */\n    if (isOverPerfectScrollbar(this.clientXStart, this.clientYStart, \"ps__rail-x\")) {\n      return;\n    }\n    if (isOverPerfectScrollbar(this.clientXStart, this.clientYStart, \"ps__rail-y\")) {\n      return;\n    }\n    /* end of modification */\n\n    this.document.addEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.addEventListener(\"mouseup\", this._endPan, true);\n    // When a scroll event occurs before a mousemove, assume that the user\n    // dragged a scrollbar (necessary for Opera Presto, Safari and IE)\n    // (not needed for Chrome/Firefox)\n    this.element.addEventListener(\"scroll\", this._endPan, true);\n    event.preventDefault();\n    event.stopPropagation();\n\n    const focusedElement = document.activeElement;\n    if (focusedElement && !focusedElement.contains(event.target)) {\n      focusedElement.blur();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onmousemove: function GrabToPan__onmousemove(event) {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    if (isLeftMouseReleased(event)) {\n      this._endPan();\n      return;\n    }\n    const xDiff = event.clientX - this.clientXStart;\n    const yDiff = event.clientY - this.clientYStart;\n    const scrollTop = this.scrollTopStart - yDiff;\n    const scrollLeft = this.scrollLeftStart - xDiff;\n    if (this.element.scrollTo) {\n      this.element.scrollTo({\n        top: scrollTop,\n        left: scrollLeft,\n        behavior: \"instant\",\n      });\n    } else {\n      this.element.scrollTop = scrollTop;\n      this.element.scrollLeft = scrollLeft;\n    }\n    if (!this.overlay.parentNode) {\n      document.body.appendChild(this.overlay);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _endPan: function GrabToPan__endPan() {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    this.document.removeEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.removeEventListener(\"mouseup\", this._endPan, true);\n    // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n    this.overlay.remove();\n  },\n};\n\n/**\n * Whether the left mouse is not pressed.\n * @param event {MouseEvent}\n * @returns {boolean} True if the left mouse button is not pressed,\n *                    False if unsure or if the left mouse button is pressed.\n */\nfunction isLeftMouseReleased(event) {\n  if (\"buttons\" in event) {\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-buttons\n    // Firefox 15+\n    // Chrome 43+\n    // Safari 11.1+\n    return !(event.buttons & 1);\n  }\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n    // Browser sniffing because it's impossible to feature-detect\n    // whether event.which for onmousemove is reliable.\n    const chrome = window.chrome;\n    const isChrome15OrOpera15plus = chrome && (chrome.webstore || chrome.app);\n    //                                         ^ Chrome 15+       ^ Opera 15+\n    const isSafari6plus =\n      /Apple/.test(navigator.vendor) &&\n      /Version\\/([6-9]\\d*|[1-5]\\d+)/.test(navigator.userAgent);\n\n    if (isChrome15OrOpera15plus || isSafari6plus) {\n      // Chrome 14+\n      // Opera 15+\n      // Safari 6.0+\n      return event.which === 0;\n    }\n  }\n  return false;\n}\n\n/* modified by ngx-extended-pdf-viewer #469 */\nfunction isOverPerfectScrollbar(x, y, divName) {\n  const  perfectScrollbar = document.getElementsByClassName(divName);\n  if (perfectScrollbar && perfectScrollbar.length === 1) {\n    var {top, right, bottom, left} = perfectScrollbar[0].getBoundingClientRect();\n    if (y >= top && y <= bottom) {\n      if (x <= right && x >= left) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/* end of modification */\n\nexport { GrabToPan };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RenderingCancelledException } from \"pdfjs-lib\";\n\nconst CLEANUP_TIMEOUT = 30000;\n\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3,\n};\n\n/**\n * Controls rendering of the views for pages and thumbnails.\n */\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    /** @type {number} */\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  /**\n   * @param {PDFViewer} pdfViewer\n   */\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  /**\n   * @param {PDFThumbnailViewer} pdfThumbnailViewer\n   */\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasViewer() {\n    return !!this.pdfViewer;\n  }\n\n  /**\n   * @param {Object} currentlyVisiblePages\n   */\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    // Pages have a higher priority than thumbnails, so check them first.\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n    // No pages needed rendering, so check thumbnails.\n    if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n      if (this.pdfThumbnailViewer.forceRendering()) {\n        return;\n      }\n    }\n\n    if (this.printing) {\n      // If printing is currently ongoing do not reschedule cleanup.\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n\n  /**\n   * @param {Object} visible\n   * @param {Array} views\n   * @param {boolean} scrolledDown\n   */\n  getHighestPriority(visible, views, scrolledDown) {\n    /**\n     * The state has changed. Figure out which page has the highest priority to\n     * render next (if any).\n     *\n     * Priority:\n     * 1. visible pages\n     * 2. if last scrolled down, the page after the visible pages, or\n     *    if last scrolled up, the page before the visible pages\n     */\n    const visibleViews = visible.views;\n\n    const numVisible = visibleViews.length;\n    if (numVisible === 0) {\n      return null;\n    }\n    for (let i = 0; i < numVisible; ++i) {\n      const view = visibleViews[i].view;\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n\n    // All the visible views have rendered; try to render next/previous pages.\n    if (scrolledDown) {\n      const nextPageIndex = visible.last.id;\n      // IDs start at 1, so no need to add 1.\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n        return views[nextPageIndex];\n      }\n    } else {\n      const previousPageIndex = visible.first.id - 2;\n      if (\n        views[previousPageIndex] &&\n        !this.isViewFinished(views[previousPageIndex])\n      ) {\n        return views[previousPageIndex];\n      }\n    }\n    // Everything that needs to be rendered has been.\n    return null;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  /**\n   * Render a page or thumbnail view. This calls the appropriate function\n   * based on the views state. If the view is already rendered it will return\n   * `false`.\n   *\n   * @param {IRenderableView} view\n   */\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view\n          .draw()\n          .finally(() => {\n            this.renderHighestPriority();\n          })\n          .catch(reason => {\n            if (reason instanceof RenderingCancelledException) {\n              return;\n            }\n            console.error(`renderView: \"${reason}\"`);\n          });\n        break;\n    }\n    return true;\n  }\n}\n\nexport { PDFRenderingQueue, RenderingStates };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass OverlayManager {\n  constructor() {\n    this._overlays = {};\n    this._active = null;\n    this._keyDownBound = this._keyDown.bind(this);\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that is registered.\n   * @param {HTMLDivElement} element - The overlay's DOM element.\n   * @param {function} [callerCloseMethod] - The method that, if present, calls\n   *                   `OverlayManager.close` from the object registering the\n   *                   overlay. Access to this method is necessary in order to\n   *                   run cleanup code when e.g. the overlay is force closed.\n   *                   The default is `null`.\n   * @param {boolean} [canForceClose] - Indicates if opening the overlay closes\n   *                  an active overlay. The default is `false`.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    registered.\n   */\n  async register(\n    name,\n    element,\n    callerCloseMethod = null,\n    canForceClose = false\n  ) {\n    let container;\n    if (!name || !element || !(container = element.parentNode)) {\n      throw new Error(\"Not enough parameters.\");\n    } else if (this._overlays[name]) {\n      throw new Error(\"The overlay is already registered.\");\n    }\n    this._overlays[name] = {\n      element,\n      container,\n      callerCloseMethod,\n      canForceClose,\n    };\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that is unregistered.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    unregistered.\n   */\n  async unregister(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active === name) {\n      throw new Error(\"The overlay cannot be removed while it is active.\");\n    }\n    delete this._overlays[name];\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that should be opened.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    opened.\n   */\n  async open(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active) {\n      if (this._overlays[name].canForceClose) {\n        this._closeThroughCaller();\n      } else if (this._active === name) {\n        throw new Error(\"The overlay is already active.\");\n      } else {\n        throw new Error(\"Another overlay is currently active.\");\n      }\n    }\n    this._active = name;\n    this._overlays[this._active].element.classList.remove(\"hidden\");\n    this._overlays[this._active].container.classList.remove(\"hidden\");\n\n    window.addEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that should be closed.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    closed.\n   */\n  async close(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (!this._active) {\n      throw new Error(\"The overlay is currently not active.\");\n    } else if (this._active !== name) {\n      throw new Error(\"Another overlay is currently active.\");\n    }\n    this._overlays[this._active].container.classList.add(\"hidden\");\n    this._overlays[this._active].element.classList.add(\"hidden\");\n    this._active = null;\n\n    window.removeEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  /**\n   * @private\n   */\n  _keyDown(evt) {\n    if (this._active && evt.keyCode === /* Esc = */ 27) {\n      this._closeThroughCaller();\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _closeThroughCaller() {\n    if (this._overlays[this._active].callerCloseMethod) {\n      this._overlays[this._active].callerCloseMethod();\n    }\n    if (this._active) {\n      this.close(this._active);\n    }\n  }\n}\n\nexport { OverlayManager };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PasswordResponses } from \"pdfjs-lib\";\n\n/**\n * @typedef {Object} PasswordPromptOptions\n * @property {string} overlayName - Name of the overlay for the overlay manager.\n * @property {HTMLDivElement} container - Div container for the overlay.\n * @property {HTMLParagraphElement} label - Label containing instructions for\n *                                          entering the password.\n * @property {HTMLInputElement} input - Input field for entering the password.\n * @property {HTMLButtonElement} submitButton - Button for submitting the\n *                                              password.\n * @property {HTMLButtonElement} cancelButton - Button for cancelling password\n *                                              entry.\n */\n\nclass PasswordPrompt {\n  /**\n   * @param {PasswordPromptOptions} options\n   * @param {OverlayManager} overlayManager - Manager for the viewer overlays.\n   * @param {IL10n} l10n - Localization service.\n   * @param {boolean} [isViewerEmbedded] - If the viewer is embedded, in e.g.\n   *   an <iframe> or an <object>. The default value is `false`.\n   */\n  constructor(options, overlayManager, l10n, isViewerEmbedded = false) {\n    this.overlayName = options.overlayName;\n    this.container = options.container;\n    this.label = options.label;\n    this.input = options.input;\n    this.submitButton = options.submitButton;\n    this.cancelButton = options.cancelButton;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n    this._isViewerEmbedded = isViewerEmbedded;\n\n    this.updateCallback = null;\n    this.reason = null;\n\n    // Attach the event listeners.\n    this.submitButton.addEventListener(\"click\", this.verify.bind(this));\n    this.cancelButton.addEventListener(\"click\", this.close.bind(this));\n    this.input.addEventListener(\"keydown\", e => {\n      if (e.keyCode === /* Enter = */ 13) {\n        this.verify();\n      }\n    });\n\n    this.overlayManager.register(\n      this.overlayName,\n      this.container,\n      this.close.bind(this),\n      true\n    );\n  }\n\n  async open() {\n    await this.overlayManager.open(this.overlayName);\n    this.input.type = \"password\";\n    this.input.focus();\n\n    const passwordIncorrect =\n      this.reason === PasswordResponses.INCORRECT_PASSWORD;\n\n    if (!this._isViewerEmbedded || passwordIncorrect) {\n      this.input.focus();\n    }\n    this.label.textContent = await this.l10n.get(\n      `password_${passwordIncorrect ? \"invalid\" : \"label\"}`\n    );\n  }\n\n  close() {\n    this.overlayManager.close(this.overlayName).then(() => {\n      this.input.type = \"\";\n      this.input.value = \"\";\n    });\n  }\n\n  verify() {\n    const password = this.input.value;\n    if (password?.length > 0) {\n      this.close();\n      this.updateCallback(password);\n    }\n  }\n\n  setUpdateCallback(updateCallback, reason) {\n    this.updateCallback = updateCallback;\n    this.reason = reason;\n  }\n}\n\nexport { PasswordPrompt };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability, getFilenameFromUrl } from \"pdfjs-lib\";\nimport { BaseTreeViewer } from \"./base_tree_viewer.js\";\n\n/**\n * @typedef {Object} PDFAttachmentViewerOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {DownloadManager} downloadManager - The download manager.\n */\n\n/**\n * @typedef {Object} PDFAttachmentViewerRenderParameters\n * @property {Object|null} attachments - A lookup table of attachment objects.\n */\n\nclass PDFAttachmentViewer extends BaseTreeViewer {\n  /**\n   * @param {PDFAttachmentViewerOptions} options\n   */\n  constructor(options) {\n    super(options);\n    this.downloadManager = options.downloadManager;\n\n    this.eventBus._on(\n      \"fileattachmentannotation\",\n      this._appendAttachment.bind(this)\n    );\n  }\n\n  reset(keepRenderedCapability = false) {\n    super.reset();\n    this._attachments = null;\n\n    if (!keepRenderedCapability) {\n      // The only situation in which the `_renderedCapability` should *not* be\n      // replaced is when appending FileAttachment annotations.\n      this._renderedCapability = createPromiseCapability();\n    }\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n    }\n    this._pendingDispatchEvent = null;\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(attachmentsCount) {\n    this._renderedCapability.resolve();\n\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n      this._pendingDispatchEvent = null;\n    }\n    if (attachmentsCount === 0) {\n      // Delay the event when no \"regular\" attachments exist, to allow time for\n      // parsing of any FileAttachment annotations that may be present on the\n      // *initially* rendered page; this reduces the likelihood of temporarily\n      // disabling the attachmentsView when the `PDFSidebar` handles the event.\n      this._pendingDispatchEvent = setTimeout(() => {\n        this.eventBus.dispatch(\"attachmentsloaded\", {\n          source: this,\n          attachmentsCount: 0,\n        });\n        this._pendingDispatchEvent = null;\n      });\n      return;\n    }\n\n    this.eventBus.dispatch(\"attachmentsloaded\", {\n      source: this,\n      attachmentsCount,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, { content, filename }) {\n    element.onclick = () => {\n      this.downloadManager.openOrDownloadData(element, content, filename);\n      return false;\n    };\n  }\n\n  /**\n   * @param {PDFAttachmentViewerRenderParameters} params\n   */\n  render({ attachments, keepRenderedCapability = false }) {\n    if (this._attachments) {\n      this.reset(keepRenderedCapability);\n    }\n    this._attachments = attachments || null;\n\n    if (!attachments) {\n      this._dispatchEvent(/* attachmentsCount = */ 0);\n      return;\n    }\n    const names = Object.keys(attachments).sort(function (a, b) {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n\n    const fragment = document.createDocumentFragment();\n    let attachmentsCount = 0;\n    for (const name of names) {\n      const item = attachments[name];\n      const content = item.content,\n        filename = getFilenameFromUrl(item.filename);\n\n      const div = document.createElement(\"div\");\n      div.className = \"treeItem\";\n\n      const element = document.createElement(\"a\");\n      this._bindLink(element, { content, filename });\n      element.textContent = this._normalizeTextContent(filename);\n\n      div.appendChild(element);\n\n      fragment.appendChild(div);\n      attachmentsCount++;\n    }\n\n    this._finishRendering(fragment, attachmentsCount);\n  }\n\n  /**\n   * Used to append FileAttachment annotations to the sidebar.\n   * @private\n   */\n  _appendAttachment({ id, filename, content }) {\n    const renderedPromise = this._renderedCapability.promise;\n\n    renderedPromise.then(() => {\n      if (renderedPromise !== this._renderedCapability.promise) {\n        return; // The FileAttachment annotation belongs to a previous document.\n      }\n      let attachments = this._attachments;\n\n      if (!attachments) {\n        attachments = Object.create(null);\n      } else {\n        for (const name in attachments) {\n          if (id === name) {\n            return; // Ignore the new attachment if it already exists.\n          }\n        }\n      }\n      attachments[id] = {\n        filename,\n        content,\n      };\n      this.render({\n        attachments,\n        keepRenderedCapability: true,\n      });\n    });\n  }\n}\n\nexport { PDFAttachmentViewer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { removeNullCharacters } from \"pdfjs-lib\";\n\nconst TREEITEM_OFFSET_TOP = -100; // px\nconst TREEITEM_SELECTED_CLASS = \"selected\";\n\nclass BaseTreeViewer {\n  constructor(options) {\n    if (this.constructor === BaseTreeViewer) {\n      throw new Error(\"Cannot initialize BaseTreeViewer.\");\n    }\n    this.container = options.container;\n    this.eventBus = options.eventBus;\n\n    this.reset();\n  }\n\n  reset() {\n    this._pdfDocument = null;\n    this._lastToggleIsShow = true;\n    this._currentTreeItem = null;\n\n    // Remove the tree from the DOM.\n    this.container.textContent = \"\";\n    // Ensure that the left (right in RTL locales) margin is always reset,\n    // to prevent incorrect tree alignment if a new document is opened.\n    this.container.classList.remove(\"treeWithDeepNesting\");\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(count) {\n    throw new Error(\"Not implemented: _dispatchEvent\");\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, params) {\n    throw new Error(\"Not implemented: _bindLink\");\n  }\n\n  /**\n   * @private\n   */\n  _normalizeTextContent(str) {\n    return removeNullCharacters(str) || /* en dash = */ \"\\u2013\";\n  }\n\n  /**\n   * Prepend a button before a tree item which allows the user to collapse or\n   * expand all tree items at that level; see `_toggleTreeItem`.\n   * @private\n   */\n  _addToggleButton(div, hidden = false) {\n    const toggler = document.createElement(\"div\");\n    toggler.className = \"treeItemToggler\";\n    if (hidden) {\n      toggler.classList.add(\"treeItemsHidden\");\n    }\n    toggler.onclick = evt => {\n      evt.stopPropagation();\n      toggler.classList.toggle(\"treeItemsHidden\");\n\n      if (evt.shiftKey) {\n        const shouldShowAll = !toggler.classList.contains(\"treeItemsHidden\");\n        this._toggleTreeItem(div, shouldShowAll);\n      }\n    };\n    div.insertBefore(toggler, div.firstChild);\n  }\n\n  /**\n   * Collapse or expand the subtree of a tree item.\n   *\n   * @param {Element} root - the root of the item (sub)tree.\n   * @param {boolean} show - whether to show the item (sub)tree. If false,\n   *   the item subtree rooted at `root` will be collapsed.\n   * @private\n   */\n  _toggleTreeItem(root, show = false) {\n    this._lastToggleIsShow = show;\n    for (const toggler of root.querySelectorAll(\".treeItemToggler\")) {\n      toggler.classList.toggle(\"treeItemsHidden\", !show);\n    }\n  }\n\n  /**\n   * Collapse or expand all subtrees of the `container`.\n   * @private\n   */\n  _toggleAllTreeItems() {\n    this._toggleTreeItem(this.container, !this._lastToggleIsShow);\n  }\n\n  /**\n   * @private\n   */\n  _finishRendering(fragment, count, hasAnyNesting = false) {\n    if (hasAnyNesting) {\n      this.container.classList.add(\"treeWithDeepNesting\");\n\n      this._lastToggleIsShow = !fragment.querySelector(\".treeItemsHidden\");\n    }\n    this.container.appendChild(fragment);\n\n    this._dispatchEvent(count);\n  }\n\n  render(params) {\n    throw new Error(\"Not implemented: render\");\n  }\n\n  /**\n   * @private\n   */\n  _updateCurrentTreeItem(treeItem = null) {\n    if (this._currentTreeItem) {\n      // Ensure that the current treeItem-selection is always removed.\n      this._currentTreeItem.classList.remove(TREEITEM_SELECTED_CLASS);\n      this._currentTreeItem = null;\n    }\n    if (treeItem) {\n      treeItem.classList.add(TREEITEM_SELECTED_CLASS);\n      this._currentTreeItem = treeItem;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _scrollToCurrentTreeItem(treeItem) {\n    if (!treeItem) {\n      return;\n    }\n    // Ensure that the treeItem is *fully* expanded, such that it will first of\n    // all be visible and secondly that scrolling it into view works correctly.\n    let currentNode = treeItem.parentNode;\n    while (currentNode && currentNode !== this.container) {\n      if (currentNode.classList.contains(\"treeItem\")) {\n        const toggler = currentNode.firstElementChild;\n        toggler?.classList.remove(\"treeItemsHidden\");\n      }\n      currentNode = currentNode.parentNode;\n    }\n    this._updateCurrentTreeItem(treeItem);\n\n    this.container.scrollTo(\n      treeItem.offsetLeft,\n      treeItem.offsetTop + TREEITEM_OFFSET_TOP\n    );\n  }\n}\n\nexport { BaseTreeViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createPromiseCapability,\n  getPdfFilenameFromUrl,\n  PDFDateString,\n} from \"pdfjs-lib\";\nimport { getPageSizeInches, isPortraitOrientation } from \"./ui_utils.js\";\n\nconst DEFAULT_FIELD_CONTENT = \"-\";\n\n// See https://en.wikibooks.org/wiki/Lentis/Conversion_to_the_Metric_Standard_in_the_United_States\nconst NON_METRIC_LOCALES = [\"en-us\", \"en-lr\", \"my\"];\n\n// Should use the format: `width x height`, in portrait orientation.\n// See https://en.wikipedia.org/wiki/Paper_size\nconst US_PAGE_NAMES = {\n  \"8.5x11\": \"Letter\",\n  \"8.5x14\": \"Legal\",\n};\nconst METRIC_PAGE_NAMES = {\n  \"297x420\": \"A3\",\n  \"210x297\": \"A4\",\n};\n\nfunction getPageName(size, isPortrait, pageNames) {\n  const width = isPortrait ? size.width : size.height;\n  const height = isPortrait ? size.height : size.width;\n\n  return pageNames[`${width}x${height}`];\n}\n\n/**\n * @typedef {Object} PDFDocumentPropertiesOptions\n * @property {string} overlayName - Name/identifier for the overlay.\n * @property {Object} fields - Names and elements of the overlay's fields.\n * @property {HTMLDivElement} container - Div container for the overlay.\n * @property {HTMLButtonElement} closeButton - Button for closing the overlay.\n */\n\nclass PDFDocumentProperties {\n  /**\n   * @param {PDFDocumentPropertiesOptions} options\n   * @param {OverlayManager} overlayManager - Manager for the viewer overlays.\n   * @param {EventBus} eventBus - The application event bus.\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(\n    { overlayName, fields, container, closeButton },\n    overlayManager,\n    eventBus,\n    l10n\n  ) {\n    this.overlayName = overlayName;\n    this.fields = fields;\n    this.container = container;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n\n    this._reset();\n    // Bind the event listener for the Close button.\n    closeButton.addEventListener(\"click\", this.close.bind(this));\n\n    this.overlayManager.register(\n      this.overlayName,\n      this.container,\n      this.close.bind(this)\n    );\n\n    eventBus._on(\"pagechanging\", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n    eventBus._on(\"rotationchanging\", evt => {\n      this._pagesRotation = evt.pagesRotation;\n    });\n\n    this._isNonMetricLocale = true; // The default viewer locale is 'en-us'.\n    l10n.getLanguage().then(locale => {\n      this._isNonMetricLocale = NON_METRIC_LOCALES.includes(locale);\n    });\n  }\n\n  /**\n   * Open the document properties overlay.\n   */\n  async open() {\n    const freezeFieldData = data => {\n      Object.defineProperty(this, \"fieldData\", {\n        value: Object.freeze(data),\n        writable: false,\n        enumerable: true,\n        configurable: true,\n      });\n    };\n\n    await Promise.all([\n      this.overlayManager.open(this.overlayName),\n      this._dataAvailableCapability.promise,\n    ]);\n    const currentPageNumber = this._currentPageNumber;\n    const pagesRotation = this._pagesRotation;\n\n    // If the document properties were previously fetched (for this PDF file),\n    // just update the dialog immediately to avoid redundant lookups.\n    if (\n      this.fieldData &&\n      currentPageNumber === this.fieldData._currentPageNumber &&\n      pagesRotation === this.fieldData._pagesRotation\n    ) {\n      this._updateUI();\n      return;\n    }\n\n    // Get the document properties.\n    const {\n      info,\n      /* metadata, */\n      contentDispositionFilename,\n      contentLength,\n    } = await this.pdfDocument.getMetadata();\n\n    const [\n      fileName,\n      fileSize,\n      creationDate,\n      modificationDate,\n      pageSize,\n      isLinearized,\n    ] = await Promise.all([\n      contentDispositionFilename || getPdfFilenameFromUrl(this.url),\n      this._parseFileSize(contentLength),\n      this._parseDate(info.CreationDate),\n      this._parseDate(info.ModDate),\n      this.pdfDocument.getPage(currentPageNumber).then(pdfPage => {\n        return this._parsePageSize(getPageSizeInches(pdfPage), pagesRotation);\n      }),\n      this._parseLinearization(info.IsLinearized),\n    ]);\n\n    freezeFieldData({\n      fileName,\n      fileSize,\n      title: info.Title,\n      author: info.Author,\n      subject: info.Subject,\n      keywords: info.Keywords,\n      creationDate,\n      modificationDate,\n      creator: info.Creator,\n      producer: info.Producer,\n      version: info.PDFFormatVersion,\n      pageCount: this.pdfDocument.numPages,\n      pageSize,\n      linearized: isLinearized,\n      _currentPageNumber: currentPageNumber,\n      _pagesRotation: pagesRotation,\n    });\n    this._updateUI();\n\n    // Get the correct fileSize, since it may not have been available\n    // or could potentially be wrong.\n    const { length } = await this.pdfDocument.getDownloadInfo();\n    if (contentLength === length) {\n      return; // The fileSize has already been correctly set.\n    }\n    const data = Object.assign(Object.create(null), this.fieldData);\n    data.fileSize = await this._parseFileSize(length);\n\n    freezeFieldData(data);\n    this._updateUI();\n  }\n\n  /**\n   * Close the document properties overlay.\n   */\n  close() {\n    this.overlayManager.close(this.overlayName);\n  }\n\n  /**\n   * Set a reference to the PDF document and the URL in order\n   * to populate the overlay fields with the document properties.\n   * Note that the overlay will contain no information if this method\n   * is not called.\n   *\n   * @param {PDFDocumentProxy} pdfDocument - A reference to the PDF document.\n   * @param {string} url - The URL of the document.\n   */\n  setDocument(pdfDocument, url = null) {\n    if (this.pdfDocument) {\n      this._reset();\n      this._updateUI(true);\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this.pdfDocument = pdfDocument;\n    this.url = url;\n\n    this._dataAvailableCapability.resolve();\n  }\n\n  /**\n   * @private\n   */\n  _reset() {\n    this.pdfDocument = null;\n    this.url = null;\n\n    delete this.fieldData;\n    this._dataAvailableCapability = createPromiseCapability();\n    this._currentPageNumber = 1;\n    this._pagesRotation = 0;\n  }\n\n  /**\n   * Always updates all of the dialog fields, to prevent inconsistent UI state.\n   * NOTE: If the contents of a particular field is neither a non-empty string,\n   *       nor a number, it will fall back to `DEFAULT_FIELD_CONTENT`.\n   * @private\n   */\n  _updateUI(reset = false) {\n    if (reset || !this.fieldData) {\n      for (const id in this.fields) {\n        this.fields[id].textContent = DEFAULT_FIELD_CONTENT;\n      }\n      return;\n    }\n    if (this.overlayManager.active !== this.overlayName) {\n      // Don't bother updating the dialog if has already been closed,\n      // since it will be updated the next time `this.open` is called.\n      return;\n    }\n    for (const id in this.fields) {\n      const content = this.fieldData[id];\n      this.fields[id].textContent =\n        content || content === 0 ? content : DEFAULT_FIELD_CONTENT;\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _parseFileSize(fileSize = 0) {\n    const kb = fileSize / 1024,\n      mb = kb / 1024;\n    if (!kb) {\n      return undefined;\n    }\n    return this.l10n.get(`document_properties_${mb >= 1 ? \"mb\" : \"kb\"}`, {\n      size_mb: mb >= 1 && (+mb.toPrecision(3)).toLocaleString(),\n      size_kb: mb < 1 && (+kb.toPrecision(3)).toLocaleString(),\n      size_b: fileSize.toLocaleString(),\n    });\n  }\n\n  /**\n   * @private\n   */\n  async _parsePageSize(pageSizeInches, pagesRotation) {\n    if (!pageSizeInches) {\n      return undefined;\n    }\n    // Take the viewer rotation into account as well; compare with Adobe Reader.\n    if (pagesRotation % 180 !== 0) {\n      pageSizeInches = {\n        width: pageSizeInches.height,\n        height: pageSizeInches.width,\n      };\n    }\n    const isPortrait = isPortraitOrientation(pageSizeInches);\n\n    let sizeInches = {\n      width: Math.round(pageSizeInches.width * 100) / 100,\n      height: Math.round(pageSizeInches.height * 100) / 100,\n    };\n    // 1in == 25.4mm; no need to round to 2 decimals for millimeters.\n    let sizeMillimeters = {\n      width: Math.round(pageSizeInches.width * 25.4 * 10) / 10,\n      height: Math.round(pageSizeInches.height * 25.4 * 10) / 10,\n    };\n\n    let rawName =\n      getPageName(sizeInches, isPortrait, US_PAGE_NAMES) ||\n      getPageName(sizeMillimeters, isPortrait, METRIC_PAGE_NAMES);\n\n    if (\n      !rawName &&\n      !(\n        Number.isInteger(sizeMillimeters.width) &&\n        Number.isInteger(sizeMillimeters.height)\n      )\n    ) {\n      // Attempt to improve the page name detection by falling back to fuzzy\n      // matching of the metric dimensions, to account for e.g. rounding errors\n      // and/or PDF files that define the page sizes in an imprecise manner.\n      const exactMillimeters = {\n        width: pageSizeInches.width * 25.4,\n        height: pageSizeInches.height * 25.4,\n      };\n      const intMillimeters = {\n        width: Math.round(sizeMillimeters.width),\n        height: Math.round(sizeMillimeters.height),\n      };\n\n      // Try to avoid false positives, by only considering \"small\" differences.\n      if (\n        Math.abs(exactMillimeters.width - intMillimeters.width) < 0.1 &&\n        Math.abs(exactMillimeters.height - intMillimeters.height) < 0.1\n      ) {\n        rawName = getPageName(intMillimeters, isPortrait, METRIC_PAGE_NAMES);\n        if (rawName) {\n          // Update *both* sizes, computed above, to ensure that the displayed\n          // dimensions always correspond to the detected page name.\n          sizeInches = {\n            width: Math.round((intMillimeters.width / 25.4) * 100) / 100,\n            height: Math.round((intMillimeters.height / 25.4) * 100) / 100,\n          };\n          sizeMillimeters = intMillimeters;\n        }\n      }\n    }\n\n    const [{ width, height }, unit, name, orientation] = await Promise.all([\n      this._isNonMetricLocale ? sizeInches : sizeMillimeters,\n      this.l10n.get(\n        `document_properties_page_size_unit_${\n          this._isNonMetricLocale ? \"inches\" : \"millimeters\"\n        }`\n      ),\n      rawName &&\n        this.l10n.get(\n          `document_properties_page_size_name_${rawName.toLowerCase()}`\n        ),\n      this.l10n.get(\n        `document_properties_page_size_orientation_${\n          isPortrait ? \"portrait\" : \"landscape\"\n        }`\n      ),\n    ]);\n\n    return this.l10n.get(\n      `document_properties_page_size_dimension_${name ? \"name_\" : \"\"}string`,\n      {\n        width: width.toLocaleString(),\n        height: height.toLocaleString(),\n        unit,\n        name,\n        orientation,\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  async _parseDate(inputDate) {\n    const dateObject = PDFDateString.toDateObject(inputDate);\n    if (!dateObject) {\n      return undefined;\n    }\n    return this.l10n.get(\"document_properties_date_string\", {\n      date: dateObject.toLocaleDateString(),\n      time: dateObject.toLocaleTimeString(),\n    });\n  }\n\n  /**\n   * @private\n   */\n  _parseLinearization(isLinearized) {\n    return this.l10n.get(\n      `document_properties_linearized_${isLinearized ? \"yes\" : \"no\"}`\n    );\n  }\n}\n\nexport { PDFDocumentProperties };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FindState } from \"./pdf_find_controller.js\";\n\nconst MATCHES_COUNT_LIMIT = 1000;\n\n/**\n * Creates a \"search bar\" given a set of DOM elements that act as controls\n * for searching or for setting search preferences in the UI. This object\n * also sets up the appropriate events for the controls. Actual searching\n * is done by PDFFindController.\n */\nclass PDFFindBar {\n  constructor(options, eventBus, l10n) {\n    this.opened = false;\n\n    this.bar = options.bar;\n    this.toggleButton = options.toggleButton;\n    this.findField = options.findField;\n    this.highlightAll = options.highlightAllCheckbox;\n    this.caseSensitive = options.caseSensitiveCheckbox;\n    this.entireWord = options.entireWordCheckbox;\n    this.findMsg = options.findMsg;\n    this.findResultsCount = options.findResultsCount;\n    this.findPreviousButton = options.findPreviousButton;\n    this.findNextButton = options.findNextButton;\n    this.findFieldMultiline = options.findFieldMultiline || null; // #201\n    this.multipleSearchTexts = options.findMultipleSearchTextsCheckbox || null; // #201\n    this.ignoreAccents = options.ignoreAccentsCheckbox || null; // #177\n    this.fuzzySearch = options.fuzzyCheckbox || null; // #304\n\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n\n    // Add event listeners to the DOM elements.\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n\n    this.findFieldMultiline.addEventListener(\"input\", () => {\n      // #201\n      this.dispatchEvent(\"\");\n    });\n\n    this.findField.addEventListener(\"input\", () => {\n      this.dispatchEvent(\"\");\n    });\n\n    this.bar.addEventListener(\"keydown\", e => {\n      switch (e.keyCode) {\n        case 13: // Enter\n          if (e.target === this.findField) {\n            this.dispatchEvent(\"again\", e.shiftKey);\n          }\n          break;\n        case 27: // Escape\n          this.close();\n          break;\n      }\n    });\n\n    this.findPreviousButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", true);\n    });\n\n    this.findNextButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", false);\n    });\n\n    this.highlightAll.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"highlightallchange\");\n    });\n\n    this.caseSensitive.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"casesensitivitychange\");\n    });\n\n    this.entireWord.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"entirewordchange\");\n    });\n\n    this.multipleSearchTexts.addEventListener(\"click\", () => {\n      // #201\n      this.dispatchEvent(\"multiplesearchtextschange\"); // #201\n    }); // #201\n\n    this.ignoreAccents.addEventListener(\"click\", () => {\n      // #177\n      this.dispatchEvent(\"ignoreAccentsChange\"); // #177\n    }); // #177\n\n    this.fuzzySearch.addEventListener(\"click\", () => {\n      // #304\n      this.dispatchEvent(\"fuzzySearchChange\"); // #304\n    }); // #304\n\n    this.eventBus._on(\"resize\", this._adjustWidth.bind(this));\n  }\n\n  reset() {\n    this.updateUIState();\n  }\n\n  dispatchEvent(type, findPrev) {\n    this.eventBus.dispatch(\"find\", {\n      source: this,\n      type,\n      query: this.findFieldMultiline.classList.contains(\"hidden\")\n        ? this.findField.value\n        : this.findFieldMultiline.value, // #201\n      phraseSearch: !this.multipleSearchTexts.checked, // #201\n      caseSensitive: this.caseSensitive.checked,\n      entireWord: this.entireWord.checked,\n      ignoreAccents: this.ignoreAccents.checked, // #177\n      fuzzySearch: this.fuzzySearch.checked, // #304\n      highlightAll: this.highlightAll.checked,\n      findPrevious: findPrev,\n    });\n  }\n\n  updateUIState(state, previous, matchesCount) {\n    let findMsg = Promise.resolve(\"\");\n    let status = \"\";\n\n    switch (state) {\n      case FindState.FOUND:\n        break;\n      case FindState.PENDING:\n        status = \"pending\";\n        break;\n      case FindState.NOT_FOUND:\n        findMsg = this.l10n.get(\"find_not_found\");\n        status = \"notFound\";\n        break;\n      case FindState.WRAPPED:\n        findMsg = this.l10n.get(`find_reached_${previous ? \"top\" : \"bottom\"}`);\n        break;\n    }\n    this.findField.setAttribute(\"data-status\", status);\n    this.findFieldMultiline.classList.toggle(\"notFound\", status === \"notFound\"); // #201\n    this.findFieldMultiline.setAttribute(\"data-status\", status); // #201\n\n    findMsg.then(msg => {\n      this.findMsg.textContent = msg;\n      this._adjustWidth();\n    });\n\n    this.updateResultsCount(matchesCount);\n  }\n\n  updateResultsCount({ current = 0, total = 0 } = {}) {\n    const limit = MATCHES_COUNT_LIMIT;\n    let matchCountMsg = Promise.resolve(\"\");\n\n    if (total > 0) {\n      if (total > limit) {\n        let key = \"find_match_count_limit\";\n\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n          // TODO: Remove this hard-coded `[other]` form once plural support has\n          // been implemented in the mozilla-central specific `l10n.js` file.\n          key += \"[other]\";\n        }\n        matchCountMsg = this.l10n.get(key, { limit });\n      } else {\n        let key = \"find_match_count\";\n\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n          // TODO: Remove this hard-coded `[other]` form once plural support has\n          // been implemented in the mozilla-central specific `l10n.js` file.\n          key += \"[other]\";\n        }\n        matchCountMsg = this.l10n.get(key, { current, total });\n      }\n    }\n    matchCountMsg.then(msg => {\n      this.findResultsCount.textContent = msg;\n      this.findResultsCount.classList.toggle(\"hidden\", !total);\n      // Since `updateResultsCount` may be called from `PDFFindController`,\n      // ensure that the width of the findbar is always updated correctly.\n      this._adjustWidth();\n    });\n  }\n\n  open() {\n    if (!this.opened) {\n      this.opened = true;\n      this.toggleButton.classList.add(\"toggled\");\n      this.toggleButton.setAttribute(\"aria-expanded\", \"true\");\n      this.bar.classList.remove(\"hidden\");\n    }\n    this.findField.select();\n    this.findField.focus();\n    this.dispatchEvent(\"\"); // #206\n\n    this._adjustWidth();\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n    this.opened = false;\n    this.toggleButton.classList.remove(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"false\");\n    this.bar.classList.add(\"hidden\");\n\n    this.eventBus.dispatch(\"findbarclose\", { source: this });\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _adjustWidth() {\n    if (!this.opened) {\n      return;\n    }\n\n    // The find bar has an absolute position and thus the browser extends\n    // its width to the maximum possible width once the find bar does not fit\n    // entirely within the window anymore (and its elements are automatically\n    // wrapped). Here we detect and fix that.\n    this.bar.classList.remove(\"wrapContainers\");\n\n    const findbarHeight = this.bar.clientHeight;\n    const inputContainerHeight = this.bar.firstElementChild.clientHeight;\n\n    if (findbarHeight > inputContainerHeight) {\n      // The findbar is taller than the input container, which means that\n      // the browser wrapped some of the elements. For a consistent look,\n      // wrap all of them to adjust the width of the find bar.\n      this.bar.classList.add(\"wrapContainers\");\n    }\n  }\n}\n\nexport { PDFFindBar };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line no-unused-vars\nimport { createPromiseCapability } from \"pdfjs-lib\";\nimport { deburr } from \"../external/lodash.deburr/index.js\"; // #177\nimport { getCharacterType } from \"./pdf_find_utils.js\";\nimport { Levenshtein } from \"../external/fast-levenshtein/levenshtein.js\";\nimport { scrollIntoView } from \"./ui_utils.js\";\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3,\n};\n\nconst FIND_TIMEOUT = 250; // ms\nconst MATCH_SCROLL_OFFSET_TOP = -50; // px\nconst MATCH_SCROLL_OFFSET_LEFT = -400; // px\n\nconst CHARACTERS_TO_NORMALIZE = {\n  \"\\u2010\": \"-\", // Hyphen\n  \"\\u2018\": \"'\", // Left single quotation mark\n  \"\\u2019\": \"'\", // Right single quotation mark\n  \"\\u201A\": \"'\", // Single low-9 quotation mark\n  \"\\u201B\": \"'\", // Single high-reversed-9 quotation mark\n  \"\\u201C\": '\"', // Left double quotation mark\n  \"\\u201D\": '\"', // Right double quotation mark\n  \"\\u201E\": '\"', // Double low-9 quotation mark\n  \"\\u201F\": '\"', // Double high-reversed-9 quotation mark\n  \"\\u00BC\": \"1/4\", // Vulgar fraction one quarter\n  \"\\u00BD\": \"1/2\", // Vulgar fraction one half\n  \"\\u00BE\": \"3/4\", // Vulgar fraction three quarters\n};\n\nlet normalizationRegex = null;\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    // Compile the regular expression for text normalization once.\n    // Compile the regular expression for text normalization once.\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n    normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n  }\n  let diffs = null;\n  const normalizedText = text.replace(normalizationRegex, function (ch, index) {\n    const normalizedCh = CHARACTERS_TO_NORMALIZE[ch],\n      diff = normalizedCh.length - ch.length;\n    if (diff !== 0) {\n      (diffs ||= []).push([index, diff]);\n    }\n    return normalizedCh;\n  });\n\n  return [normalizedText, diffs];\n}\n\n// Determine the original, non-normalized, match index such that highlighting of\n// search results is correct in the `textLayer` for strings containing e.g. \"½\"\n// characters; essentially \"inverting\" the result of the `normalize` function.\nfunction getOriginalIndex(matchIndex, diffs = null) {\n  if (!diffs) {\n    return matchIndex;\n  }\n  let totalDiff = 0;\n  for (const [index, diff] of diffs) {\n    const currentIndex = index + totalDiff;\n\n    if (currentIndex >= matchIndex) {\n      break;\n    }\n    if (currentIndex + diff > matchIndex) {\n      totalDiff += matchIndex - currentIndex;\n      break;\n    }\n    totalDiff += diff;\n  }\n  return matchIndex - totalDiff;\n}\n\n/**\n * @typedef {Object} PDFFindControllerOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * Provides search functionality to find a given string in a PDF document.\n */\nclass PDFFindController {\n  /**\n   * @param {PDFFindControllerOptions} options\n   */\n   /** #492 modified by ngx-extended-pdf-viewer */\n  constructor({ linkService, eventBus, pageViewMode }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n    this._pageViewMode = pageViewMode;\n    /** #492 end of modification */\n    this._reset();\n    eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesColor() {\n    // #201\n    return this._pageMatchesColor; // #201\n  } // #201\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  /**\n   * Set a reference to the PDF document in order to search it.\n   * Note that searching is not possible if this method is not called.\n   *\n   * @param {PDFDocumentProxy} pdfDocument - The PDF document to search.\n   */\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this._pdfDocument = pdfDocument;\n    this._firstPageCapability.resolve();\n  }\n\n  executeCommand(cmd, state) {\n    if (!state) {\n      return;\n    }\n    const pdfDocument = this._pdfDocument;\n\n    if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n      this._dirtyMatch = true;\n    }\n    this._state = state;\n    if (cmd !== \"findhighlightallchange\") {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      // If the document was closed before searching began, or if the search\n      // operation was relevant for a previously opened document, do nothing.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      if (cmd === \"find\") {\n        // Trigger the find action with a small delay to avoid starting the\n        // search when the user is still typing (saving resources).\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        // Immediately trigger searching for non-'find' operations, when the\n        // current state needs to be reset and matches re-calculated.\n        this._nextMatch();\n      } else if (cmd === \"findagain\") {\n        this._nextMatch();\n\n        // When the findbar was previously closed, and `highlightAll` is set,\n        // ensure that the matches on all active pages are highlighted again.\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (cmd === \"findhighlightallchange\") {\n        // If there was a pending search operation, synchronously trigger a new\n        // search *first* to ensure that the correct matches are highlighted.\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n        this._updateAllPages(); // Update the highlighting on all active pages.\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({\n    element = null,\n    selectedLeft = 0,\n    pageIndex = -1,\n    matchIndex = -1,\n  }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n    this._scrollMatches = false; // Ensure that scrolling only happens once.\n\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: selectedLeft + MATCH_SCROLL_OFFSET_LEFT,\n    };\n    /** #492 modified by ngx-extended-pdf-viewer */\n    scrollIntoView(element, spot, /* scrollMatches = */ true, this._pageViewMode === 'infinite-scroll');\n    /** #492 end of modification */\n  }\n\n  _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._pageMatchesColor = []; // #201\n    this._state = null;\n    // Currently selected match.\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1,\n    };\n    // Where the find algorithm currently is in the document.\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false,\n    };\n    this._extractTextPromises = [];\n    this._pageContents = []; // Stores the normalized text for each page.\n    this._pageDiffs = [];\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = new Set();\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n\n    this._firstPageCapability = createPromiseCapability();\n  }\n\n  /**\n   * @type {string} The (current) normalized search query.\n   */\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      [this._normalizedQuery] = normalize(this._state.query);\n    }\n    return this._normalizedQuery;\n  }\n\n  _shouldDirtyMatch(cmd, state) {\n    // When the search query changes, regardless of the actual search command\n    // used, always re-calculate matches to avoid errors (fixes bug 1030622).\n    if (state.query !== this._state.query) {\n      return true;\n    }\n    switch (cmd) {\n      case \"findagain\":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n        // Only treat a 'findagain' event as a new search operation when it's\n        // *absolutely* certain that the currently selected match is no longer\n        // visible, e.g. as a result of the user scrolling in the document.\n        //\n        // NOTE: If only a simple `this._linkService.page` check was used here,\n        // there's a risk that consecutive 'findagain' operations could \"skip\"\n        // over matches at the top/bottom of pages thus making them completely\n        // inaccessible when there's multiple pages visible in the viewer.\n        if (\n          pageNumber >= 1 &&\n          pageNumber <= linkService.pagesCount &&\n          pageNumber !== linkService.page &&\n          !linkService.isPageVisible(pageNumber)\n        ) {\n          return true;\n        }\n        return false;\n      case \"findhighlightallchange\":\n        return false;\n    }\n    return true;\n  }\n\n  /**\n   * Helper for multi-term search that fills the `matchesWithLength` array\n   * and handles cases where one search term includes another search term (for\n   * example, \"tamed tame\" or \"this is\"). It looks for intersecting terms in\n   * the `matches` and keeps elements with a longer match length.\n   */\n  _prepareMatches(\n    matchesWithLength,\n    matches,\n    matchesLength,\n    matchesColor // #201\n  ) {\n    function isSubTerm(currentIndex) {\n      const currentElem = matchesWithLength[currentIndex];\n      const nextElem = matchesWithLength[currentIndex + 1];\n\n      // Check for cases like \"TAMEd TAME\".\n      if (\n        currentIndex < matchesWithLength.length - 1 &&\n        currentElem.match === nextElem.match\n      ) {\n        currentElem.skipped = true;\n        return true;\n      }\n\n      // Check for cases like \"thIS IS\".\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        const prevElem = matchesWithLength[i];\n        if (prevElem.skipped) {\n          continue;\n        }\n        if (prevElem.match + prevElem.matchLength < currentElem.match) {\n          break;\n        }\n        if (\n          prevElem.match + prevElem.matchLength >=\n          currentElem.match + currentElem.matchLength\n        ) {\n          currentElem.skipped = true;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Sort the array of `{ match: <match>, matchLength: <matchLength> }`\n    // objects on increasing index first and on the length otherwise.\n    matchesWithLength.sort(function (a, b) {\n      return a.match === b.match\n        ? a.matchLength - b.matchLength\n        : a.match - b.match;\n    });\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (isSubTerm(i)) {\n        continue;\n      }\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n      matchesColor.push(matchesWithLength[i].color); // #201\n    }\n  }\n\n  /**\n   * Determine if the search query constitutes a \"whole word\", by comparing the\n   * first/last character type with the preceding/following character type.\n   */\n  _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n      if (getCharacterType(first) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    const endIdx = startIdx + length - 1;\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n      if (getCharacterType(last) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _calculateFuzzyMatch(query, pageIndex, pageContent, pageDiffs) {\n    const matches = [];\n    const matchesLength = [];\n\n    const queryLen = query.length;\n    const shortLen = queryLen < 5 ? queryLen : 5;\n    const maxDistance = Math.round(queryLen / 5);\n    const shortQuery = query.substring(0, shortLen);\n    const options = {\n      useCollator: true,\n    };\n\n    for (let i = 0; i < pageContent.length - queryLen; i++) {\n      const shortCurrentContent = pageContent.substring(i, i + shortLen);\n      if (Levenshtein.distance(shortQuery, shortCurrentContent, options) < 3) {\n        const currentContent = pageContent.substring(i, i + queryLen);\n\n        const distance = Levenshtein.distance(query, currentContent, options);\n        if (distance <= maxDistance) {\n          // we've found a decent match.\n          // But maybe the match gets better one letter ahead?\n          if (i + 1 < pageContent.length - queryLen) {\n            const nextCurrentContent = pageContent.substring(i + 1, i + 1 + queryLen);\n            const nextDistance = Levenshtein.distance(query, nextCurrentContent, options);\n            if (distance >= nextDistance) {\n              continue;\n            }\n          }\n\n          const originalMatchIdx = getOriginalIndex(i, pageDiffs),\n            matchEnd = i + queryLen - 1,\n            originalQueryLen =\n              getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n\n          matches.push(originalMatchIdx);\n          matchesLength.push(originalQueryLen);\n          i += queryLen - 1;\n        }\n      }\n    }\n    this._pageMatches[pageIndex] = matches;\n    this._pageMatchesLength[pageIndex] = matchesLength;\n  }\n\n  _calculatePhraseMatch(\n    query,\n    pageIndex,\n    pageContent,\n    pageDiffs,\n    entireWord,\n    ignoreAccents\n  ) {\n    // #177\n    if (ignoreAccents) {\n      // #177\n      pageContent = deburr(pageContent); // #177\n      query = deburr(query); // #177\n    } // #177\n\n    const matches = [],\n      matchesLength = [];\n    const queryLen = query.length;\n\n    let matchIdx = -queryLen;\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n      if (matchIdx === -1) {\n        break;\n      }\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n      const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n        matchEnd = matchIdx + queryLen - 1,\n        originalQueryLen =\n          getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n\n      matches.push(originalMatchIdx);\n      matchesLength.push(originalQueryLen);\n    }\n    this._pageMatches[pageIndex] = matches;\n    this._pageMatchesLength[pageIndex] = matchesLength;\n  }\n\n  _calculateWordMatch(\n    query,\n    pageIndex,\n    pageContent,\n    pageDiffs,\n    entireWord,\n    ignoreAccents\n  ) {\n    // #177\n    if (ignoreAccents) {\n      // #177\n      pageContent = deburr(pageContent); // #177\n      query = deburr(query); // #177\n    } // #177\n    const matchesWithLength = [];\n\n    // Divide the query into pieces and search for text in each piece.\n    const queryArray = query.includes(\"\\n\")\n      ? query.trim().split(/\\n+/g)\n      : query.trim().match(/\\S+/g); // #201\n\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n      if (subqueryLen === 0) {\n        continue;\n      }\n\n      let matchIdx = -subqueryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        if (\n          entireWord &&\n          !this._isEntireWord(pageContent, matchIdx, subqueryLen)\n        ) {\n          continue;\n        }\n        const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n          matchEnd = matchIdx + subqueryLen - 1,\n          originalQueryLen =\n            getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n\n        // Other searches do not, so we store the length.\n        matchesWithLength.push({\n          match: originalMatchIdx,\n          matchLength: originalQueryLen,\n          skipped: false,\n          color: i, // #201\n        });\n      }\n    }\n\n    // Prepare arrays for storing the matches.\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatchesColor[pageIndex] = []; // #201\n    this._pageMatches[pageIndex] = [];\n\n    // Sort `matchesWithLength`, remove intersecting terms and put the result\n    // into the two arrays.\n    this._prepareMatches(\n      matchesWithLength,\n      this._pageMatches[pageIndex],\n      this._pageMatchesLength[pageIndex],\n      this._pageMatchesColor[pageIndex] // #201\n    );\n  }\n\n  _calculateMatch(pageIndex) {\n    let pageContent = this._pageContents[pageIndex];\n    const pageDiffs = this._pageDiffs[pageIndex];\n    let query = this._query;\n    const {\n      caseSensitive,\n      entireWord,\n      ignoreAccents, // #177\n      fuzzySearch, // #304\n      phraseSearch,\n    } = this._state;\n\n    if (query.length === 0) {\n      // Do nothing: the matches should be wiped out already.\n      return;\n    }\n\n    if (!caseSensitive) {\n      pageContent = pageContent.toLowerCase();\n      query = query.toLowerCase();\n    }\n\n    if (fuzzySearch) {\n      if (query.length <= 2) {\n        this._calculatePhraseMatch(\n          query,\n          pageIndex,\n          pageContent,\n          pageDiffs,\n          false\n        );\n      } else {\n        this._calculateFuzzyMatch(query, pageIndex, pageContent, pageDiffs);\n      }\n    } else if (phraseSearch) {\n      this._calculatePhraseMatch(\n        query,\n        pageIndex,\n        pageContent,\n        pageDiffs,\n        entireWord,\n        ignoreAccents\n      ); // #177\n    } else {\n      this._calculateWordMatch(\n        query,\n        pageIndex,\n        pageContent,\n        pageDiffs,\n        entireWord,\n        ignoreAccents\n      ); // #177\n    }\n\n    // When `highlightAll` is set, ensure that the matches on previously\n    // rendered (and still active) pages are correctly highlighted.\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n      this._nextPageMatch();\n    }\n\n    // Update the match count.\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n      this._updateUIResultsCount();\n    }\n  }\n\n  _extractText() {\n    // Perform text extraction once if this method is called multiple times.\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = createPromiseCapability();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n\n      promise = promise.then(() => {\n        return this._pdfDocument\n          .getPage(i + 1)\n          .then(pdfPage => {\n            return pdfPage.getTextContent({\n              normalizeWhitespace: true,\n            });\n          })\n          .then(\n            textContent => {\n              const textItems = textContent.items;\n              const strBuf = [];\n\n              for (let j = 0, jj = textItems.length; j < jj; j++) {\n                strBuf.push(textItems[j].str);\n              }\n\n              // Store the normalized page content (text items) as one string.\n              [this._pageContents[i], this._pageDiffs[i]] = normalize(\n                strBuf.join(\"\")\n              );\n\n              extractTextCapability.resolve(i);\n            },\n            reason => {\n              console.error(\n                `Unable to get text content for page ${i + 1}`,\n                reason\n              );\n              // Page error -- assuming no text content.\n              this._pageContents[i] = \"\";\n              this._pageDiffs[i] = null;\n              extractTextCapability.resolve(i);\n            }\n          );\n      });\n    }\n  }\n\n  _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      // If the page is selected, scroll the page into view, which triggers\n      // rendering the page, which adds the text layer. Once the text layer\n      // is built, it will attempt to scroll the selected match into view.\n      this._linkService.page = index + 1;\n    }\n\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: index,\n    });\n  }\n\n  _updateAllPages() {\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: -1,\n    });\n  }\n\n  _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      // Need to recalculate the matches, reset everything.\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._pageMatchesColor.length = 0; // #201\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n\n      for (let i = 0; i < numPages; i++) {\n        // Start finding the matches as soon as the text is extracted.\n        if (this._pendingFindMatches.has(i)) {\n          continue;\n        }\n        this._pendingFindMatches.add(i);\n        this._extractTextPromises[i].then(pageIdx => {\n          this._pendingFindMatches.delete(pageIdx);\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    // If there's no query there's no point in searching.\n    if (this._query === \"\") {\n      this._updateUIState(FindState.FOUND);\n      return;\n    }\n    // If we're waiting on a page, we return since we can't do anything else.\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    // Keep track of how many pages we should maximally iterate through.\n    this._pagesToSearch = numPages;\n    // If there's already a `matchIdx` that means we are iterating through a\n    // page's matches.\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n      if (\n        (!previous && offset.matchIdx + 1 < numPageMatches) ||\n        (previous && offset.matchIdx > 0)\n      ) {\n        // The simple case; we just have advance the matchIdx to select\n        // the next match on the page.\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n        this._updateMatch(/* found = */ true);\n        return;\n      }\n      // We went beyond the current page's matches, so we advance to\n      // the next page.\n      this._advanceOffsetPage(previous);\n    }\n    // Start searching through the page.\n    this._nextPageMatch();\n  }\n\n  _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      // There were matches for the page, so initialize `matchIdx`.\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n      this._updateMatch(/* found = */ true);\n      return true;\n    }\n    // No matches, so attempt to search the next page.\n    this._advanceOffsetPage(previous);\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n      if (this._pagesToSearch < 0) {\n        // No point in wrapping again, there were no matches.\n        this._updateMatch(/* found = */ false);\n        // While matches were not found, searching for a page\n        // with matches should nevertheless halt.\n        return true;\n      }\n    }\n    // Matches were not found (and searching is not done).\n    return false;\n  }\n\n  _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error(\"There can only be one pending page.\");\n    }\n\n    let matches = null;\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n      if (!matches) {\n        // The matches don't exist yet for processing by `_matchesReady`,\n        // so set a resume point for when they do exist.\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      // Update the currently selected page to wipe out any selected matches.\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n    if (this._selected.pageIdx !== -1) {\n      // Ensure that the match will be scrolled into view.\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n    // Since searching is asynchronous, ensure that the removal of highlighted\n    // matches (from the UI) is async too such that the 'updatetextlayermatches'\n    // events will always be dispatched in the expected order.\n    this._firstPageCapability.promise.then(() => {\n      // Only update the UI if the document is open, and is the current one.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      // Ensure that a pending, not yet started, search operation is aborted.\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      // Abort any long running searches, to avoid a match being scrolled into\n      // view *after* the findbar has been closed. In this case `this._offset`\n      // will most likely differ from `this._selected`, hence we also ensure\n      // that any new search operation will always start with a clean slate.\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n      // Avoid the UI being in a pending state when the findbar is re-opened.\n      this._updateUIState(FindState.FOUND);\n\n      this._highlightMatches = false;\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n    });\n  }\n\n  _requestMatchesCount() {\n    const { pageIdx, matchIdx } = this._selected;\n    let current = 0,\n      total = this._matchesCountTotal;\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += this._pageMatches[i]?.length || 0;\n      }\n      current += matchIdx + 1;\n    }\n    // When searching starts, this method may be called before the `pageMatches`\n    // have been counted (in `_calculateMatch`). Ensure that the UI won't show\n    // temporarily broken state when the active find result doesn't make sense.\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n    return { current, total };\n  }\n\n  _updateUIResultsCount() {\n    this._eventBus.dispatch(\"updatefindmatchescount\", {\n      source: this,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n\n  _updateUIState(state, previous) {\n    this._eventBus.dispatch(\"updatefindcontrolstate\", {\n      source: this,\n      state,\n      previous,\n      matchesCount: this._requestMatchesCount(),\n      rawQuery: this._state?.query ?? null,\n    });\n  }\n}\n\nexport { FindState, PDFFindController }\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\n// modified by ngx-extended-pdf-viewer\nexport function deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n// modified by ngx-extended-pdf-viewer\n// module.exports = deburr;\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7,\n};\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return (\n    (charCode >= /* a = */ 0x61 && charCode <= /* z = */ 0x7a) ||\n    (charCode >= /* A = */ 0x41 && charCode <= /* Z = */ 0x5a)\n  );\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= /* 0 = */ 0x30 && charCode <= /* 9 = */ 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return (\n    charCode === /* SPACE = */ 0x20 ||\n    charCode === /* TAB = */ 0x09 ||\n    charCode === /* CR = */ 0x0d ||\n    charCode === /* LF = */ 0x0a\n  );\n}\n\nfunction isHan(charCode) {\n  return (\n    (charCode >= 0x3400 && charCode <= 0x9fff) ||\n    (charCode >= 0xf900 && charCode <= 0xfaff)\n  );\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\n\n/**\n * This function is based on the word-break detection implemented in:\n * https://hg.mozilla.org/mozilla-central/file/tip/intl/lwbrk/WordBreaker.cpp\n */\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (\n        isAsciiAlpha(charCode) ||\n        isAsciiDigit(charCode) ||\n        charCode === /* UNDERSCORE = */ 0x5f\n      ) {\n        return CharacterType.ALPHA_LETTER;\n      }\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === /* NBSP = */ 0xa0) {\n      return CharacterType.SPACE;\n    }\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n  return CharacterType.ALPHA_LETTER;\n}\n\nexport { CharacterType, getCharacterType };\n","// npm module fast-levenshtein 2.0.6, converted to ES2015\n\nlet levenshtein_collator;\n\ntry {\n  levenshtein_collator = Intl.Collator(\"und\", { sensitivity: \"base\" });\n} catch (missingBrowserSupport) {\n  try {\n    levenshtein_collator = Intl.Collator(\"generic\", { sensitivity: \"base\" });\n  } catch (noBrowserSupport) {\n    // run the algorithm without the help of the collation tables\n    levenshtein_collator = undefined;\n  }\n}\n\n// arrays to re-use\nconst levenshtein_prevRow = [];\nconst levenshtein_str2Char = [];\n\nexport class Levenshtein {\n  /**\n   * Calculate levenshtein distance of the two strings.\n   *\n   * @param str1 String the first string.\n   * @param str2 String the second string.\n   * @param [options] Additional options.\n   * @param [options.useCollator] Use `Intl.Collator` for locale-sensitive\n   * string comparison.\n   * @return Integer the levenshtein distance (0 and above).\n   */\n  static distance(str1, str2, options) {\n    const useCollator = options && levenshtein_collator && options.useCollator;\n\n    const str1Len = str1.length;\n    const str2Len = str2.length;\n\n    // base cases\n    if (str1Len === 0) {\n      return str2Len;\n    }\n    if (str2Len === 0) {\n      return str1Len;\n    }\n\n    // two rows\n    let curCol, nextCol, i, j, tmp;\n\n    // initialise previous row\n    for (i = 0; i < str2Len; ++i) {\n      levenshtein_prevRow[i] = i;\n      levenshtein_str2Char[i] = str2.charCodeAt(i);\n    }\n    levenshtein_prevRow[str2Len] = str2Len;\n\n    let strCmp;\n    if (useCollator) {\n      // calculate current row distance from previous row using collator\n      for (i = 0; i < str1Len; ++i) {\n        nextCol = i + 1;\n\n        for (j = 0; j < str2Len; ++j) {\n          curCol = nextCol;\n\n          // substution\n          strCmp =\n            levenshtein_collator.compare(\n              str1.charAt(i),\n              String.fromCharCode(levenshtein_str2Char[j])\n            ) === 0;\n\n          nextCol = levenshtein_prevRow[j] + (strCmp ? 0 : 1);\n\n          // insertion\n          tmp = curCol + 1;\n          if (nextCol > tmp) {\n            nextCol = tmp;\n          }\n          // deletion\n          tmp = levenshtein_prevRow[j + 1] + 1;\n          if (nextCol > tmp) {\n            nextCol = tmp;\n          }\n\n          // copy current col value into previous (in preparation for next iteration)\n          levenshtein_prevRow[j] = curCol;\n        }\n\n        // copy last col value into previous (in preparation for next iteration)\n        levenshtein_prevRow[j] = nextCol;\n      }\n    } else {\n      // calculate current row distance from previous row without collator\n      for (i = 0; i < str1Len; ++i) {\n        nextCol = i + 1;\n\n        for (j = 0; j < str2Len; ++j) {\n          curCol = nextCol;\n\n          // substution\n          strCmp = str1.charCodeAt(i) === levenshtein_str2Char[j];\n\n          nextCol = levenshtein_prevRow[j] + (strCmp ? 0 : 1);\n\n          // insertion\n          tmp = curCol + 1;\n          if (nextCol > tmp) {\n            nextCol = tmp;\n          }\n          // deletion\n          tmp = levenshtein_prevRow[j + 1] + 1;\n          if (nextCol > tmp) {\n            nextCol = tmp;\n          }\n\n          // copy current col value into previous (in preparation for next iteration)\n          levenshtein_prevRow[j] = curCol;\n        }\n\n        // copy last col value into previous (in preparation for next iteration)\n        levenshtein_prevRow[j] = nextCol;\n      }\n    }\n    return nextCol;\n  }\n}\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  isValidRotation,\n  parseQueryString,\n  PresentationModeState,\n  waitOnEventOrTimeout,\n} from \"./ui_utils.js\";\n\n// Heuristic value used when force-resetting `this._blockHashChange`.\nconst HASH_CHANGE_TIMEOUT = 1000; // milliseconds\n// Heuristic value used when adding the current position to the browser history.\nconst POSITION_UPDATED_THRESHOLD = 50;\n// Heuristic value used when adding a temporary position to the browser history.\nconst UPDATE_VIEWAREA_TIMEOUT = 1000; // milliseconds\n\n/**\n * @typedef {Object} PDFHistoryOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * @typedef {Object} InitializeParameters\n * @property {string} fingerprint - The PDF document's unique fingerprint.\n * @property {boolean} [resetHistory] - Reset the browsing history.\n * @property {boolean} [updateUrl] - Attempt to update the document URL, with\n *   the current hash, when pushing/replacing browser history entries.\n */\n\n/**\n * @typedef {Object} PushParameters\n * @property {string} [namedDest] - The named destination. If absent, a\n *   stringified version of `explicitDest` is used.\n * @property {Array} explicitDest - The explicit destination array.\n * @property {number} pageNumber - The page to which the destination points.\n */\n\nfunction getCurrentHash() {\n  return document.location.hash;\n}\n\nclass PDFHistory {\n  /**\n   * @param {PDFHistoryOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n\n    this._initialized = false;\n    this._fingerprint = \"\";\n    this.reset();\n\n    this._boundEvents = null;\n    this._isViewerInPresentationMode = false;\n    // Ensure that we don't miss either a 'presentationmodechanged' or a\n    // 'pagesinit' event, by registering the listeners immediately.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      this._isViewerInPresentationMode =\n        evt.state !== PresentationModeState.NORMAL;\n    });\n    this.eventBus._on(\"pagesinit\", () => {\n      this._isPagesLoaded = false;\n\n      this.eventBus._on(\n        \"pagesloaded\",\n        evt => {\n          this._isPagesLoaded = !!evt.pagesCount;\n        },\n        { once: true }\n      );\n    });\n  }\n\n  /**\n   * Initialize the history for the PDF document, using either the current\n   * browser history entry or the document hash, whichever is present.\n   * @param {InitializeParameters} params\n   */\n  initialize({ fingerprint, resetHistory = false, updateUrl = false }) {\n    if (!fingerprint || typeof fingerprint !== \"string\") {\n      console.error(\n        'PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.'\n      );\n      return;\n    }\n    // Ensure that any old state is always reset upon initialization.\n    if (this._initialized) {\n      this.reset();\n    }\n    const reInitialized =\n      this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n\n    this._initialized = true;\n    this._bindEvents();\n    const state = window.history.state;\n\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n\n    if (!this._isValidState(state, /* checkReload = */ true) || resetHistory) {\n      const { hash, page, rotation } = this._parseCurrentHash(\n        /* checkNameddest = */ true\n      );\n\n      if (!hash || reInitialized || resetHistory) {\n        // Ensure that the browser history is reset on PDF document load.\n        this._pushOrReplaceState(null, /* forceReplace = */ true);\n        return;\n      }\n      // Ensure that the browser history is initialized correctly when\n      // the document hash is present on PDF document load.\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n\n    // The browser history contains a valid entry, ensure that the history is\n    // initialized correctly on PDF document load.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n\n      // If the history is updated, e.g. through the user changing the hash,\n      // before the initial destination has become visible, then we do *not*\n      // want to potentially add `this._position` to the browser history.\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n\n  /**\n   * Reset the current `PDFHistory` instance, and consequently prevent any\n   * further updates and/or navigation of the browser history.\n   */\n  reset() {\n    if (this._initialized) {\n      this._pageHide(); // Simulate a 'pagehide' event when resetting.\n\n      this._initialized = false;\n      this._unbindEvents();\n    }\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n\n  /**\n   * Push an internal destination to the browser history.\n   * @param {PushParameters}\n   */\n  push({ namedDest = null, explicitDest, pageNumber }) {\n    if (!this._initialized) {\n      return;\n    }\n    if (namedDest && typeof namedDest !== \"string\") {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${namedDest}\" is not a valid namedDest parameter.`\n      );\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${explicitDest}\" is not a valid explicitDest parameter.`\n      );\n      return;\n    } else if (!this._isValidPage(pageNumber)) {\n      // Allow an unset `pageNumber` if and only if the history is still empty;\n      // please refer to the `this._destination.page = null;` comment above.\n      if (pageNumber !== null || this._destination) {\n        console.error(\n          \"PDFHistory.push: \" +\n            `\"${pageNumber}\" is not a valid pageNumber parameter.`\n        );\n        return;\n      }\n    }\n\n    const hash = namedDest || JSON.stringify(explicitDest);\n    if (!hash) {\n      // The hash *should* never be undefined, but if that were to occur,\n      // avoid any possible issues by not updating the browser history.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination &&\n      (isDestHashesEqual(this._destination.hash, hash) ||\n        isDestArraysEqual(this._destination.dest, explicitDest))\n    ) {\n      // When the new destination is identical to `this._destination`, and\n      // its `page` is undefined, replace the current browser history entry.\n      // NOTE: This can only occur if `this._destination` was set either:\n      //  - through the document hash being specified on load.\n      //  - through the user changing the hash of the document.\n      if (this._destination.page) {\n        return;\n      }\n      forceReplace = true;\n    }\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n\n    this._pushOrReplaceState(\n      {\n        dest: explicitDest,\n        hash,\n        page: pageNumber,\n        rotation: this.linkService.rotation,\n      },\n      forceReplace\n    );\n\n    if (!this._popStateInProgress) {\n      // Prevent the browser history from updating while the new destination is\n      // being scrolled into view, to avoid potentially inconsistent state.\n      this._popStateInProgress = true;\n      // We defer the resetting of `this._popStateInProgress`, to account for\n      // e.g. zooming occurring when the new destination is being navigated to.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  /**\n   * Push a page to the browser history; generally the `push` method should be\n   * used instead.\n   * @param {number} pageNumber\n   */\n  pushPage(pageNumber) {\n    if (!this._initialized) {\n      return;\n    }\n    if (!this._isValidPage(pageNumber)) {\n      console.error(\n        `PDFHistory.pushPage: \"${pageNumber}\" is not a valid page number.`\n      );\n      return;\n    }\n\n    if (this._destination?.page === pageNumber) {\n      // When the new page is identical to the one in `this._destination`, we\n      // don't want to add a potential duplicate entry in the browser history.\n      return;\n    }\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    this._pushOrReplaceState({\n      // Simulate an internal destination, for `this._tryPushCurrentPosition`:\n      dest: null,\n      hash: `page=${pageNumber}`,\n      page: pageNumber,\n      rotation: this.linkService.rotation,\n    });\n\n    if (!this._popStateInProgress) {\n      // Prevent the browser history from updating while the new page is\n      // being scrolled into view, to avoid potentially inconsistent state.\n      this._popStateInProgress = true;\n      // We defer the resetting of `this._popStateInProgress`, to account for\n      // e.g. zooming occurring when the new page is being navigated to.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  /**\n   * Push the current position to the browser history.\n   */\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    this._tryPushCurrentPosition();\n  }\n\n  /**\n   * Go back one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n\n  /**\n   * Go forward one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n\n  /**\n   * @type {boolean} Indicating if the user is currently moving through the\n   *   browser history, useful e.g. for skipping the next 'hashchange' event.\n   */\n  get popStateInProgress() {\n    return (\n      this._initialized &&\n      (this._popStateInProgress || this._blockHashChange > 0)\n    );\n  }\n\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n\n  /**\n   * @private\n   */\n  _pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination,\n    };\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      window.history.state?.chromecomState\n    ) {\n      // history.state.chromecomState is managed by chromecom.js.\n      newState.chromecomState = window.history.state.chromecomState;\n    }\n    this._updateInternalState(destination, newState.uid);\n\n    let newUrl;\n    if (this._updateUrl && destination?.hash) {\n      const baseUrl = document.location.href.split(\"#\")[0];\n      // Prevent errors in Firefox.\n      if (!baseUrl.startsWith(\"file://\")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n    if (shouldReplace) {\n      window.history.replaceState(newState, \"\", newUrl);\n    } else {\n      window.history.pushState(newState, \"\", newUrl);\n    }\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      top === window\n    ) {\n      // eslint-disable-next-line no-undef\n      chrome.runtime.sendMessage(\"showPageAction\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  _tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n    let position = this._position;\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n\n    if (!this._destination) {\n      this._pushOrReplaceState(position);\n      return;\n    }\n    if (this._destination.temporary) {\n      // Always replace a previous *temporary* position.\n      this._pushOrReplaceState(position, /* forceReplace = */ true);\n      return;\n    }\n    if (this._destination.hash === position.hash) {\n      return; // The current document position has not changed.\n    }\n    if (\n      !this._destination.page &&\n      (POSITION_UPDATED_THRESHOLD <= 0 ||\n        this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)\n    ) {\n      // `this._destination` was set through the user changing the hash of\n      // the document. Do not add `this._position` to the browser history,\n      // to avoid \"flooding\" it with lots of (nearly) identical entries,\n      // since we cannot ensure that the document position has changed.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination.page >= position.first &&\n      this._destination.page <= position.page\n    ) {\n      // When the `page` of `this._destination` is still visible, do not\n      // update the browsing history when `this._destination` either:\n      //  - contains an internal destination, since in this case we\n      //    cannot ensure that the document position has actually changed.\n      //  - was set through the user changing the hash of the document.\n      if (this._destination.dest !== undefined || !this._destination.first) {\n        return;\n      }\n      // To avoid \"flooding\" the browser history, replace the current entry.\n      forceReplace = true;\n    }\n    this._pushOrReplaceState(position, forceReplace);\n  }\n\n  /**\n   * @private\n   */\n  _isValidPage(val) {\n    return (\n      Number.isInteger(val) && val > 0 && val <= this.linkService.pagesCount\n    );\n  }\n\n  /**\n   * @private\n   */\n  _isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        // Potentially accept the history entry, even if the fingerprints don't\n        // match, when the viewer was reloaded (see issue 6847).\n        if (\n          typeof state.fingerprint !== \"string\" ||\n          state.fingerprint.length !== this._fingerprint.length\n        ) {\n          return false;\n        }\n        const [perfEntry] = performance.getEntriesByType(\"navigation\");\n        if (perfEntry?.type !== \"reload\") {\n          return false;\n        }\n      } else {\n        // This should only occur in viewers with support for opening more than\n        // one PDF document, e.g. the GENERIC viewer.\n        return false;\n      }\n    }\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n    if (state.destination === null || typeof state.destination !== \"object\") {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      // When updating `this._destination`, make sure that we always wait for\n      // the next 'updateviewarea' event before (potentially) attempting to\n      // push the current position to the browser history.\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    if (removeTemporary && destination?.temporary) {\n      // When the `destination` comes from the browser history,\n      // we no longer treat it as a *temporary* position.\n      delete destination.temporary;\n    }\n    this._destination = destination;\n    this._uid = uid;\n    this._maxUid = Math.max(this._maxUid, uid);\n    // This should always be reset when `this._destination` is updated.\n    this._numPositionUpdates = 0;\n  }\n\n  /**\n   * @private\n   */\n  _parseCurrentHash(checkNameddest = false) {\n    const hash = unescape(getCurrentHash()).substring(1);\n    const params = parseQueryString(hash);\n\n    const nameddest = params.get(\"nameddest\") || \"\";\n    let page = params.get(\"page\") | 0;\n\n    if (!this._isValidPage(page) || (checkNameddest && nameddest.length > 0)) {\n      page = null;\n    }\n    return { hash, page, rotation: this.linkService.rotation };\n  }\n\n  /**\n   * @private\n   */\n  _updateViewarea({ location }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._position = {\n      hash: this._isViewerInPresentationMode\n        ? `page=${location.pageNumber}`\n        : location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation,\n    };\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    if (\n      POSITION_UPDATED_THRESHOLD > 0 &&\n      this._isPagesLoaded &&\n      this._destination &&\n      !this._destination.page\n    ) {\n      // If the current destination was set through the user changing the hash\n      // of the document, we will usually not try to push the current position\n      // to the browser history; see `this._tryPushCurrentPosition()`.\n      //\n      // To prevent `this._tryPushCurrentPosition()` from effectively being\n      // reduced to a no-op in this case, we will assume that the position\n      // *did* in fact change if the 'updateviewarea' event was dispatched\n      // more than `POSITION_UPDATED_THRESHOLD` times.\n      this._numPositionUpdates++;\n    }\n\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      // When closing the browser, a 'pagehide' event will be dispatched which\n      // *should* allow us to push the current position to the browser history.\n      // In practice, it seems that the event is arriving too late in order for\n      // the session history to be successfully updated.\n      // (For additional details, please refer to the discussion in\n      //  https://bugzilla.mozilla.org/show_bug.cgi?id=1153393.)\n      //\n      // To workaround this we attempt to *temporarily* add the current position\n      // to the browser history only when the viewer is *idle*,\n      // i.e. when scrolling and/or zooming does not occur.\n      //\n      // PLEASE NOTE: It's absolutely imperative that the browser history is\n      // *not* updated too often, since that would render the viewer more or\n      // less unusable. Hence the use of a timeout to delay the update until\n      // the viewer has been idle for `UPDATE_VIEWAREA_TIMEOUT` milliseconds.\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this._tryPushCurrentPosition(/* temporary = */ true);\n        }\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _popState({ state }) {\n    const newHash = getCurrentHash(),\n      hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" &&\n        PDFJSDev.test(\"CHROME\") &&\n        state?.chromecomState &&\n        !this._isValidState(state)) ||\n      !state\n    ) {\n      // This case corresponds to the user changing the hash of the document.\n      this._uid++;\n\n      const { hash, page, rotation } = this._parseCurrentHash();\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n    if (!this._isValidState(state)) {\n      // This should only occur in viewers with support for opening more than\n      // one PDF document, e.g. the GENERIC viewer.\n      return;\n    }\n\n    // Prevent the browser history from updating until the new destination,\n    // as stored in the browser history, has been scrolled into view.\n    this._popStateInProgress = true;\n\n    if (hashChanged) {\n      // When the hash changed, implying that the 'popstate' event will be\n      // followed by a 'hashchange' event, then we do *not* want to update the\n      // browser history when handling the 'hashchange' event (in web/app.js)\n      // since that would *overwrite* the new destination navigated to below.\n      //\n      // To avoid accidentally disabling all future user-initiated hash changes,\n      // if there's e.g. another 'hashchange' listener that stops the event\n      // propagation, we make sure to always force-reset `this._blockHashChange`\n      // after `HASH_CHANGE_TIMEOUT` milliseconds have passed.\n      this._blockHashChange++;\n      waitOnEventOrTimeout({\n        target: window,\n        name: \"hashchange\",\n        delay: HASH_CHANGE_TIMEOUT,\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n\n    // Navigate to the new destination.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n\n    if (isValidRotation(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this.linkService.goToDestination(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this.linkService.page = destination.page;\n    }\n\n    // Since `PDFLinkService.goToDestination` is asynchronous, we thus defer the\n    // resetting of `this._popStateInProgress` slightly.\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _pageHide() {\n    // Attempt to push the `this._position` into the browser history when\n    // navigating away from the document. This is *only* done if the history\n    // is empty/temporary, since otherwise an existing browser history entry\n    // will end up being overwritten (given that new entries cannot be pushed\n    // into the browser history when the 'unload' event has already fired).\n    if (!this._destination || this._destination.temporary) {\n      this._tryPushCurrentPosition();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _bindEvents() {\n    if (this._boundEvents) {\n      return; // The event listeners were already added.\n    }\n    this._boundEvents = {\n      updateViewarea: this._updateViewarea.bind(this),\n      popState: this._popState.bind(this),\n      pageHide: this._pageHide.bind(this),\n    };\n\n    this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.addEventListener(\"popstate\", this._boundEvents.popState);\n    window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n  }\n\n  /**\n   * @private\n   */\n  _unbindEvents() {\n    if (!this._boundEvents) {\n      return; // The event listeners were already removed.\n    }\n    this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.removeEventListener(\"popstate\", this._boundEvents.popState);\n    window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n\n    this._boundEvents = null;\n  }\n}\n\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n    return false;\n  }\n  if (destHash === pushHash) {\n    return true;\n  }\n  const nameddest = parseQueryString(destHash).get(\"nameddest\");\n  if (nameddest === pushHash) {\n    return true;\n  }\n  return false;\n}\n\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n    if (first !== null && typeof first === \"object\" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return first === second || (Number.isNaN(first) && Number.isNaN(second));\n  }\n\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { isDestArraysEqual, isDestHashesEqual, PDFHistory };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseTreeViewer } from \"./base_tree_viewer.js\";\n\n/**\n * @typedef {Object} PDFLayerViewerOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IL10n} l10n - Localization service.\n */\n\n/**\n * @typedef {Object} PDFLayerViewerRenderParameters\n * @property {OptionalContentConfig|null} optionalContentConfig - An\n *   {OptionalContentConfig} instance.\n * @property {PDFDocument} pdfDocument - A {PDFDocument} instance.\n */\n\nclass PDFLayerViewer extends BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.l10n = options.l10n;\n\n    this.eventBus._on(\"resetlayers\", this._resetLayers.bind(this));\n    this.eventBus._on(\"togglelayerstree\", this._toggleAllTreeItems.bind(this));\n  }\n\n  reset() {\n    super.reset();\n    this._optionalContentConfig = null;\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(layersCount) {\n    this.eventBus.dispatch(\"layersloaded\", {\n      source: this,\n      layersCount,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, { groupId, input }) {\n    const setVisibility = () => {\n      this._optionalContentConfig.setVisibility(groupId, input.checked);\n\n      this.eventBus.dispatch(\"optionalcontentconfig\", {\n        source: this,\n        promise: Promise.resolve(this._optionalContentConfig),\n      });\n    };\n\n    element.onclick = evt => {\n      if (evt.target === input) {\n        setVisibility();\n        return true;\n      } else if (evt.target !== element) {\n        return true; // The target is the \"label\", which is handled above.\n      }\n      input.checked = !input.checked;\n      setVisibility();\n      return false;\n    };\n  }\n\n  /**\n   * @private\n   */\n  async _setNestedName(element, { name = null }) {\n    if (typeof name === \"string\") {\n      element.textContent = this._normalizeTextContent(name);\n      return;\n    }\n    element.textContent = await this.l10n.get(\"additional_layers\");\n    element.style.fontStyle = \"italic\";\n  }\n\n  /**\n   * @private\n   */\n  _addToggleButton(div, { name = null }) {\n    super._addToggleButton(div, /* hidden = */ name === null);\n  }\n\n  /**\n   * @private\n   */\n  _toggleAllTreeItems() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n    super._toggleAllTreeItems();\n  }\n\n  /**\n   * @param {PDFLayerViewerRenderParameters} params\n   */\n  render({ optionalContentConfig, pdfDocument }) {\n    if (this._optionalContentConfig) {\n      this.reset();\n    }\n    this._optionalContentConfig = optionalContentConfig || null;\n    this._pdfDocument = pdfDocument || null;\n\n    const groups = optionalContentConfig?.getOrder();\n    if (!groups) {\n      this._dispatchEvent(/* layersCount = */ 0);\n      return;\n    }\n\n    const fragment = document.createDocumentFragment(),\n      queue = [{ parent: fragment, groups }];\n    let layersCount = 0,\n      hasAnyNesting = false;\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n      for (const groupId of levelData.groups) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n\n        const element = document.createElement(\"a\");\n        div.appendChild(element);\n\n        if (typeof groupId === \"object\") {\n          hasAnyNesting = true;\n          this._addToggleButton(div, groupId);\n          this._setNestedName(element, groupId);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n\n          queue.push({ parent: itemsDiv, groups: groupId.order });\n        } else {\n          const group = optionalContentConfig.getGroup(groupId);\n\n          const input = document.createElement(\"input\");\n          this._bindLink(element, { groupId, input });\n          input.type = \"checkbox\";\n          input.id = groupId;\n          input.checked = group.visible;\n\n          const label = document.createElement(\"label\");\n          label.setAttribute(\"for\", groupId);\n          label.textContent = this._normalizeTextContent(group.name);\n\n          element.appendChild(input);\n          element.appendChild(label);\n\n          layersCount++;\n        }\n\n        levelData.parent.appendChild(div);\n      }\n    }\n\n    this._finishRendering(fragment, layersCount, hasAnyNesting);\n  }\n\n  /**\n   * @private\n   */\n  async _resetLayers() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n    // Fetch the default optional content configuration...\n    const optionalContentConfig =\n      await this._pdfDocument.getOptionalContentConfig();\n\n    this.eventBus.dispatch(\"optionalcontentconfig\", {\n      source: this,\n      promise: Promise.resolve(optionalContentConfig),\n    });\n\n    // ... and reset the sidebarView to the default state.\n    this.render({\n      optionalContentConfig,\n      pdfDocument: this._pdfDocument,\n    });\n  }\n}\n\nexport { PDFLayerViewer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { parseQueryString } from \"./ui_utils.js\";\n\n/**\n * @typedef {Object} PDFLinkServiceOptions\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [externalLinkTarget] - Specifies the `target` attribute\n *   for external links. Must use one of the values from {LinkTarget}.\n *   Defaults to using no target.\n * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\n *   external links. Defaults to stripping the referrer.\n * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\n *   thus preserving the current zoom level in the viewer, when navigating\n *   to internal destinations. The default value is `false`.\n */\n\n/**\n * Performs navigation functions inside PDF, such as opening specified page,\n * or destination.\n * @implements {IPDFLinkService}\n */\nclass PDFLinkService {\n  /**\n   * @param {PDFLinkServiceOptions} options\n   */\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    ignoreDestinationZoom = false,\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n\n    this._pagesRefCache = null;\n  }\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  /**\n   * @private\n   */\n  _goToDestinationHelper(rawDest, namedDest = null, explicitDest) {\n    // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n    const destRef = explicitDest[0];\n    let pageNumber;\n\n    if (typeof destRef === \"object\" && destRef !== null) {\n      pageNumber = this._cachedPageNumber(destRef);\n\n      if (pageNumber === null) {\n        // Fetch the page reference if it's not yet available. This could\n        // only occur during loading, before all pages have been resolved.\n        this.pdfDocument\n          .getPageIndex(destRef)\n          .then(pageIndex => {\n            this.cachePageRef(pageIndex + 1, destRef);\n            this._goToDestinationHelper(rawDest, namedDest, explicitDest);\n          })\n          .catch(() => {\n            console.error(\n              `PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` +\n                `a valid page reference, for dest=\"${rawDest}\".`\n            );\n          });\n        return;\n      }\n    } else if (Number.isInteger(destRef)) {\n      pageNumber = destRef + 1;\n    } else {\n      console.error(\n        `PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` +\n          `a valid destination reference, for dest=\"${rawDest}\".`\n      );\n      return;\n    }\n    if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n      console.error(\n        `PDFLinkService._goToDestinationHelper: \"${pageNumber}\" is not ` +\n          `a valid page number, for dest=\"${rawDest}\".`\n      );\n      return;\n    }\n\n    if (this.pdfHistory) {\n      // Update the browser history before scrolling the new destination into\n      // view, to be able to accurately capture the current document position.\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n    }\n\n    this.pdfViewer.scrollPageIntoView({\n      pageNumber,\n      destArray: explicitDest,\n      ignoreDestinationZoom: this._ignoreDestinationZoom,\n    });\n  }\n\n  /**\n   * This method will, when available, also update the browser history.\n   *\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  async goToDestination(dest) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let namedDest, explicitDest;\n    if (typeof dest === \"string\") {\n      namedDest = dest;\n      explicitDest = await this.pdfDocument.getDestination(dest);\n    } else {\n      namedDest = null;\n      explicitDest = await dest;\n    }\n    if (!Array.isArray(explicitDest)) {\n      console.error(\n        `PDFLinkService.goToDestination: \"${explicitDest}\" is not ` +\n          `a valid destination array, for dest=\"${dest}\".`\n      );\n      return;\n    }\n    this._goToDestinationHelper(dest, namedDest, explicitDest);\n  }\n\n  /**\n   * This method will, when available, also update the browser history.\n   *\n   * @param {number|string} val - The page number, or page label.\n   */\n  goToPage(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageNumber =\n      (typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val)) ||\n      val | 0;\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.pagesCount\n      )\n    ) {\n      console.error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);\n      return;\n    }\n\n    if (this.pdfHistory) {\n      // Update the browser history before scrolling the new page into view,\n      // to be able to accurately capture the current document position.\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.pushPage(pageNumber);\n    }\n\n    this.pdfViewer.scrollPageIntoView({ pageNumber });\n  }\n\n  /**\n   * @param {string|Array} dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    if (typeof dest === \"string\") {\n      if (dest.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(dest));\n      }\n    } else if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n      if (str.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(str));\n      }\n    }\n    return this.getAnchorUrl(\"\");\n  }\n\n  /**\n   * Prefix the full url on anchor links to make sure that links are resolved\n   * relative to the current URL instead of the one defined in <base href>.\n   * @param {string} anchor - The anchor hash, including the #.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || \"\") + anchor;\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let pageNumber, dest;\n    if (hash.includes(\"=\")) {\n      const params = parseQueryString(hash);\n      if (params.has(\"search\")) {\n        this.eventBus.dispatch(\"findfromurlhash\", {\n          source: this,\n          query: params.get(\"search\").replace(/\"/g, \"\"),\n          phraseSearch: params.get(\"phrase\") === \"true\",\n        });\n      }\n      // borrowing syntax from \"Parameters for Opening PDF Files\"\n      if (params.has(\"page\")) {\n        pageNumber = params.get(\"page\") | 0 || 1;\n      }\n      if (params.has(\"zoom\")) {\n        // Build the destination array.\n        const zoomArgs = params.get(\"zoom\").split(\",\"); // scale,left,top\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes(\"Fit\")) {\n          // If the zoomArg is a number, it has to get divided by 100. If it's\n          // a string, it should stay as it is.\n          dest = [\n            null,\n            { name: \"XYZ\" },\n            zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n            zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n          ];\n        } else {\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n            dest = [null, { name: zoomArg }];\n          } else if (\n            zoomArg === \"FitH\" ||\n            zoomArg === \"FitBH\" ||\n            zoomArg === \"FitV\" ||\n            zoomArg === \"FitBV\"\n          ) {\n            dest = [\n              null,\n              { name: zoomArg },\n              zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            ];\n          } else if (zoomArg === \"FitR\") {\n            if (zoomArgs.length !== 5) {\n              console.error(\n                'PDFLinkService.setHash: Not enough parameters for \"FitR\".'\n              );\n            } else {\n              dest = [\n                null,\n                { name: zoomArg },\n                zoomArgs[1] | 0,\n                zoomArgs[2] | 0,\n                zoomArgs[3] | 0,\n                zoomArgs[4] | 0,\n              ];\n            }\n          } else {\n            console.error(\n              `PDFLinkService.setHash: \"${zoomArg}\" is not ` +\n                \"a valid zoom value.\"\n            );\n          }\n        }\n      }\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true,\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber; // simple page\n      }\n      if (params.has(\"pagemode\")) {\n        this.eventBus.dispatch(\"pagemode\", {\n          source: this,\n          mode: params.get(\"pagemode\"),\n        });\n      }\n      // Ensure that this parameter is *always* handled last, in order to\n      // guarantee that it won't be overridden (e.g. by the \"page\" parameter).\n      if (params.has(\"nameddest\")) {\n        this.goToDestination(params.get(\"nameddest\"));\n      }\n    } else {\n      // Named (or explicit) destination.\n      dest = unescape(hash);\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          // Avoid incorrectly rejecting a valid named destination, such as\n          // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n        this.goToDestination(dest);\n        return;\n      }\n      console.error(\n        `PDFLinkService.setHash: \"${unescape(hash)}\" is not ` +\n          \"a valid destination.\"\n      );\n    }\n  }\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {\n    // See PDF reference, table 8.45 - Named action\n    switch (action) {\n      case \"GoBack\":\n        this.pdfHistory?.back();\n        break;\n\n      case \"GoForward\":\n        this.pdfHistory?.forward();\n        break;\n\n      case \"NextPage\":\n        this.pdfViewer.nextPage();\n        break;\n\n      case \"PrevPage\":\n        this.pdfViewer.previousPage();\n        break;\n\n      case \"LastPage\":\n        this.page = this.pagesCount;\n        break;\n\n      case \"FirstPage\":\n        this.page = 1;\n        break;\n\n      default:\n        break; // No action according to spec\n    }\n\n    this.eventBus.dispatch(\"namedaction\", {\n      source: this,\n      action,\n    });\n  }\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  /**\n   * @private\n   */\n  _cachedPageNumber(pageRef) {\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return this._pagesRefCache?.[refStr] || null;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageCached(pageNumber) {\n    return this.pdfViewer.isPageCached(pageNumber);\n  }\n}\n\nfunction isValidExplicitDestination(dest) {\n  if (!Array.isArray(dest)) {\n    return false;\n  }\n  const destLength = dest.length;\n  if (destLength < 2) {\n    return false;\n  }\n  const page = dest[0];\n  if (\n    !(\n      typeof page === \"object\" &&\n      Number.isInteger(page.num) &&\n      Number.isInteger(page.gen)\n    ) &&\n    !(Number.isInteger(page) && page >= 0)\n  ) {\n    return false;\n  }\n  const zoom = dest[1];\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n    return false;\n  }\n  let allowNull = true;\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (destLength !== 5) {\n        return false;\n      }\n      break;\n    case \"Fit\":\n    case \"FitB\":\n      return destLength === 2;\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (destLength !== 3) {\n        return false;\n      }\n      break;\n    case \"FitR\":\n      if (destLength !== 6) {\n        return false;\n      }\n      allowNull = false;\n      break;\n    default:\n      return false;\n  }\n  for (let i = 2; i < destLength; i++) {\n    const param = dest[i];\n    if (!(typeof param === \"number\" || (allowNull && param === null))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @implements {IPDFLinkService}\n */\nclass SimpleLinkService {\n  constructor() {\n    this.externalLinkTarget = null;\n    this.externalLinkRel = null;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = false;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {}\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {}\n\n  /**\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  async goToDestination(dest) {}\n\n  /**\n   * @param {number|string} val - The page number, or page label.\n   */\n  goToPage(val) {}\n\n  /**\n   * @param dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    return \"#\";\n  }\n\n  /**\n   * @param hash - The PDF parameters/hash.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(hash) {\n    return \"#\";\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {}\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {}\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {}\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return true;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageCached(pageNumber) {\n    return true;\n  }\n}\n\nexport { PDFLinkService, SimpleLinkService };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  createPromiseCapability,\n  LinkTarget,\n} from \"pdfjs-lib\";\nimport { BaseTreeViewer } from \"./base_tree_viewer.js\";\nimport { SidebarView } from \"./ui_utils.js\";\n\n/**\n * @typedef {Object} PDFOutlineViewerOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * @typedef {Object} PDFOutlineViewerRenderParameters\n * @property {Array|null} outline - An array of outline objects.\n * @property {PDFDocument} pdfDocument - A {PDFDocument} instance.\n */\n\nclass PDFOutlineViewer extends BaseTreeViewer {\n  /**\n   * @param {PDFOutlineViewerOptions} options\n   */\n  constructor(options) {\n    super(options);\n    this.linkService = options.linkService;\n\n    this.eventBus._on(\"toggleoutlinetree\", this._toggleAllTreeItems.bind(this));\n    this.eventBus._on(\n      \"currentoutlineitem\",\n      this._currentOutlineItem.bind(this)\n    );\n\n    this.eventBus._on(\"pagechanging\", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n    this.eventBus._on(\"pagesloaded\", evt => {\n      this._isPagesLoaded = !!evt.pagesCount;\n\n      // If the capability is still pending, see the `_dispatchEvent`-method,\n      // we know that the `currentOutlineItem`-button can be enabled here.\n      if (\n        this._currentOutlineItemCapability &&\n        !this._currentOutlineItemCapability.settled\n      ) {\n        this._currentOutlineItemCapability.resolve(\n          /* enabled = */ this._isPagesLoaded\n        );\n      }\n    });\n    this.eventBus._on(\"sidebarviewchanged\", evt => {\n      this._sidebarView = evt.view;\n    });\n  }\n\n  reset() {\n    super.reset();\n    this._outline = null;\n\n    this._pageNumberToDestHashCapability = null;\n    this._currentPageNumber = 1;\n    this._isPagesLoaded = false;\n\n    if (\n      this._currentOutlineItemCapability &&\n      !this._currentOutlineItemCapability.settled\n    ) {\n      this._currentOutlineItemCapability.resolve(/* enabled = */ false);\n    }\n    this._currentOutlineItemCapability = null;\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(outlineCount) {\n    this._currentOutlineItemCapability = createPromiseCapability();\n    if (\n      outlineCount === 0 ||\n      this._pdfDocument?.loadingParams.disableAutoFetch\n    ) {\n      this._currentOutlineItemCapability.resolve(/* enabled = */ false);\n    } else if (this._isPagesLoaded) {\n      this._currentOutlineItemCapability.resolve(/* enabled = */ true);\n    }\n\n    this.eventBus.dispatch(\"outlineloaded\", {\n      source: this,\n      outlineCount,\n      currentOutlineItemPromise: this._currentOutlineItemCapability.promise,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, { url, newWindow, dest }) {\n    const { linkService } = this;\n\n    if (url) {\n      addLinkAttributes(element, {\n        url,\n        target: newWindow ? LinkTarget.BLANK : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n      return;\n    }\n\n    element.href = linkService.getDestinationHash(dest);\n    element.onclick = evt => {\n      this._updateCurrentTreeItem(evt.target.parentNode);\n\n      if (dest) {\n        linkService.goToDestination(dest);\n      }\n      return false;\n    };\n  }\n\n  /**\n   * @private\n   */\n  _setStyles(element, { bold, italic }) {\n    if (bold) {\n      element.style.fontWeight = \"bold\";\n    }\n    if (italic) {\n      element.style.fontStyle = \"italic\";\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addToggleButton(div, { count, items }) {\n    let hidden = false;\n    if (count < 0) {\n      let totalCount = items.length;\n      if (totalCount > 0) {\n        const queue = [...items];\n        while (queue.length > 0) {\n          const { count: nestedCount, items: nestedItems } = queue.shift();\n          if (nestedCount > 0 && nestedItems.length > 0) {\n            totalCount += nestedItems.length;\n            queue.push(...nestedItems);\n          }\n        }\n      }\n      if (Math.abs(count) === totalCount) {\n        hidden = true;\n      }\n    }\n    super._addToggleButton(div, hidden);\n  }\n\n  /**\n   * @private\n   */\n  _toggleAllTreeItems() {\n    if (!this._outline) {\n      return;\n    }\n    super._toggleAllTreeItems();\n  }\n\n  /**\n   * @param {PDFOutlineViewerRenderParameters} params\n   */\n  render({ outline, pdfDocument }) {\n    if (this._outline) {\n      this.reset();\n    }\n    this._outline = outline || null;\n    this._pdfDocument = pdfDocument || null;\n\n    if (!outline) {\n      this._dispatchEvent(/* outlineCount = */ 0);\n      return;\n    }\n\n    const fragment = document.createDocumentFragment();\n    const queue = [{ parent: fragment, items: outline }];\n    let outlineCount = 0,\n      hasAnyNesting = false;\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n      for (const item of levelData.items) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n\n        const element = document.createElement(\"a\");\n        this._bindLink(element, item);\n        this._setStyles(element, item);\n        element.textContent = this._normalizeTextContent(item.title);\n\n        div.appendChild(element);\n\n        if (item.items.length > 0) {\n          hasAnyNesting = true;\n          this._addToggleButton(div, item);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n\n          queue.push({ parent: itemsDiv, items: item.items });\n        }\n\n        levelData.parent.appendChild(div);\n        outlineCount++;\n      }\n    }\n\n    this._finishRendering(fragment, outlineCount, hasAnyNesting);\n  }\n\n  /**\n   * Find/highlight the current outline item, corresponding to the active page.\n   * @private\n   */\n  async _currentOutlineItem() {\n    if (!this._isPagesLoaded) {\n      throw new Error(\"_currentOutlineItem: All pages have not been loaded.\");\n    }\n    if (!this._outline || !this._pdfDocument) {\n      return;\n    }\n\n    const pageNumberToDestHash = await this._getPageNumberToDestHash(\n      this._pdfDocument\n    );\n    if (!pageNumberToDestHash) {\n      return;\n    }\n    this._updateCurrentTreeItem(/* treeItem = */ null);\n\n    if (this._sidebarView !== SidebarView.OUTLINE) {\n      return; // The outline view is no longer visible, hence do nothing.\n    }\n    // When there is no destination on the current page, always check the\n    // previous ones in (reverse) order.\n    for (let i = this._currentPageNumber; i > 0; i--) {\n      const destHash = pageNumberToDestHash.get(i);\n      if (!destHash) {\n        continue;\n      }\n      const linkElement = this.container.querySelector(`a[href=\"${destHash}\"]`);\n      if (!linkElement) {\n        continue;\n      }\n      this._scrollToCurrentTreeItem(linkElement.parentNode);\n      break;\n    }\n  }\n\n  /**\n   * To (significantly) simplify the overall implementation, we will only\n   * consider *one* destination per page when finding/highlighting the current\n   * outline item (similar to e.g. Adobe Reader); more specifically, we choose\n   * the *first* outline item at the *lowest* level of the outline tree.\n   * @private\n   */\n  async _getPageNumberToDestHash(pdfDocument) {\n    if (this._pageNumberToDestHashCapability) {\n      return this._pageNumberToDestHashCapability.promise;\n    }\n    this._pageNumberToDestHashCapability = createPromiseCapability();\n\n    const pageNumberToDestHash = new Map(),\n      pageNumberNesting = new Map();\n    const queue = [{ nesting: 0, items: this._outline }];\n    while (queue.length > 0) {\n      const levelData = queue.shift(),\n        currentNesting = levelData.nesting;\n      for (const { dest, items } of levelData.items) {\n        let explicitDest, pageNumber;\n        if (typeof dest === \"string\") {\n          explicitDest = await pdfDocument.getDestination(dest);\n\n          if (pdfDocument !== this._pdfDocument) {\n            return null; // The document was closed while the data resolved.\n          }\n        } else {\n          explicitDest = dest;\n        }\n        if (Array.isArray(explicitDest)) {\n          const [destRef] = explicitDest;\n\n          if (typeof destRef === \"object\" && destRef !== null) {\n            pageNumber = this.linkService._cachedPageNumber(destRef);\n\n            if (!pageNumber) {\n              try {\n                pageNumber = (await pdfDocument.getPageIndex(destRef)) + 1;\n\n                if (pdfDocument !== this._pdfDocument) {\n                  return null; // The document was closed while the data resolved.\n                }\n                this.linkService.cachePageRef(pageNumber, destRef);\n              } catch (ex) {\n                // Invalid page reference, ignore it and continue parsing.\n              }\n            }\n          } else if (Number.isInteger(destRef)) {\n            pageNumber = destRef + 1;\n          }\n\n          if (\n            Number.isInteger(pageNumber) &&\n            (!pageNumberToDestHash.has(pageNumber) ||\n              currentNesting > pageNumberNesting.get(pageNumber))\n          ) {\n            const destHash = this.linkService.getDestinationHash(dest);\n            pageNumberToDestHash.set(pageNumber, destHash);\n            pageNumberNesting.set(pageNumber, currentNesting);\n          }\n        }\n\n        if (items.length > 0) {\n          queue.push({ nesting: currentNesting + 1, items });\n        }\n      }\n    }\n\n    this._pageNumberToDestHashCapability.resolve(\n      pageNumberToDestHash.size > 0 ? pageNumberToDestHash : null\n    );\n    return this._pageNumberToDestHashCapability.promise;\n  }\n}\n\nexport { PDFOutlineViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { normalizeWheelEventDelta, PresentationModeState } from \"./ui_utils.js\";\n\nconst DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS = 1500; // in ms\nconst DELAY_BEFORE_HIDING_CONTROLS = 3000; // in ms\nconst ACTIVE_SELECTOR = \"pdfPresentationMode\";\nconst CONTROLS_SELECTOR = \"pdfPresentationModeControls\";\nconst MOUSE_SCROLL_COOLDOWN_TIME = 50; // in ms\nconst PAGE_SWITCH_THRESHOLD = 0.1;\n\n// Number of CSS pixels for a movement to count as a swipe.\nconst SWIPE_MIN_DISTANCE_THRESHOLD = 50;\n\n// Swipe angle deviation from the x or y axis before it is not\n// considered a swipe in that direction any more.\nconst SWIPE_ANGLE_THRESHOLD = Math.PI / 6;\n\n/**\n * @typedef {Object} PDFPresentationModeOptions\n * @property {HTMLDivElement} container - The container for the viewer element.\n * @property {PDFViewer} pdfViewer - The document viewer.\n * @property {EventBus} eventBus - The application event bus.\n */\n\nclass PDFPresentationMode {\n  /**\n   * @param {PDFPresentationModeOptions} options\n   */\n  constructor({ container, pdfViewer, eventBus }) {\n    this.container = container;\n    this.pdfViewer = pdfViewer;\n    this.eventBus = eventBus;\n\n    this.active = false;\n    this.args = null;\n    this.contextMenuOpen = false;\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n    this.touchSwipeState = null;\n  }\n\n  /**\n   * Request the browser to enter fullscreen mode.\n   * @returns {boolean} Indicating if the request was successful.\n   */\n  request() {\n    if (this.switchInProgress || this.active || !this.pdfViewer.pagesCount) {\n      return false;\n    }\n    this._addFullscreenChangeListeners();\n    this._setSwitchInProgress();\n    this._notifyStateChange();\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      if (this.container.requestFullscreen) {\n        this.container.requestFullscreen();\n      } else {\n        return false;\n      }\n    } else {\n      if (this.container.requestFullscreen) {\n        this.container.requestFullscreen();\n      } else if (this.container.mozRequestFullScreen) {\n        this.container.mozRequestFullScreen();\n      } else if (this.container.webkitRequestFullscreen) {\n        // #426 modified by ngx-extended-pdf-viewer\n        document.body.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n        this._prepareFullscreenMode();\n        // #426 end of modification\n      } else {\n        return false;\n      }\n\n    }\n\n    this.args = {\n      page: this.pdfViewer.currentPageNumber,\n      previousScale: this.pdfViewer.currentScaleValue,\n    };\n\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _mouseWheel(evt) {\n    if (!this.active) {\n      return;\n    }\n\n    evt.preventDefault();\n\n    const delta = normalizeWheelEventDelta(evt);\n    const currentTime = Date.now();\n    const storedTime = this.mouseScrollTimeStamp;\n\n    // If we've already switched page, avoid accidentally switching again.\n    if (\n      currentTime > storedTime &&\n      currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME\n    ) {\n      return;\n    }\n    // If the scroll direction changed, reset the accumulated scroll delta.\n    if (\n      (this.mouseScrollDelta > 0 && delta < 0) ||\n      (this.mouseScrollDelta < 0 && delta > 0)\n    ) {\n      this._resetMouseScrollState();\n    }\n    this.mouseScrollDelta += delta;\n\n    if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) {\n      const totalDelta = this.mouseScrollDelta;\n      this._resetMouseScrollState();\n      const success =\n        totalDelta > 0\n          ? this.pdfViewer.previousPage()\n          : this.pdfViewer.nextPage();\n      if (success) {\n        this.mouseScrollTimeStamp = currentTime;\n      }\n    }\n  }\n\n  get isFullscreen() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return !!document.fullscreenElement;\n    }\n    return !!(\n      document.fullscreenElement ||\n      document.mozFullScreen ||\n      document.webkitIsFullScreen\n    );\n  }\n\n  /**\n   * @private\n   */\n  _notifyStateChange() {\n    let state = PresentationModeState.NORMAL;\n    if (this.switchInProgress) {\n      state = PresentationModeState.CHANGING;\n    } else if (this.active) {\n      state = PresentationModeState.FULLSCREEN;\n    }\n    this.eventBus.dispatch(\"presentationmodechanged\", {\n      source: this,\n      state,\n    });\n  }\n\n  /**\n   * Used to initialize a timeout when requesting Presentation Mode,\n   * i.e. when the browser is requested to enter fullscreen mode.\n   * This timeout is used to prevent the current page from being scrolled\n   * partially, or completely, out of view when entering Presentation Mode.\n   * NOTE: This issue seems limited to certain zoom levels (e.g. page-width).\n   *\n   * @private\n   */\n  _setSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n    }\n    this.switchInProgress = setTimeout(() => {\n      this._removeFullscreenChangeListeners();\n      delete this.switchInProgress;\n      this._notifyStateChange();\n    }, DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS);\n  }\n\n  /**\n   * @private\n   */\n  _resetSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n      delete this.switchInProgress;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _enter() {\n    this.active = true;\n    this._resetSwitchInProgress();\n    this._notifyStateChange();\n    this.container.classList.add(ACTIVE_SELECTOR);\n\n    // Ensure that the correct page is scrolled into view when entering\n    // Presentation Mode, by waiting until fullscreen mode in enabled.\n    setTimeout(() => {\n      this.pdfViewer.currentPageNumber = this.args.page;\n      this.pdfViewer.currentScaleValue = \"page-fit\";\n    }, 0);\n\n    this._addWindowListeners();\n    this._showControls();\n    this.contextMenuOpen = false;\n\n    // Text selection is disabled in Presentation Mode, thus it's not possible\n    // for the user to deselect text that is selected (e.g. with \"Select all\")\n    // when entering Presentation Mode, hence we remove any active selection.\n    window.getSelection().removeAllRanges();\n  }\n\n  /**\n   * @private\n   */\n  _exit() {\n    this._tidyUpFullscreenMode();\n    const page = this.pdfViewer.currentPageNumber;\n    this.container.classList.remove(ACTIVE_SELECTOR);\n\n    // Ensure that the correct page is scrolled into view when exiting\n    // Presentation Mode, by waiting until fullscreen mode is disabled.\n    setTimeout(() => {\n      this.active = false;\n      this._removeFullscreenChangeListeners();\n      this._notifyStateChange();\n\n      this.pdfViewer.currentScaleValue = this.args.previousScale;\n      this.pdfViewer.currentPageNumber = page;\n      this.args = null;\n    }, 0);\n\n    this._removeWindowListeners();\n    this._hideControls();\n    this._resetMouseScrollState();\n    this.contextMenuOpen = false;\n  }\n\n  // #426 modified by ngx-extended-pdf-viewer\n  _prepareFullscreenMode() {\n    const domElement = document.getElementsByClassName(\"zoom\")[0].parentElement;\n    const parent = domElement.parentElement;\n    this.ngxContainer = parent;\n    for (let i = 0; i < parent.childElementCount; i++) {\n      if (parent.children.item(i) === domElement) {\n        this.ngxContainerIndex = i;\n      }\n    }\n    parent.removeChild(domElement);\n    document.body.append(domElement);\n    const siblings = document.body.children;\n    for (let i = 0; i < siblings.length; i++) {\n      const s = siblings.item(i);\n      if (s !== domElement && s instanceof HTMLElement) {\n        s.classList.add(\"hidden-by-fullscreen\");\n      }\n    }\n    document.getElementById(\"sidebarContainer\").classList.add(\"hidden-by-fullscreen\");\n    document.getElementsByClassName(\"toolbar\")[0].classList.add(\"hidden-by-fullscreen\");\n  }\n\n  _tidyUpFullscreenMode() {\n    if (this.ngxContainer) {\n      const domElement = document.getElementsByClassName(\"zoom\")[0].parentElement;\n      document.body.removeChild(domElement);\n      if (this.ngxContainerIndex >= this.ngxContainer.childElementCount) {\n        this.ngxContainer.append(domElement);\n      } else {\n        this.ngxContainer.insertBefore(domElement, this.ngxContainer.children.item(this.ngxContainerIndex));\n      }\n      this.ngxContainer = undefined;\n      const siblings = document.body.children;\n      for (let i = 0; i < siblings.length; i++) {\n        const s = siblings.item(i);\n        if (s !== domElement && s instanceof HTMLElement) {\n          if (s.classList.contains(\"hidden-by-fullscreen\")) {\n            s.classList.remove(\"hidden-by-fullscreen\");\n          }\n        }\n      }\n\n      document.getElementById(\"sidebarContainer\").classList.remove(\"hidden-by-fullscreen\");\n      document.getElementsByClassName(\"toolbar\")[0].classList.remove(\"hidden-by-fullscreen\");\n    }\n  }\n\n  // #426 end of modification\n\n  /**\n   * @private\n   */\n  _mouseDown(evt) {\n    if (this.contextMenuOpen) {\n      this.contextMenuOpen = false;\n      evt.preventDefault();\n      return;\n    }\n    if (evt.button === 0) {\n      // Enable clicking of links in presentation mode. Note: only links\n      // pointing to destinations in the current PDF document work.\n      const isInternalLink =\n        evt.target.href && evt.target.classList.contains(\"internalLink\");\n      if (!isInternalLink) {\n        // Unless an internal link was clicked, advance one page.\n        evt.preventDefault();\n\n        if (evt.shiftKey) {\n          this.pdfViewer.previousPage();\n        } else {\n          this.pdfViewer.nextPage();\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _contextMenu() {\n    this.contextMenuOpen = true;\n  }\n\n  /**\n   * @private\n   */\n  _showControls() {\n    if (this.controlsTimeout) {\n      clearTimeout(this.controlsTimeout);\n    } else {\n      this.container.classList.add(CONTROLS_SELECTOR);\n    }\n    this.controlsTimeout = setTimeout(() => {\n      this.container.classList.remove(CONTROLS_SELECTOR);\n      delete this.controlsTimeout;\n    }, DELAY_BEFORE_HIDING_CONTROLS);\n  }\n\n  /**\n   * @private\n   */\n  _hideControls() {\n    if (!this.controlsTimeout) {\n      return;\n    }\n    clearTimeout(this.controlsTimeout);\n    this.container.classList.remove(CONTROLS_SELECTOR);\n    delete this.controlsTimeout;\n  }\n\n  /**\n   * Resets the properties used for tracking mouse scrolling events.\n   *\n   * @private\n   */\n  _resetMouseScrollState() {\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n  }\n\n  /**\n   * @private\n   */\n  _touchSwipe(evt) {\n    if (!this.active) {\n      return;\n    }\n    if (evt.touches.length > 1) {\n      // Multiple touch points detected; cancel the swipe.\n      this.touchSwipeState = null;\n      return;\n    }\n\n    switch (evt.type) {\n      case \"touchstart\":\n        this.touchSwipeState = {\n          startX: evt.touches[0].pageX,\n          startY: evt.touches[0].pageY,\n          endX: evt.touches[0].pageX,\n          endY: evt.touches[0].pageY,\n        };\n        break;\n      case \"touchmove\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n        this.touchSwipeState.endX = evt.touches[0].pageX;\n        this.touchSwipeState.endY = evt.touches[0].pageY;\n        // Avoid the swipe from triggering browser gestures (Chrome in\n        // particular has some sort of swipe gesture in fullscreen mode).\n        evt.preventDefault();\n        break;\n      case \"touchend\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n        let delta = 0;\n        const dx = this.touchSwipeState.endX - this.touchSwipeState.startX;\n        const dy = this.touchSwipeState.endY - this.touchSwipeState.startY;\n        const absAngle = Math.abs(Math.atan2(dy, dx));\n        if (\n          Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n          (absAngle <= SWIPE_ANGLE_THRESHOLD ||\n            absAngle >= Math.PI - SWIPE_ANGLE_THRESHOLD)\n        ) {\n          // Horizontal swipe.\n          delta = dx;\n        } else if (\n          Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n          Math.abs(absAngle - Math.PI / 2) <= SWIPE_ANGLE_THRESHOLD\n        ) {\n          // Vertical swipe.\n          delta = dy;\n        }\n        if (delta > 0) {\n          this.pdfViewer.previousPage();\n        } else if (delta < 0) {\n          this.pdfViewer.nextPage();\n        }\n        break;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addWindowListeners() {\n    this.showControlsBind = this._showControls.bind(this);\n    this.mouseDownBind = this._mouseDown.bind(this);\n    this.mouseWheelBind = this._mouseWheel.bind(this);\n    this.resetMouseScrollStateBind = this._resetMouseScrollState.bind(this);\n    this.contextMenuBind = this._contextMenu.bind(this);\n    this.touchSwipeBind = this._touchSwipe.bind(this);\n\n    window.addEventListener(\"mousemove\", this.showControlsBind);\n    window.addEventListener(\"mousedown\", this.mouseDownBind);\n    window.addEventListener(\"wheel\", this.mouseWheelBind, { passive: false });\n    window.addEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.addEventListener(\"contextmenu\", this.contextMenuBind);\n    window.addEventListener(\"touchstart\", this.touchSwipeBind);\n    window.addEventListener(\"touchmove\", this.touchSwipeBind);\n    window.addEventListener(\"touchend\", this.touchSwipeBind);\n  }\n\n  /**\n   * @private\n   */\n  _removeWindowListeners() {\n    window.removeEventListener(\"mousemove\", this.showControlsBind);\n    window.removeEventListener(\"mousedown\", this.mouseDownBind);\n    window.removeEventListener(\"wheel\", this.mouseWheelBind, {\n      passive: false,\n    });\n    window.removeEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.removeEventListener(\"contextmenu\", this.contextMenuBind);\n    window.removeEventListener(\"touchstart\", this.touchSwipeBind);\n    window.removeEventListener(\"touchmove\", this.touchSwipeBind);\n    window.removeEventListener(\"touchend\", this.touchSwipeBind);\n\n    delete this.showControlsBind;\n    delete this.mouseDownBind;\n    delete this.mouseWheelBind;\n    delete this.resetMouseScrollStateBind;\n    delete this.contextMenuBind;\n    delete this.touchSwipeBind;\n  }\n\n  /**\n   * @private\n   */\n  _fullscreenChange() {\n    if (this.isFullscreen) {\n      this._enter();\n    } else {\n      this._exit();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addFullscreenChangeListeners() {\n    this.fullscreenChangeBind = this._fullscreenChange.bind(this);\n\n    window.addEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      window.addEventListener(\"mozfullscreenchange\", this.fullscreenChangeBind);\n      window.addEventListener(\n        \"webkitfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _removeFullscreenChangeListeners() {\n    window.removeEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      window.removeEventListener(\n        \"mozfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n      window.removeEventListener(\n        \"webkitfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n    }\n\n    delete this.fullscreenChangeBind;\n  }\n}\n\nexport { PDFPresentationMode };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability, shadow } from \"pdfjs-lib\";\nimport { apiPageLayoutToSpreadMode } from \"./ui_utils.js\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\n\n/**\n * @typedef {Object} PDFScriptingManagerOptions\n * @property {EventBus} eventBus - The application event bus.\n * @property {string} sandboxBundleSrc - The path and filename of the scripting\n *   bundle.\n * @property {Object} [scriptingFactory] - The factory that is used when\n *   initializing scripting; must contain a `createScripting` method.\n *   PLEASE NOTE: Primarily intended for the default viewer use-case.\n * @property {function} [docPropertiesLookup] - The function that is used to\n *   lookup the necessary document properties.\n */\n\nclass PDFScriptingManager {\n  /**\n   * @param {PDFScriptingManagerOptions} options\n   */\n  constructor({\n    eventBus,\n    sandboxBundleSrc = null,\n    scriptingFactory = null,\n    docPropertiesLookup = null,\n  }) {\n    this._pdfDocument = null;\n    this._pdfViewer = null;\n    this._closeCapability = null;\n    this._destroyCapability = null;\n\n    this._scripting = null;\n    this._mouseState = Object.create(null);\n    this._ready = false;\n\n    this._eventBus = eventBus;\n    this._sandboxBundleSrc = sandboxBundleSrc;\n    this._scriptingFactory = scriptingFactory;\n    this._docPropertiesLookup = docPropertiesLookup;\n\n    // The default viewer already handles adding/removing of DOM events,\n    // hence limit this to only the viewer components.\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"COMPONENTS\") &&\n      !this._scriptingFactory\n    ) {\n      window.addEventListener(\"updatefromsandbox\", event => {\n        this._eventBus.dispatch(\"updatefromsandbox\", {\n          source: window,\n          detail: event.detail,\n        });\n      });\n    }\n  }\n\n  setViewer(pdfViewer) {\n    this._pdfViewer = pdfViewer;\n  }\n\n  async setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      await this._destroyScripting();\n    }\n    this._pdfDocument = pdfDocument;\n\n    if (!pdfDocument) {\n      return;\n    }\n    const [objects, calculationOrder, docActions] = await Promise.all([\n      pdfDocument.getFieldObjects(),\n      pdfDocument.getCalculationOrderIds(),\n      pdfDocument.getJSActions(),\n    ]);\n\n    if (!objects && !docActions) {\n      // No FieldObjects or JavaScript actions were found in the document.\n      await this._destroyScripting();\n      return;\n    }\n    if (pdfDocument !== this._pdfDocument) {\n      return; // The document was closed while the data resolved.\n    }\n    try {\n      this._scripting = this._createScripting();\n    } catch (error) {\n      console.error(`PDFScriptingManager.setDocument: \"${error?.message}\".`);\n\n      await this._destroyScripting();\n      return;\n    }\n\n    this._internalEvents.set(\"updatefromsandbox\", event => {\n      if (event?.source !== window) {\n        return;\n      }\n      this._updateFromSandbox(event.detail);\n    });\n    this._internalEvents.set(\"dispatcheventinsandbox\", event => {\n      this._scripting?.dispatchEventInSandbox(event.detail);\n    });\n\n    this._internalEvents.set(\"pagechanging\", ({ pageNumber, previous }) => {\n      if (pageNumber === previous) {\n        return; // The current page didn't change.\n      }\n      this._dispatchPageClose(previous);\n      this._dispatchPageOpen(pageNumber);\n    });\n    this._internalEvents.set(\"pagerendered\", ({ pageNumber }) => {\n      if (!this._pageOpenPending.has(pageNumber)) {\n        return; // No pending \"PageOpen\" event for the newly rendered page.\n      }\n      if (pageNumber !== this._pdfViewer.currentPageNumber) {\n        return; // The newly rendered page is no longer the current one.\n      }\n      this._dispatchPageOpen(pageNumber);\n    });\n    this._internalEvents.set(\"pagesdestroy\", async event => {\n      await this._dispatchPageClose(this._pdfViewer.currentPageNumber);\n\n      await this._scripting?.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"WillClose\",\n      });\n\n      this._closeCapability?.resolve();\n    });\n\n    this._domEvents.set(\"mousedown\", event => {\n      this._mouseState.isDown = true;\n    });\n    this._domEvents.set(\"mouseup\", event => {\n      this._mouseState.isDown = false;\n    });\n\n    for (const [name, listener] of this._internalEvents) {\n      this._eventBus._on(name, listener);\n    }\n    for (const [name, listener] of this._domEvents) {\n      window.addEventListener(name, listener);\n    }\n\n    try {\n      const docProperties = await this._getDocProperties();\n      if (pdfDocument !== this._pdfDocument) {\n        return; // The document was closed while the properties resolved.\n      }\n\n      await this._scripting.createSandbox({\n        objects,\n        calculationOrder,\n        appInfo: {\n          platform: navigator.platform,\n          language: navigator.language,\n        },\n        docInfo: {\n          ...docProperties,\n          actions: docActions,\n        },\n      });\n\n      this._eventBus.dispatch(\"sandboxcreated\", { source: this });\n    } catch (error) {\n      console.error(`PDFScriptingManager.setDocument: \"${error?.message}\".`);\n\n      await this._destroyScripting();\n      return;\n    }\n\n    await this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"Open\",\n    });\n    await this._dispatchPageOpen(\n      this._pdfViewer.currentPageNumber,\n      /* initialize = */ true\n    );\n\n    // Defer this slightly, to ensure that scripting is *fully* initialized.\n    Promise.resolve().then(() => {\n      if (pdfDocument === this._pdfDocument) {\n        this._ready = true;\n      }\n    });\n  }\n\n  async dispatchWillSave(detail) {\n    return this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"WillSave\",\n    });\n  }\n\n  async dispatchDidSave(detail) {\n    return this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"DidSave\",\n    });\n  }\n\n  async dispatchWillPrint(detail) {\n    return this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"WillPrint\",\n    });\n  }\n\n  async dispatchDidPrint(detail) {\n    return this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"DidPrint\",\n    });\n  }\n\n  get mouseState() {\n    return this._mouseState;\n  }\n\n  get destroyPromise() {\n    return this._destroyCapability?.promise || null;\n  }\n\n  get ready() {\n    return this._ready;\n  }\n\n  /**\n   * @private\n   */\n  get _internalEvents() {\n    return shadow(this, \"_internalEvents\", new Map());\n  }\n\n  /**\n   * @private\n   */\n  get _domEvents() {\n    return shadow(this, \"_domEvents\", new Map());\n  }\n\n  /**\n   * @private\n   */\n  get _pageOpenPending() {\n    return shadow(this, \"_pageOpenPending\", new Set());\n  }\n\n  /**\n   * @private\n   */\n  get _visitedPages() {\n    return shadow(this, \"_visitedPages\", new Map());\n  }\n\n  /**\n   * @private\n   */\n  async _updateFromSandbox(detail) {\n    // Ignore some events, see below, that don't make sense in PresentationMode.\n    const isInPresentationMode =\n      this._pdfViewer.isInPresentationMode ||\n      this._pdfViewer.isChangingPresentationMode;\n\n    const { id, siblings, command, value } = detail;\n    if (!id) {\n      switch (command) {\n        case \"clear\":\n          console.clear();\n          break;\n        case \"error\":\n          console.error(value);\n          break;\n        case \"layout\":\n          this._pdfViewer.spreadMode = apiPageLayoutToSpreadMode(value);\n          break;\n        case \"page-num\":\n          this._pdfViewer.currentPageNumber = value + 1;\n          break;\n        case \"print\":\n          await this._pdfViewer.pagesPromise;\n          this._eventBus.dispatch(\"print\", { source: this });\n          break;\n        case \"println\":\n          console.log(value);\n          break;\n        case \"zoom\":\n          if (isInPresentationMode) {\n            return;\n          }\n          this._pdfViewer.currentScaleValue = value;\n          break;\n        case \"SaveAs\":\n          this._eventBus.dispatch(\"save\", { source: this });\n          break;\n        case \"FirstPage\":\n          this._pdfViewer.currentPageNumber = 1;\n          break;\n        case \"LastPage\":\n          this._pdfViewer.currentPageNumber = this._pdfViewer.pagesCount;\n          break;\n        case \"NextPage\":\n          this._pdfViewer.nextPage();\n          break;\n        case \"PrevPage\":\n          this._pdfViewer.previousPage();\n          break;\n        case \"ZoomViewIn\":\n          if (isInPresentationMode) {\n            return;\n          }\n          this._eventBus.dispatch(\"zoomin\", { source: this });\n          break;\n        case \"ZoomViewOut\":\n          if (isInPresentationMode) {\n            return;\n          }\n          this._eventBus.dispatch(\"zoomout\", { source: this });\n          break;\n      }\n      return;\n    }\n\n    if (isInPresentationMode) {\n      if (detail.focus) {\n        return;\n      }\n    }\n    delete detail.id;\n    delete detail.siblings;\n\n    const ids = siblings ? [id, ...siblings] : [id];\n    for (const elementId of ids) {\n      const element = document.getElementById(elementId);\n      if (element) {\n        element.dispatchEvent(new CustomEvent(\"updatefromsandbox\", { detail }));\n      } else {\n        // The element hasn't been rendered yet, use the AnnotationStorage.\n        this._pdfDocument?.annotationStorage.setValue(elementId, undefined, detail); // #868 modified by ngx-extended-pdf-viewer\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _dispatchPageOpen(pageNumber, initialize = false) {\n    const pdfDocument = this._pdfDocument,\n      visitedPages = this._visitedPages;\n\n    if (initialize) {\n      this._closeCapability = createPromiseCapability();\n    }\n    if (!this._closeCapability) {\n      return; // Scripting isn't fully initialized yet.\n    }\n    const pageView = this._pdfViewer.getPageView(/* index = */ pageNumber - 1);\n\n    if (pageView?.renderingState !== RenderingStates.FINISHED) {\n      this._pageOpenPending.add(pageNumber);\n      return; // Wait for the page to finish rendering.\n    }\n    this._pageOpenPending.delete(pageNumber);\n\n    const actionsPromise = (async () => {\n      // Avoid sending, and thus serializing, the `actions` data more than once.\n      const actions = await (!visitedPages.has(pageNumber)\n        ? pageView.pdfPage?.getJSActions()\n        : null);\n      if (pdfDocument !== this._pdfDocument) {\n        return; // The document was closed while the actions resolved.\n      }\n\n      await this._scripting?.dispatchEventInSandbox({\n        id: \"page\",\n        name: \"PageOpen\",\n        pageNumber,\n        actions,\n      });\n    })();\n    visitedPages.set(pageNumber, actionsPromise);\n  }\n\n  /**\n   * @private\n   */\n  async _dispatchPageClose(pageNumber) {\n    const pdfDocument = this._pdfDocument,\n      visitedPages = this._visitedPages;\n\n    if (!this._closeCapability) {\n      return; // Scripting isn't fully initialized yet.\n    }\n    if (this._pageOpenPending.has(pageNumber)) {\n      return; // The page is still rendering; no \"PageOpen\" event dispatched.\n    }\n    const actionsPromise = visitedPages.get(pageNumber);\n    if (!actionsPromise) {\n      return; // The \"PageClose\" event must be preceded by a \"PageOpen\" event.\n    }\n    visitedPages.set(pageNumber, null);\n\n    // Ensure that the \"PageOpen\" event is dispatched first.\n    await actionsPromise;\n    if (pdfDocument !== this._pdfDocument) {\n      return; // The document was closed while the actions resolved.\n    }\n\n    await this._scripting?.dispatchEventInSandbox({\n      id: \"page\",\n      name: \"PageClose\",\n      pageNumber,\n    });\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an {Object}\n   *   containing the necessary document properties; please find the expected\n   *   format in `PDFViewerApplication._scriptingDocProperties`.\n   * @private\n   */\n  async _getDocProperties() {\n    if (this._docPropertiesLookup) {\n      return this._docPropertiesLookup(this._pdfDocument);\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"COMPONENTS\")) {\n      const { docPropertiesLookup } = require(\"./generic_scripting.js\");\n\n      return docPropertiesLookup(this._pdfDocument);\n    }\n    throw new Error(\"_getDocProperties: Unable to lookup properties.\");\n  }\n\n  /**\n   * @private\n   */\n  _createScripting() {\n    this._destroyCapability = createPromiseCapability();\n\n    if (this._scripting) {\n      throw new Error(\"_createScripting: Scripting already exists.\");\n    }\n    if (this._scriptingFactory) {\n      return this._scriptingFactory.createScripting({\n        sandboxBundleSrc: this._sandboxBundleSrc,\n      });\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"COMPONENTS\")) {\n      const { GenericScripting } = require(\"./generic_scripting.js\");\n\n      return new GenericScripting(this._sandboxBundleSrc);\n    }\n    throw new Error(\"_createScripting: Cannot create scripting.\");\n  }\n\n  /**\n   * @private\n   */\n  async _destroyScripting() {\n    if (!this._scripting) {\n      this._pdfDocument = null;\n\n      this._destroyCapability?.resolve();\n      return;\n    }\n    if (this._closeCapability) {\n      await Promise.race([\n        this._closeCapability.promise,\n        new Promise(resolve => {\n          // Avoid the scripting/sandbox-destruction hanging indefinitely.\n          setTimeout(resolve, 1000);\n        }),\n      ]).catch(reason => {\n        // Ignore any errors, to ensure that the sandbox is always destroyed.\n      });\n      this._closeCapability = null;\n    }\n    this._pdfDocument = null;\n\n    try {\n      await this._scripting.destroySandbox();\n    } catch (ex) {}\n\n    for (const [name, listener] of this._internalEvents) {\n      this._eventBus._off(name, listener);\n    }\n    this._internalEvents.clear();\n\n    for (const [name, listener] of this._domEvents) {\n      window.removeEventListener(name, listener);\n    }\n    this._domEvents.clear();\n\n    this._pageOpenPending.clear();\n    this._visitedPages.clear();\n\n    this._scripting = null;\n    delete this._mouseState.isDown;\n    this._ready = false;\n\n    this._destroyCapability?.resolve();\n  }\n}\n\nexport { PDFScriptingManager };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PresentationModeState, SidebarView } from \"./ui_utils.js\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\n\nconst UI_NOTIFICATION_CLASS = \"pdfSidebarNotification\";\n\n/**\n * @typedef {Object} PDFSidebarOptions\n * @property {PDFSidebarElements} elements - The DOM elements.\n * @property {PDFViewer} pdfViewer - The document viewer.\n * @property {PDFThumbnailViewer} pdfThumbnailViewer - The thumbnail viewer.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IL10n} l10n - The localization service.\n */\n\n/**\n * @typedef {Object} PDFSidebarElements\n * @property {HTMLDivElement} outerContainer - The outer container\n *   (encasing both the viewer and sidebar elements).\n * @property {HTMLDivElement} viewerContainer - The viewer container\n *   (in which the viewer element is placed).\n * @property {HTMLButtonElement} toggleButton - The button used for\n *   opening/closing the sidebar.\n * @property {HTMLButtonElement} thumbnailButton - The button used to show\n *   the thumbnail view.\n * @property {HTMLButtonElement} outlineButton - The button used to show\n *   the outline view.\n * @property {HTMLButtonElement} attachmentsButton - The button used to show\n *   the attachments view.\n * @property {HTMLButtonElement} layersButton - The button used to show\n *   the layers view.\n * @property {HTMLDivElement} thumbnailView - The container in which\n *   the thumbnails are placed.\n * @property {HTMLDivElement} outlineView - The container in which\n *   the outline is placed.\n * @property {HTMLDivElement} attachmentsView - The container in which\n *   the attachments are placed.\n * @property {HTMLDivElement} layersView - The container in which\n *   the layers are placed.\n * @property {HTMLDivElement} outlineOptionsContainer - The container in which\n *   the outline view-specific option button(s) are placed.\n * @property {HTMLButtonElement} currentOutlineItemButton - The button used to\n *   find the current outline item.\n */\n\nclass PDFSidebar {\n  /**\n   * @param {PDFSidebarOptions} options\n   */\n  constructor({ elements, pdfViewer, pdfThumbnailViewer, eventBus, l10n }) {\n    this.isOpen = false;\n    this.active = SidebarView.THUMBS;\n    this.isInitialViewSet = false;\n\n    /**\n     * Callback used when the sidebar has been opened/closed, to ensure that\n     * the viewers (PDFViewer/PDFThumbnailViewer) are updated correctly.\n     */\n    this.onToggled = null;\n\n    this.pdfViewer = pdfViewer;\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n\n    this.outerContainer = elements.outerContainer;\n    this.viewerContainer = elements.viewerContainer;\n    this.toggleButton = elements.toggleButton;\n\n    this.thumbnailButton = elements.thumbnailButton;\n    this.outlineButton = elements.outlineButton;\n    this.attachmentsButton = elements.attachmentsButton;\n    this.layersButton = elements.layersButton;\n\n    this.thumbnailView = elements.thumbnailView;\n    this.outlineView = elements.outlineView;\n    this.attachmentsView = elements.attachmentsView;\n    this.layersView = elements.layersView;\n\n    this._outlineOptionsContainer = elements.outlineOptionsContainer;\n    this._currentOutlineItemButton = elements.currentOutlineItemButton;\n\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n\n    this._addEventListeners();\n  }\n\n  reset() {\n    this.isInitialViewSet = false;\n\n    this._hideUINotification(/* reset = */ true);\n    this.switchView(SidebarView.THUMBS);\n\n    this.outlineButton.disabled = false;\n    this.attachmentsButton.disabled = false;\n    this.layersButton.disabled = false;\n    // modified by ngx-extended-pdf-viewer\n    this.outlineButton.hidden = false;\n    this.attachmentsButton.hidden = false;\n    this.layersButton.hidden = false;\n    // end of modification\n    this._currentOutlineItemButton.disabled = true;\n  }\n\n  /**\n   * @type {number} One of the values in {SidebarView}.\n   */\n  get visibleView() {\n    return this.isOpen ? this.active : SidebarView.NONE;\n  }\n\n  get isThumbnailViewVisible() {\n    return this.isOpen && this.active === SidebarView.THUMBS;\n  }\n\n  get isOutlineViewVisible() {\n    return this.isOpen && this.active === SidebarView.OUTLINE;\n  }\n\n  get isAttachmentsViewVisible() {\n    return this.isOpen && this.active === SidebarView.ATTACHMENTS;\n  }\n\n  get isLayersViewVisible() {\n    return this.isOpen && this.active === SidebarView.LAYERS;\n  }\n\n  /**\n   * @param {number} view - The sidebar view that should become visible,\n   *                        must be one of the values in {SidebarView}.\n   */\n  setInitialView(view = SidebarView.NONE) {\n    if (this.isInitialViewSet) {\n      return;\n    }\n    this.isInitialViewSet = true;\n\n    // If the user has already manually opened the sidebar, immediately closing\n    // it would be bad UX; also ignore the \"unknown\" sidebar view value.\n    if (view === SidebarView.NONE || view === SidebarView.UNKNOWN) {\n      this._dispatchEvent();\n      return;\n    }\n    // Prevent dispatching two back-to-back `sidebarviewchanged` events,\n    // since `this._switchView` dispatched the event if the view changed.\n    if (!this._switchView(view, /* forceOpen */ true)) {\n      this._dispatchEvent();\n    }\n  }\n\n  /**\n   * @param {number} view - The sidebar view that should be switched to,\n   *                        must be one of the values in {SidebarView}.\n   * @param {boolean} [forceOpen] - Ensure that the sidebar is open.\n   *                                The default value is `false`.\n   */\n  switchView(view, forceOpen = false) {\n    this._switchView(view, forceOpen);\n  }\n\n  /**\n   * @returns {boolean} Indicating if `this._dispatchEvent` was called.\n   * @private\n   */\n  _switchView(view, forceOpen = false) {\n    const isViewChanged = view !== this.active;\n    let shouldForceRendering = false;\n\n    switch (view) {\n      case SidebarView.NONE:\n        if (this.isOpen) {\n          this.close();\n          return true; // Closing will trigger rendering and dispatch the event.\n        }\n        return false;\n      case SidebarView.THUMBS:\n        if (this.isOpen && isViewChanged) {\n          shouldForceRendering = true;\n        }\n        break;\n      case SidebarView.OUTLINE:\n        if (this.outlineButton.disabled) {\n          return false;\n        }\n        break;\n      case SidebarView.ATTACHMENTS:\n        if (this.attachmentsButton.disabled) {\n          return false;\n        }\n        break;\n      case SidebarView.LAYERS:\n        if (this.layersButton.disabled) {\n          return false;\n        }\n        break;\n      default:\n        console.error(`PDFSidebar._switchView: \"${view}\" is not a valid view.`);\n        return false;\n    }\n    // Update the active view *after* it has been validated above,\n    // in order to prevent setting it to an invalid state.\n    this.active = view;\n\n    // Update the CSS classes, for all buttons...\n    this.thumbnailButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.THUMBS\n    );\n    this.outlineButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.OUTLINE\n    );\n    this.attachmentsButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.ATTACHMENTS\n    );\n    this.layersButton.classList.toggle(\"toggled\", view === SidebarView.LAYERS);\n    // ... and for all views.\n    this.thumbnailView.classList.toggle(\"hidden\", view !== SidebarView.THUMBS);\n    this.outlineView.classList.toggle(\"hidden\", view !== SidebarView.OUTLINE);\n    this.attachmentsView.classList.toggle(\n      \"hidden\",\n      view !== SidebarView.ATTACHMENTS\n    );\n    this.layersView.classList.toggle(\"hidden\", view !== SidebarView.LAYERS);\n\n    // Finally, update view-specific CSS classes.\n    this._outlineOptionsContainer.classList.toggle(\n      \"hidden\",\n      view !== SidebarView.OUTLINE\n    );\n\n    if (forceOpen && !this.isOpen) {\n      this.open();\n      return true; // Opening will trigger rendering and dispatch the event.\n    }\n    if (shouldForceRendering) {\n      this._updateThumbnailViewer();\n      this._forceRendering();\n    }\n    if (isViewChanged) {\n      this._dispatchEvent();\n    }\n    return isViewChanged;\n  }\n\n  open() {\n    if (this.isOpen) {\n      return;\n    }\n    this.isOpen = true;\n    this.toggleButton.classList.add(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"true\");\n\n    this.outerContainer.classList.add(\"sidebarMoving\", \"sidebarOpen\");\n\n    if (this.active === SidebarView.THUMBS) {\n      this._updateThumbnailViewer();\n    }\n    this._forceRendering();\n    this._dispatchEvent();\n\n    this._hideUINotification();\n  }\n\n  close() {\n    if (!this.isOpen) {\n      return;\n    }\n    this.isOpen = false;\n    this.toggleButton.classList.remove(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"false\");\n\n    this.outerContainer.classList.add(\"sidebarMoving\");\n    this.outerContainer.classList.remove(\"sidebarOpen\");\n\n    this._forceRendering();\n    this._dispatchEvent();\n  }\n\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"sidebarviewchanged\", {\n      source: this,\n      view: this.visibleView,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _forceRendering() {\n    if (this.onToggled) {\n      this.onToggled();\n    } else {\n      // Fallback\n      this.pdfViewer.forceRendering();\n      this.pdfThumbnailViewer.forceRendering();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateThumbnailViewer() {\n    const { pdfViewer, pdfThumbnailViewer } = this;\n\n    // Use the rendered pages to set the corresponding thumbnail images.\n    const pagesCount = pdfViewer.pagesCount;\n    for (let pageIndex = 0; pageIndex < pagesCount; pageIndex++) {\n      const pageView = pdfViewer.getPageView(pageIndex);\n      if (pageView?.renderingState === RenderingStates.FINISHED) {\n        const thumbnailView = pdfThumbnailViewer.getThumbnail(pageIndex);\n        thumbnailView.setImage(pageView);\n      }\n    }\n    pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber);\n  }\n\n  /**\n   * @private\n   */\n  _showUINotification() {\n    this.l10n.get(\"toggle_sidebar_notification2.title\").then(msg => {\n      this.toggleButton.title = msg;\n    });\n\n    if (!this.isOpen) {\n      // Only show the notification on the `toggleButton` if the sidebar is\n      // currently closed, to avoid unnecessarily bothering the user.\n      this.toggleButton.classList.add(UI_NOTIFICATION_CLASS);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _hideUINotification(reset = false) {\n    if (this.isOpen || reset) {\n      // Only hide the notification on the `toggleButton` if the sidebar is\n      // currently open, or when the current PDF document is being closed.\n      this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS);\n    }\n\n    if (reset) {\n      this.l10n.get(\"toggle_sidebar.title\").then(msg => {\n        this.toggleButton.title = msg;\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    this.viewerContainer.addEventListener(\"transitionend\", evt => {\n      if (evt.target === this.viewerContainer) {\n        this.outerContainer.classList.remove(\"sidebarMoving\");\n      }\n    });\n\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n\n    // Buttons for switching views.\n    this.thumbnailButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.THUMBS);\n    });\n\n    this.outlineButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.OUTLINE);\n    });\n    this.outlineButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"toggleoutlinetree\", { source: this });\n    });\n\n    this.attachmentsButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.ATTACHMENTS);\n    });\n\n    this.layersButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.LAYERS);\n    });\n    this.layersButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"resetlayers\", { source: this });\n    });\n\n    // Buttons for view-specific options.\n    this._currentOutlineItemButton.addEventListener(\"click\", () => {\n      this.eventBus.dispatch(\"currentoutlineitem\", { source: this });\n    });\n\n    // Disable/enable views.\n    const onTreeLoaded = (count, button, view) => {\n      button.disabled = !count;\n      // modified by ngx-extended-pdf-viewer\n      button.hidden = !count;\n      // end of modification\n\n      if (count) {\n        this._showUINotification();\n      } else if (this.active === view) {\n        // If the `view` was opened by the user during document load,\n        // switch away from it if it turns out to be empty.\n        this.switchView(SidebarView.THUMBS);\n      }\n    };\n\n    this.eventBus._on(\"outlineloaded\", evt => {\n      onTreeLoaded(evt.outlineCount, this.outlineButton, SidebarView.OUTLINE);\n\n      if (evt.enableCurrentOutlineItemButton) {\n        // #645 modified by ngx-extended-pdf-viewer\n        if (evt.currentOutlineItemPromise) { // #645 modified by ngx-extended-pdf-viewer\n\t      \tevt.currentOutlineItemPromise.then(enabled => {\n\t        if (!this.isInitialViewSet) {\n\t          return;\n\t        }\n\t        this._currentOutlineItemButton.disabled = !enabled;\n\t      });        } // #645 modified by ngx-extended-pdf-viewer\n      }\n    });\n\n    this.eventBus._on(\"attachmentsloaded\", evt => {\n      onTreeLoaded(\n        evt.attachmentsCount,\n        this.attachmentsButton,\n        SidebarView.ATTACHMENTS\n      );\n    });\n\n    this.eventBus._on(\"layersloaded\", evt => {\n      onTreeLoaded(evt.layersCount, this.layersButton, SidebarView.LAYERS);\n    });\n\n    // Update the thumbnailViewer, if visible, when exiting presentation mode.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      if (\n        evt.state === PresentationModeState.NORMAL &&\n        this.isThumbnailViewVisible\n      ) {\n        this._updateThumbnailViewer();\n      }\n    });\n  }\n}\n\nexport { PDFSidebar };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SIDEBAR_WIDTH_VAR = \"--sidebar-width\";\nconst SIDEBAR_MIN_WIDTH = 200; // pixels\nconst SIDEBAR_RESIZING_CLASS = \"sidebarResizing\";\n\n/**\n * @typedef {Object} PDFSidebarResizerOptions\n * @property {HTMLDivElement} outerContainer - The outer container\n *   (encasing both the viewer and sidebar elements).\n * @property {HTMLDivElement} resizer - The DOM element that can be dragged in\n *   order to adjust the width of the sidebar.\n */\n\nclass PDFSidebarResizer {\n  /**\n   * @param {PDFSidebarResizerOptions} options\n   * @param {EventBus} eventBus - The application event bus.\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(options, eventBus, l10n) {\n    this.isRTL = false;\n    this.sidebarOpen = false;\n    this.doc = document.documentElement;\n    this._width = null;\n    this._outerContainerWidth = null;\n    this._boundEvents = Object.create(null);\n\n    this.outerContainer = options.outerContainer;\n    this.resizer = options.resizer;\n    this.eventBus = eventBus;\n\n    l10n.getDirection().then(dir => {\n      this.isRTL = dir === \"rtl\";\n    });\n    this._addEventListeners();\n  }\n\n  /**\n   * @type {number}\n   */\n  get outerContainerWidth() {\n    return (this._outerContainerWidth ||= this.outerContainer.clientWidth);\n  }\n\n  /**\n   * @private\n   * returns {boolean} Indicating if the sidebar width was updated.\n   */\n  _updateWidth(width = 0) {\n    // Prevent the sidebar from becoming too narrow, or from occupying more\n    // than half of the available viewer width.\n    const maxWidth = Math.floor(this.outerContainerWidth / 2);\n    if (width > maxWidth) {\n      width = maxWidth;\n    }\n    if (width < SIDEBAR_MIN_WIDTH) {\n      width = SIDEBAR_MIN_WIDTH;\n    }\n    // Only update the UI when the sidebar width did in fact change.\n    if (width === this._width) {\n      return false;\n    }\n    this._width = width;\n    this.doc.style.setProperty(SIDEBAR_WIDTH_VAR, `${width}px`);\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _mouseMove(evt) {\n    let width = evt.clientX;\n    // For sidebar resizing to work correctly in RTL mode, invert the width.\n    if (this.isRTL) {\n      width = this.outerContainerWidth - width;\n    }\n    this._updateWidth(width);\n  }\n\n  /**\n   * @private\n   */\n  _mouseUp(evt) {\n    // Re-enable the `transition-duration` rules when sidebar resizing ends...\n    this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n    // ... and ensure that rendering will always be triggered.\n    this.eventBus.dispatch(\"resize\", { source: this });\n\n    const _boundEvents = this._boundEvents;\n    window.removeEventListener(\"mousemove\", _boundEvents.mouseMove);\n    window.removeEventListener(\"mouseup\", _boundEvents.mouseUp);\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    const _boundEvents = this._boundEvents;\n    _boundEvents.mouseMove = this._mouseMove.bind(this);\n    _boundEvents.mouseUp = this._mouseUp.bind(this);\n\n    this.resizer.addEventListener(\"mousedown\", evt => {\n      if (evt.button !== 0) {\n        return;\n      }\n      // Disable the `transition-duration` rules when sidebar resizing begins,\n      // in order to improve responsiveness and to avoid visual glitches.\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n\n      window.addEventListener(\"mousemove\", _boundEvents.mouseMove);\n      window.addEventListener(\"mouseup\", _boundEvents.mouseUp);\n    });\n\n    this.eventBus._on(\"sidebarviewchanged\", evt => {\n      this.sidebarOpen = !!evt?.view;\n    });\n\n    this.eventBus._on(\"resize\", evt => {\n      // When the *entire* viewer is resized, such that it becomes narrower,\n      // ensure that the sidebar doesn't end up being too wide.\n      if (evt?.source !== window) {\n        return;\n      }\n      // Always reset the cached width when the viewer is resized.\n      this._outerContainerWidth = null;\n\n      if (!this._width) {\n        // The sidebar hasn't been resized, hence no need to adjust its width.\n        return;\n      }\n      // NOTE: If the sidebar is closed, we don't need to worry about\n      //       visual glitches nor ensure that rendering is triggered.\n      if (!this.sidebarOpen) {\n        this._updateWidth(this._width);\n        return;\n      }\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n      const updated = this._updateWidth(this._width);\n\n      Promise.resolve().then(() => {\n        this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n        // Trigger rendering if the sidebar width changed, to avoid\n        // depending on the order in which 'resize' events are handled.\n        if (updated) {\n          this.eventBus.dispatch(\"resize\", { source: this });\n        }\n      });\n    });\n  }\n}\n\nexport { PDFSidebarResizer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getVisibleElements,\n  isValidRotation,\n  scrollIntoView,\n  watchScroll,\n} from \"./ui_utils.js\";\nimport { PDFThumbnailView, TempImageFactory } from \"./pdf_thumbnail_view.js\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\n\nconst THUMBNAIL_SCROLL_MARGIN = -19;\nconst THUMBNAIL_SELECTED_CLASS = \"selected\";\n\n/**\n * @typedef {Object} PDFThumbnailViewerOptions\n * @property {HTMLDivElement} container - The container for the thumbnail\n *   elements.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {IL10n} l10n - Localization service.\n */\n\n/**\n * Viewer control to display thumbnails for pages in a PDF document.\n *\n * @implements {IRenderableView}\n */\nclass PDFThumbnailViewer {\n  /**\n   * @param {PDFThumbnailViewerOptions} options\n   */\n  constructor({ container, eventBus, linkService, renderingQueue, l10n }) {\n    this.container = container;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.l10n = l10n;\n\n    this.scroll = watchScroll(this.container, this._scrollUpdated.bind(this));\n    this._resetView();\n\n    eventBus._on(\"optionalcontentconfigchanged\", () => {\n      // Ensure that the thumbnails always render with the *default* optional\n      // content configuration.\n      this._setImageDisabled = true;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _scrollUpdated() {\n    this.renderingQueue.renderHighestPriority();\n  }\n\n  getThumbnail(index) {\n    return this._thumbnails[index];\n  }\n\n  /**\n   * @private\n   */\n  _getVisibleThumbs() {\n    return getVisibleElements({\n      scrollEl: this.container,\n      views: this._thumbnails,\n    });\n  }\n\n  scrollThumbnailIntoView(pageNumber) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const thumbnailView = this._thumbnails[pageNumber - 1];\n\n    if (!thumbnailView) {\n      console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');\n      return;\n    }\n\n    if (pageNumber !== this._currentPageNumber) {\n      const prevThumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      // Remove the highlight from the previous thumbnail...\n      prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS);\n      // ... and add the highlight to the new thumbnail.\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    }\n    const visibleThumbs = this._getVisibleThumbs();\n    const numVisibleThumbs = visibleThumbs.views.length;\n\n    // If the thumbnail isn't currently visible, scroll it into view.\n    if (numVisibleThumbs > 0) {\n      const first = visibleThumbs.first.id;\n      // Account for only one thumbnail being visible.\n      const last = numVisibleThumbs > 1 ? visibleThumbs.last.id : first;\n\n      let shouldScroll = false;\n      if (pageNumber <= first || pageNumber >= last) {\n        shouldScroll = true;\n      } else {\n        visibleThumbs.views.some(function (view) {\n          if (view.id !== pageNumber) {\n            return false;\n          }\n          shouldScroll = view.percent < 100;\n          return true;\n        });\n      }\n      if (shouldScroll) {\n        scrollIntoView(thumbnailView.div, { top: THUMBNAIL_SCROLL_MARGIN });\n      }\n    }\n\n    this._currentPageNumber = pageNumber;\n  }\n\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error(\"Invalid thumbnails rotation angle.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    const updateArgs = { rotation };\n    for (const thumbnail of this._thumbnails) {\n      thumbnail.update(updateArgs);\n    }\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (\n        this._thumbnails[i] &&\n        this._thumbnails[i].renderingState !== RenderingStates.FINISHED\n      ) {\n        this._thumbnails[i].reset();\n      }\n    }\n    TempImageFactory.destroyCanvas();\n  }\n\n  /**\n   * @private\n   */\n  _resetView() {\n    this._thumbnails = [];\n    this._currentPageNumber = 1;\n    this._pageLabels = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._pagesRequests = new WeakMap();\n    this._setImageDisabled = false;\n\n    // Remove the thumbnails from the DOM.\n    this.container.textContent = \"\";\n  }\n\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n      this._resetView();\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const firstPagePromise = pdfDocument.getPage(1);\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n\n    firstPagePromise\n      .then(firstPdfPage => {\n        this._optionalContentConfigPromise = optionalContentConfigPromise;\n\n        const pagesCount = pdfDocument.numPages;\n        const viewport = firstPdfPage.getViewport({ scale: 1 });\n        const checkSetImageDisabled = () => {\n          return this._setImageDisabled;\n        };\n\n        for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          const thumbnail = new PDFThumbnailView({\n            container: this.container,\n            id: pageNum,\n            defaultViewport: viewport.clone(),\n            optionalContentConfigPromise,\n            linkService: this.linkService,\n            renderingQueue: this.renderingQueue,\n            checkSetImageDisabled,\n            l10n: this.l10n,\n          });\n          this._thumbnails.push(thumbnail);\n        }\n        // Set the first `pdfPage` immediately, since it's already loaded,\n        // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n        // the `this._ensurePdfPageLoaded` method before rendering can start.\n        const firstThumbnailView = this._thumbnails[0];\n        if (firstThumbnailView) {\n          firstThumbnailView.setPdfPage(firstPdfPage);\n        }\n\n        // Ensure that the current thumbnail is always highlighted on load.\n        const thumbnailView = this._thumbnails[this._currentPageNumber - 1];\n        thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n      })\n      .catch(reason => {\n        console.error(\"Unable to initialize thumbnail viewer\", reason);\n      });\n  }\n\n  /**\n   * @private\n   */\n  _cancelRendering() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (this._thumbnails[i]) {\n        this._thumbnails[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (\n      !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n    ) {\n      this._pageLabels = null;\n      console.error(\"PDFThumbnailViewer_setPageLabels: Invalid page labels.\");\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFThumbnailView` instances.\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      this._thumbnails[i].setPageLabel(this._pageLabels?.[i] ?? null);\n    }\n  }\n\n  /**\n   * @param {PDFThumbnailView} thumbView\n   * @returns {PDFPage}\n   * @private\n   */\n  _ensurePdfPageLoaded(thumbView) {\n    if (thumbView.pdfPage) {\n      return Promise.resolve(thumbView.pdfPage);\n    }\n    if (this._pagesRequests.has(thumbView)) {\n      return this._pagesRequests.get(thumbView);\n    }\n    const promise = this.pdfDocument\n      .getPage(thumbView.id)\n      .then(pdfPage => {\n        if (!thumbView.pdfPage) {\n          thumbView.setPdfPage(pdfPage);\n        }\n        this._pagesRequests.delete(thumbView);\n        return pdfPage;\n      })\n      .catch(reason => {\n        console.error(\"Unable to get page for thumb view\", reason);\n        // Page error -- there is nothing that can be done.\n        this._pagesRequests.delete(thumbView);\n      });\n    this._pagesRequests.set(thumbView, promise);\n    return promise;\n  }\n\n  forceRendering() {\n    const visibleThumbs = this._getVisibleThumbs();\n    const thumbView = this.renderingQueue.getHighestPriority(\n      visibleThumbs,\n      this._thumbnails,\n      this.scroll.down\n    );\n    if (thumbView) {\n      this._ensurePdfPageLoaded(thumbView).then(() => {\n        this.renderingQueue.renderView(thumbView);\n      });\n      return true;\n    }\n    return false;\n  }\n}\n\nexport { PDFThumbnailViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getOutputScale } from \"./ui_utils.js\";\nimport { RenderingCancelledException } from \"pdfjs-lib\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\n\nconst DRAW_UPSCALE_FACTOR = 2; // See comment in `PDFThumbnailView.draw` below.\nconst MAX_NUM_SCALING_STEPS = 3;\nconst THUMBNAIL_CANVAS_BORDER_WIDTH = 1; // px\nconst THUMBNAIL_WIDTH = 98; // px\n\n/**\n * @typedef {Object} PDFThumbnailViewOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {number} id - The thumbnail's unique ID (normally its number).\n * @property {PageViewport} defaultViewport - The page viewport.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that is resolved with an {@link OptionalContentConfig} instance.\n *   The default value is `null`.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {function} checkSetImageDisabled\n * @property {IL10n} l10n - Localization service.\n */\n\nconst TempImageFactory = (function TempImageFactoryClosure() {\n  let tempCanvasCache = null;\n\n  return {\n    getCanvas(width, height) {\n      let tempCanvas = tempCanvasCache;\n      if (!tempCanvas) {\n        tempCanvas = document.createElement(\"canvas\");\n        tempCanvasCache = tempCanvas;\n      }\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n\n      // Since this is a temporary canvas, we need to fill it with a white\n      // background ourselves. `_getPageDrawContext` uses CSS rules for this.\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        tempCanvas.mozOpaque = true;\n      }\n\n      const ctx = tempCanvas.getContext(\"2d\", { alpha: false });\n      ctx.save();\n      ctx.fillStyle = \"rgb(255, 255, 255)\";\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n      return [tempCanvas, tempCanvas.getContext(\"2d\")];\n    },\n\n    destroyCanvas() {\n      const tempCanvas = tempCanvasCache;\n      if (tempCanvas) {\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        tempCanvas.width = 0;\n        tempCanvas.height = 0;\n      }\n      tempCanvasCache = null;\n    },\n  };\n})();\n\n/**\n * @implements {IRenderableView}\n */\nclass PDFThumbnailView {\n  /**\n   * @param {PDFThumbnailViewOptions} options\n   */\n  constructor({\n    container,\n    id,\n    defaultViewport,\n    optionalContentConfigPromise,\n    linkService,\n    renderingQueue,\n    checkSetImageDisabled,\n    l10n,\n  }) {\n    this.id = id;\n    this.renderingId = \"thumbnail\" + id;\n    this.pageLabel = null;\n\n    this.pdfPage = null;\n    this.rotation = 0;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise = optionalContentConfigPromise || null;\n\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n\n    this.renderTask = null;\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    this._checkSetImageDisabled =\n      checkSetImageDisabled ||\n      function () {\n        return false;\n      };\n\n    const pageWidth = this.viewport.width,\n      pageHeight = this.viewport.height,\n      pageRatio = pageWidth / pageHeight;\n\n    this.canvasWidth = THUMBNAIL_WIDTH;\n    this.canvasHeight = (this.canvasWidth / pageRatio) | 0;\n    this.scale = this.canvasWidth / pageWidth;\n\n    this.l10n = l10n;\n\n    if (window.pdfThumbnailGenerator) {\n      window.pdfThumbnailGenerator(this, linkService, id, container, this._thumbPageTitle);\n    } else {\n      this.createThumbnail(this, linkService, id, container, this._thumbPageTitle);\n    }\n  }\n\n  createThumbnail(pdfThumbnailView, linkService, id, container, thumbPageTitlePromise) {\n    const anchor = document.createElement(\"a\");\n    anchor.href = linkService.getAnchorUrl(\"#page=\" + id);\n    thumbPageTitlePromise.then(msg => {\n      anchor.title = msg;\n    });\n    anchor.onclick = function () {\n      linkService.goToPage(id);\n      return false;\n    };\n    pdfThumbnailView.anchor = anchor;\n\n    const div = document.createElement(\"div\");\n    div.className = \"thumbnail\";\n    div.setAttribute(\"data-page-number\", this.id);\n    pdfThumbnailView.div = div;\n\n    const ring = document.createElement(\"div\");\n    ring.className = \"thumbnailSelectionRing\";\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n    pdfThumbnailView.ring = ring;\n\n    div.appendChild(ring);\n    anchor.appendChild(div);\n    container.appendChild(anchor);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({ scale: 1, rotation: totalRotation });\n    this.reset();\n  }\n\n  reset() {\n    this.cancelRendering();\n    this.renderingState = RenderingStates.INITIAL;\n\n    const pageWidth = this.viewport.width,\n      pageHeight = this.viewport.height,\n      pageRatio = pageWidth / pageHeight;\n\n    this.canvasHeight = (this.canvasWidth / pageRatio) | 0;\n    this.scale = this.canvasWidth / pageWidth;\n\n    this.div.removeAttribute(\"data-loaded\");\n    const ring = this.ring;\n    ring.textContent = \"\"; // Remove the thumbnail from the DOM.\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n\n    if (this.canvas) {\n      // Zeroing the width and height causes Firefox to release graphics\n      // resources immediately, which can greatly reduce memory consumption.\n      this.canvas.width = 0;\n      this.canvas.height = 0;\n      delete this.canvas;\n    }\n    if (this.image) {\n      this.image.removeAttribute(\"src\");\n      delete this.image;\n    }\n  }\n\n  update({ rotation = null }) {\n    if (typeof rotation === \"number\") {\n      this.rotation = rotation; // The rotation may be zero.\n    }\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: 1,\n      rotation: totalRotation,\n    });\n    this.reset();\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering() {\n    if (this.renderTask) {\n      this.renderTask.cancel();\n      this.renderTask = null;\n    }\n    this.resume = null;\n  }\n\n  /**\n   * @private\n   */\n  _getPageDrawContext(upscaleFactor = 1) {\n    // Keep the no-thumbnail outline visible, i.e. `data-loaded === false`,\n    // until rendering/image conversion is complete, to avoid display issues.\n    const canvas = document.createElement(\"canvas\");\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const outputScale = getOutputScale(ctx);\n\n    canvas.width = (upscaleFactor * this.canvasWidth * outputScale.sx) | 0;\n    canvas.height = (upscaleFactor * this.canvasHeight * outputScale.sy) | 0;\n\n    const transform = outputScale.scaled\n      ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0]\n      : null;\n\n    return { ctx, canvas, transform };\n  }\n\n  /**\n   * @private\n   */\n  _convertCanvasToImage(canvas) {\n    if (this.renderingState !== RenderingStates.FINISHED) {\n      throw new Error(\"_convertCanvasToImage: Rendering has not finished.\");\n    }\n    const reducedCanvas = this._reduceImage(canvas);\n\n    const image = document.createElement(\"img\");\n    image.className = \"thumbnailImage\";\n    this._thumbPageCanvas.then(msg => {\n      image.setAttribute(\"aria-label\", msg);\n    });\n    image.style.width = this.canvasWidth + \"px\";\n    image.style.height = this.canvasHeight + \"px\";\n\n    image.src = reducedCanvas.toDataURL();\n    this.image = image;\n\n    this.div.setAttribute(\"data-loaded\", true);\n    this.ring.appendChild(image);\n\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    reducedCanvas.width = 0;\n    reducedCanvas.height = 0;\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      return Promise.resolve(undefined);\n    }\n    const { pdfPage } = this;\n\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = RenderingStates.RUNNING;\n\n    const finishRenderTask = async (error = null) => {\n      // The renderTask may have been replaced by a new one, so only remove\n      // the reference to the renderTask if it matches the one that is\n      // triggering this callback.\n      if (renderTask === this.renderTask) {\n        this.renderTask = null;\n      }\n\n      if (error instanceof RenderingCancelledException) {\n        return;\n      }\n      this.renderingState = RenderingStates.FINISHED;\n      this._convertCanvasToImage(canvas);\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    // Render the thumbnail at a larger size and downsize the canvas (similar\n    // to `setImage`), to improve consistency between thumbnails created by\n    // the `draw` and `setImage` methods (fixes issue 8233).\n    // NOTE: To primarily avoid increasing memory usage too much, but also to\n    //   reduce downsizing overhead, we purposely limit the up-scaling factor.\n    const { ctx, canvas, transform } =\n      this._getPageDrawContext(DRAW_UPSCALE_FACTOR);\n    const drawViewport = this.viewport.clone({\n      scale: DRAW_UPSCALE_FACTOR * this.scale,\n    });\n    const renderContinueCallback = cont => {\n      if (!this.renderingQueue.isHighestPriority(this)) {\n        this.renderingState = RenderingStates.PAUSED;\n        this.resume = () => {\n          this.renderingState = RenderingStates.RUNNING;\n          cont();\n        };\n        return;\n      }\n      cont();\n    };\n\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: drawViewport,\n      optionalContentConfigPromise: this._optionalContentConfigPromise,\n    };\n    const renderTask = (this.renderTask = pdfPage.render(renderContext));\n    renderTask.onContinue = renderContinueCallback;\n\n    const resultPromise = renderTask.promise.then(\n      function () {\n        return finishRenderTask(null);\n      },\n      function (error) {\n        return finishRenderTask(error);\n      }\n    );\n    resultPromise.finally(() => {\n      // Zeroing the width and height causes Firefox to release graphics\n      // resources immediately, which can greatly reduce memory consumption.\n      canvas.width = 0;\n      canvas.height = 0;\n\n      // Only trigger cleanup, once rendering has finished, when the current\n      // pageView is *not* cached on the `BaseViewer`-instance.\n      const pageCached = this.linkService.isPageCached(this.id);\n      if (!pageCached) {\n        this.pdfPage?.cleanup();\n      }\n    });\n\n    return resultPromise;\n  }\n\n  setImage(pageView) {\n    if (this._checkSetImageDisabled()) {\n      return;\n    }\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      return;\n    }\n    const { canvas, pdfPage } = pageView;\n    if (!canvas) {\n      return;\n    }\n    if (!this.pdfPage) {\n      this.setPdfPage(pdfPage);\n    }\n    this.renderingState = RenderingStates.FINISHED;\n    this._convertCanvasToImage(canvas);\n  }\n\n  /**\n   * @private\n   */\n  _reduceImage(img) {\n    const { ctx, canvas } = this._getPageDrawContext();\n\n    if (img.width <= 2 * canvas.width) {\n      ctx.drawImage(\n        img,\n        0,\n        0,\n        img.width,\n        img.height,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n      return canvas;\n    }\n    // drawImage does an awful job of rescaling the image, doing it gradually.\n    let reducedWidth = canvas.width << MAX_NUM_SCALING_STEPS;\n    let reducedHeight = canvas.height << MAX_NUM_SCALING_STEPS;\n    const [reducedImage, reducedImageCtx] = TempImageFactory.getCanvas(\n      reducedWidth,\n      reducedHeight\n    );\n\n    while (reducedWidth > img.width || reducedHeight > img.height) {\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n    reducedImageCtx.drawImage(\n      img,\n      0,\n      0,\n      img.width,\n      img.height,\n      0,\n      0,\n      reducedWidth,\n      reducedHeight\n    );\n    while (reducedWidth > 2 * canvas.width) {\n      reducedImageCtx.drawImage(\n        reducedImage,\n        0,\n        0,\n        reducedWidth,\n        reducedHeight,\n        0,\n        0,\n        reducedWidth >> 1,\n        reducedHeight >> 1\n      );\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n    ctx.drawImage(\n      reducedImage,\n      0,\n      0,\n      reducedWidth,\n      reducedHeight,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n    return canvas;\n  }\n\n  get _thumbPageTitle() {\n    return this.l10n.get(\"thumb_page_title\", {\n      page: this.pageLabel ?? this.id,\n    });\n  }\n\n  get _thumbPageCanvas() {\n    return this.l10n.get(\"thumb_page_canvas\", {\n      page: this.pageLabel ?? this.id,\n    });\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    this._thumbPageTitle.then(msg => {\n      this.anchor.title = msg;\n    });\n\n    if (this.renderingState !== RenderingStates.FINISHED) {\n      return;\n    }\n\n    this._thumbPageCanvas.then(msg => {\n      this.image?.setAttribute(\"aria-label\", msg);\n    });\n  }\n}\n\nexport { PDFThumbnailView, TempImageFactory };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScrollMode, SpreadMode } from \"./ui_utils.js\";\nimport { BaseViewer } from \"./base_viewer.js\";\nimport { shadow } from \"pdfjs-lib\";\n\nclass PDFViewer extends BaseViewer {\n  get _viewerElement() {\n    return shadow(this, \"_viewerElement\", this.viewer);\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n      const right = left + pageDiv.clientWidth;\n      const { scrollLeft, clientWidth } = this.container;\n      if (\n        this._isScrollModeHorizontal ||\n        left < scrollLeft ||\n        right > scrollLeft + clientWidth\n      ) {\n        pageSpot = { left: 0, top: 0 };\n      }\n    }\n    super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n  }\n\n  _getVisiblePages() {\n    if (this.isInPresentationMode) {\n      // The algorithm in `getVisibleElements` doesn't work in all browsers and\n      // configurations (e.g. Chrome) when Presentation Mode is active.\n      return this._getCurrentVisiblePage();\n    }\n    return super._getVisiblePages();\n  }\n\n  _updateHelper(visiblePages) {\n    if (this.isInPresentationMode) {\n      return;\n    }\n    let currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n      if (\n        page.id === currentId &&\n        this._scrollMode === ScrollMode.VERTICAL &&\n        this._spreadMode === SpreadMode.NONE\n      ) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n    if (!stillFullyVisible) {\n      // #859 modified by ngx-extended-pdf-viewer\n      const currentPageIsVisible = visiblePages.some(p => currentId === p.id);\n      if (!currentPageIsVisible) {\n        currentId = visiblePages[0].id;\n      }\n      // #859 end of modification by ngx-extended-pdf-viewer\n    }\n    this._setCurrentPageNumber(currentId);\n  }\n}\n\nexport { PDFViewer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationMode, createPromiseCapability, version } from \"pdfjs-lib\";\nimport {\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_VALUE,\n  getVisibleElements,\n  isPortraitOrientation,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_AUTO_SCALE,\n  moveToEndOfArray,\n  PresentationModeState,\n  RendererType,\n  SCROLLBAR_PADDING,\n  scrollIntoView,\n  ScrollMode,\n  SpreadMode,\n  TextLayerMode,\n  UNKNOWN_SCALE,\n  VERTICAL_PADDING,\n  watchScroll,\n} from \"./ui_utils.js\";\nimport { PDFRenderingQueue, RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { AnnotationLayerBuilder } from \"./annotation_layer_builder.js\";\nimport { NullL10n } from \"./l10n_utils.js\";\nimport { PageFlip } from \"./page-flip.module.js\"; // #716 modified by ngx-extended-pdf-viewer\nimport { PDFPageView } from \"./pdf_page_view.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\nimport { StructTreeLayerBuilder } from \"./struct_tree_layer_builder.js\";\nimport { TextHighlighter } from \"./text_highlighter.js\";\nimport { TextLayerBuilder } from \"./text_layer_builder.js\";\nimport { XfaLayerBuilder } from \"./xfa_layer_builder.js\";\n\n\nconst DEFAULT_CACHE_SIZE = 10;\n\n/**\n * @typedef {Object} PDFViewerOptions\n * @property {HTMLDivElement} container - The container for the viewer element.\n * @property {HTMLDivElement} [viewer] - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {DownloadManager} [downloadManager] - The download manager\n *   component.\n * @property {PDFFindController} [findController] - The find controller\n *   component.\n * @property {PDFScriptingManager} [scriptingManager] - The scripting manager\n *   component.\n * @property {PDFRenderingQueue} [renderingQueue] - The rendering queue object.\n * @property {boolean} [removePageBorders] - Removes the border shadow around\n *   the pages. The default value is `false`.\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {number} [annotationMode] - Controls if the annotation layer is\n *   created, and if interactive form elements or `AnnotationStorage`-data are\n *   being rendered. The constants from {@link AnnotationMode} should be used;\n *   see also {@link RenderParameters} and {@link GetOperatorListParameters}.\n *   The default value is `AnnotationMode.ENABLE_FORMS`.\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   mainly for annotation icons. Include trailing slash.\n * @property {boolean} [enablePrintAutoRotate] - Enables automatic rotation of\n *   landscape pages upon printing. The default is `false`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n */\n\nfunction PDFPageViewBuffer(size) {\n  const data = [];\n  this.push = function (view) {\n    const i = data.indexOf(view);\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n    data.push(view);\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n  /**\n   * After calling resize, the size of the buffer will be newSize. The optional\n   * parameter pagesToKeep is, if present, an array of pages to push to the back\n   * of the buffer, delaying their destruction. The size of pagesToKeep has no\n   * impact on the final size of the buffer; if pagesToKeep has length larger\n   * than newSize, some of those pages will be destroyed anyway.\n   */\n  this.resize = function (newSize, pagesToKeep) {\n    size = newSize;\n    if (pagesToKeep) {\n      const pageIdsToKeep = new Set();\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n        pageIdsToKeep.add(pagesToKeep[i].id);\n      }\n      moveToEndOfArray(data, function (page) {\n        return pageIdsToKeep.has(page.id);\n      });\n    }\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n\n  this.has = function (view) {\n    return data.includes(view);\n  };\n}\n\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    // Prevent unnecessary re-rendering of all pages when the scale\n    // changes only because of limited numerical precision.\n    return true;\n  }\n  return false;\n}\n\n/**\n * Simple viewer control to display PDF content/pages.\n */\nclass BaseViewer {\n  /**\n   * @param {PDFViewerOptions} options\n   */\n  constructor(options) {\n    if (this.constructor === BaseViewer) {\n      throw new Error(\"Cannot initialize BaseViewer.\");\n    }\n    const viewerVersion =\n      typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n    if (version !== viewerVersion) {\n      throw new Error(\n        `The API version \"${version}\" does not match the Viewer version \"${viewerVersion}\".`\n      );\n    }\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n\n    /** #495 modified by ngx-extended-pdf-viewer */\n    this.pageViewMode = options.pageViewMode || \"single\";\n    /** end of modification */\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n    ) {\n      if (\n        !(\n          this.container?.tagName.toUpperCase() === \"DIV\" &&\n          this.viewer?.tagName.toUpperCase() === \"DIV\"\n        )\n      ) {\n        throw new Error(\"Invalid `container` and/or `viewer` option.\");\n      }\n\n      if (\n        this.container.offsetParent &&\n        getComputedStyle(this.container).position !== \"absolute\"\n      ) {\n        throw new Error(\"The `container` must be absolutely positioned.\");\n      }\n    }\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this._scriptingManager = options.scriptingManager || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.textLayerMode = options.textLayerMode ?? TextLayerMode.ENABLE;\n    this._annotationMode =\n      options.annotationMode ?? AnnotationMode.ENABLE_FORMS;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n || NullL10n;\n\n    this.defaultRenderingQueue = !options.renderingQueue;\n    if (this.defaultRenderingQueue) {\n      // Custom rendering queue is not specified, using default one\n      this.renderingQueue = new PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n    this._doc = document.documentElement;\n\n    this.scroll = watchScroll(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = PresentationModeState.UNKNOWN;\n    this._onBeforeDraw = this._onAfterDraw = null;\n    this._resetView();\n\n    if (this.removePageBorders) {\n      this.viewer.classList.add(\"removePageBorders\");\n    }\n    // Defer the dispatching of this event, to give other viewer components\n    // time to initialize *and* register 'baseviewerinit' event listeners.\n    Promise.resolve().then(() => {\n      this.eventBus.dispatch(\"baseviewerinit\", { source: this });\n    });\n  }\n\n  get pagesCount() {\n    return this._pages.length;\n  }\n\n  getPageView(index) {\n    return this._pages[index];\n  }\n\n  /**\n   * @type {boolean} - True if all {PDFPageView} objects are initialized.\n   */\n  get pageViewsReady() {\n    if (!this._pagesCapability.settled) {\n      return false;\n    }\n    // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\n    // that *all* pages have in fact been completely loaded.\n    return this._pages.every(function (pageView) {\n      return pageView?.pdfPage;\n    });\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get renderForms() {\n    return this._annotationMode === AnnotationMode.ENABLE_FORMS;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get enableScripting() {\n    return !!this._scriptingManager;\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  /**\n   * @param {number} val - The page number.\n   */\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Invalid page number.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    // #716 modified by ngx-extended-pdf-viewer\n    const flip = Math.abs(this._currentPageNumber - val) < 2;\n    // #716 end of modification\n\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(val, /* resetCurrentPageView = */ true)) {\n      console.error(`currentPageNumber: \"${val}\" is not a valid page.`);\n    }\n\t// #716 modified by ngx-extended-pdf-viewer\n    if (this.pageFlip) {\n      if (flip) {\n        console.log(\"Flip\");\n        this.pageFlip.flip(val - 1);\n      } else {\n        console.log(\"turn to page\");\n        this.pageFlip.turnToPage(val - 1);\n      }\n    }\n    // #716 end of modification\n  }\n\n  /** #495 modified by ngx-extended-pdf-viewer */\n  hidePagesDependingOnpageViewMode() {\n    if (this.pageViewMode === \"single\") {\n      this._pages.forEach(page => {\n        page.div.style.display = \"none\";\n      });\n      this._pages.forEach(page => {\n        const showIt = page.id === this.currentPageNumber;\n        if (showIt) {\n          page.div.style.display = \"inline-block\";\n          if (page.div.parentElement.classList.contains(\"spread\")) {\n            page.div.parentElement.childNodes.forEach((div, index) => {\n              div.style.display = \"inline-block\";\n            });\n          }\n        }\n      });\n    // #716 modified by ngx-extended-pdf-viewer\n    } else if (this.pageViewMode === \"book\") {\n      if (!this.pageFlip) {\n        setTimeout(() => {\n          if (!this.pageFlip) {\n            const page1 = this._pages[0].div;\n            const htmlParentElement = page1.parentElement;\n            const viewer = htmlParentElement.parentElement;\n            viewer.style.width = 2 * page1.clientWidth + \"px\";\n            viewer.style.overflow = \"hidden\";\n            viewer.style.marginLeft = \"auto\";\n            viewer.style.marginRight = \"auto\";\n            this.pageFlip = new PageFlip(htmlParentElement, {\n              width: page1.clientWidth,\n              height: page1.clientHeight,\n              showCover: true,\n              size: \"fixed\",\n            });\n            this.pageFlip.loadFromHTML(document.querySelectorAll(\".page\"));\n            // triggered by page turning\n            this.pageFlip.on(\"flip\", e => {\n              if (this._currentPageNumber !== e.data + 1) {\n                this._setCurrentPageNumber(e.data + 1, false);\n              }\n            });\n          }\n        }, 100);\n      }\n      // #716 end of modification\n    }\n  }\n  /** end of modification */\n\n  /**\n   * @returns {boolean} Whether the pageNumber is valid (within bounds).\n   * @private\n   */\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n    const previous = this._currentPageNumber;\n    this._currentPageNumber = val;\n\n    /** #495 modified by ngx-extended-pdf-viewer */\n    this.hidePagesDependingOnpageViewMode();\n    // #716 modified by ngx-extended-pdf-viewer\n    if (this.pageViewMode === \"single\" || this.pageViewMode === \"book\" || this.pageViewMode === \"infinite-scroll\") {\n      const pageView = this._pages[this.currentPageNumber - 1];\n      if (pageView.div.parentElement.classList.contains(\"spread\")) {\n        pageView.div.parentElement.childNodes.forEach(div => {\n          const pageNumber = Number(div.getAttribute(\"data-page-number\"));\n          const pv = this._pages[pageNumber - 1];\n          this._ensurePdfPageLoaded(pv).then(() => {\n            this.renderingQueue.renderView(pv);\n          });\n          div.style.display = \"inline-block\";\n        });\n      } else {\n        this._ensurePdfPageLoaded(pageView).then(() => {\n          this.renderingQueue.renderView(pageView);\n        });\n        // #716 modified by ngx-extended-pdf-viewer\n//        if (this.pageViewMode === \"book\") {\n//          this.ensureAdjecentPagesAreLoaded();\n//        }\n        // #716 modified by ngx-extended-pdf-viewer\n      }\n    }\n    /** end of modification */\n\n    this.eventBus.dispatch(\"pagechanging\", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels?.[val - 1] ?? null,\n      previous,\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n    return true;\n  }\n\n  // #716 modified by ngx-extended-pdf-viewer\n  ensureAdjecentPagesAreLoaded() {\n    if (this.currentPageNumber + 2 < this._pages.length) {\n      const nextPage = this._pages[this.currentPageNumber + 1];\n      if (nextPage.renderingState === RenderingStates.INITIAL) {\n        this._ensurePdfPageLoaded(nextPage).then(() => {\n          this.renderingQueue.renderView(nextPage);\n          console.log(\"rendered page \" + (this.currentPageNumber + 1));\n        });\n      }\n    }\n    setTimeout(() => {\n      if (this.currentPageNumber + 3 < this._pages.length) {\n        const nextPage = this._pages[this.currentPageNumber + 2];\n        if (nextPage.renderingState === RenderingStates.INITIAL) {\n          this._ensurePdfPageLoaded(nextPage).then(() => {\n            this.renderingQueue.renderView(nextPage);\n            console.log(\"rendered page \" + (this.currentPageNumber + 2));\n          });\n        }\n      }\n    }, 100);\n  }\n  // #716 modified by ngx-extended-pdf-viewer\n\n  /**\n   * @type {string|null} Returns the current page label, or `null` if no page\n   *   labels exist.\n   */\n  get currentPageLabel() {\n    return this._pageLabels?.[this._currentPageNumber - 1] ?? null;\n  }\n\n  /**\n   * @param {string} val - The page label.\n   */\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let page = val | 0; // Fallback page number.\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(page, /* resetCurrentPageView = */ true)) {\n      console.error(`currentPageLabel: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentScale() {\n    return this._currentScale !== UNKNOWN_SCALE\n      ? this._currentScale\n      : DEFAULT_SCALE;\n  }\n\n  /**\n   * @param {number} val - Scale of the pages in percents.\n   */\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error(\"Invalid numeric scale.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    // #562 modified by ngx-extended-pdf-viewer\n    this._setScale(val, this.pageViewMode === \"single\");\n    // #562 end of modification\n  }\n\n  /**\n   * @type {string}\n   */\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n\n  /**\n   * @param val - The scale of the pages (in percent or predefined value).\n   */\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    // #562 modified by ngx-extended-pdf-viewer\n    this._setScale(val, this.pageViewMode === \"single\");\n    // #562 end of modification\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  /**\n   * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\n   */\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error(\"Invalid pages rotation angle.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    const pageNumber = this._currentPageNumber;\n\n    const updateArgs = { rotation };\n    for (const pageView of this._pages) {\n      pageView.update(updateArgs);\n    }\n    // Prevent errors in case the rotation changes *before* the scale has been\n    // set to a non-default value.\n    if (this._currentScaleValue) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this.eventBus.dispatch(\"rotationchanging\", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n\n  /**\n   * @private\n   */\n  get _viewerElement() {\n    // In most viewers, e.g. `PDFViewer`, this should return `this.viewer`.\n    throw new Error(\"Not implemented: _viewerElement\");\n  }\n\n  /**\n   * @private\n   */\n  _onePageRenderedOrForceFetch() {\n    // Unless the viewer *and* its pages are visible, rendering won't start and\n    // `this._onePageRenderedCapability` thus won't be resolved.\n    // To ensure that automatic printing, on document load, still works even in\n    // those cases we force-allow fetching of all pages when:\n    //  - The viewer is hidden in the DOM, e.g. in a `display: none` <iframe>\n    //    element; fixes bug 1618621.\n    //  - The viewer is visible, but none of the pages are (e.g. if the\n    //    viewer is very small); fixes bug 1618955.\n    if (\n      !this.container.offsetParent ||\n      this._getVisiblePages().views.length === 0\n    ) {\n      return Promise.resolve();\n    }\n    return this._onePageRenderedCapability.promise;\n  }\n\n  /**\n   * @param pdfDocument {PDFDocument}\n   */\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this.eventBus.dispatch(\"pagesdestroy\", { source: this });\n\n      this._cancelRendering();\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n      if (this._scriptingManager) {\n        this._scriptingManager.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const isPureXfa = pdfDocument.isPureXfa;\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n    // Rendering (potentially) depends on this, hence fetching it immediately.\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n\n    this._pagesCapability.promise.then(() => {\n      this.eventBus.dispatch(\"pagesloaded\", {\n        source: this,\n        pagesCount,\n      });\n    });\n\n    this._onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n      if (!pageView) {\n        return;\n      }\n      // Add the page to the buffer at the start of drawing. That way it can be\n      // evicted from the buffer and destroyed even if we pause its rendering.\n      this._buffer.push(pageView);\n    };\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n    this._onAfterDraw = evt => {\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n        return;\n      }\n      this._onePageRenderedCapability.resolve();\n\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    };\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n    // Fetch a single page so we can get a viewport that will be the default\n    // viewport for all pages\n    firstPagePromise\n      .then(firstPdfPage => {\n        this._firstPageCapability.resolve(firstPdfPage);\n        this._optionalContentConfigPromise = optionalContentConfigPromise;\n\n        const scale = this.currentScale;\n        const viewport = firstPdfPage.getViewport({ scale: scale * CSS_UNITS });\n        const textLayerFactory =\n          this.textLayerMode !== TextLayerMode.DISABLE && !isPureXfa\n            ? this\n            : null;\n        const annotationLayerFactory =\n          this._annotationMode !== AnnotationMode.DISABLE ? this : null;\n        const xfaLayerFactory = isPureXfa ? this : null;\n\n        for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          const pageView = new PDFPageView({\n            container: this._viewerElement,\n            eventBus: this.eventBus,\n            id: pageNum,\n            scale,\n            defaultViewport: viewport.clone(),\n            optionalContentConfigPromise,\n            renderingQueue: this.renderingQueue,\n            textLayerFactory,\n            textLayerMode: this.textLayerMode,\n            annotationLayerFactory,\n            annotationMode: this._annotationMode,\n            xfaLayerFactory,\n            textHighlighterFactory: this,\n            structTreeLayerFactory: this,\n            imageResourcesPath: this.imageResourcesPath,\n            removePageBorders: this.removePageBorders, // #194\n            renderer: this.renderer,\n            useOnlyCssZoom: this.useOnlyCssZoom,\n            maxCanvasPixels: this.maxCanvasPixels,\n            l10n: this.l10n,\n          });\n          this._pages.push(pageView);\n        }\n        // Set the first `pdfPage` immediately, since it's already loaded,\n        // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n        // the `this._ensurePdfPageLoaded` method before rendering can start.\n        const firstPageView = this._pages[0];\n        if (firstPageView) {\n          firstPageView.setPdfPage(firstPdfPage);\n          this.linkService.cachePageRef(1, firstPdfPage.ref);\n        }\n        if (this._spreadMode !== SpreadMode.NONE) {\n          this._updateSpreadMode();\n        }\n\n        // Fetch all the pages since the viewport is needed before printing\n        // starts to create the correct size canvas. Wait until one page is\n        // rendered so we don't tie up too many resources early on.\n        this._onePageRenderedOrForceFetch().then(() => {\n          if (this.findController) {\n            this.findController.setDocument(pdfDocument); // Enable searching.\n          }\n          if (this._scriptingManager) {\n            this._scriptingManager.setDocument(pdfDocument); // Enable scripting.\n          }\n\n          // In addition to 'disableAutoFetch' being set, also attempt to reduce\n          // resource usage when loading *very* long/large documents.\n          if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n            // XXX: Printing is semi-broken with auto fetch disabled.\n            this._pagesCapability.resolve();\n            return;\n          }\n          let getPagesLeft = pagesCount - 1; // The first page was already loaded.\n\n          if (getPagesLeft <= 0) {\n            this._pagesCapability.resolve();\n            return;\n          }\n          for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n            pdfDocument.getPage(pageNum).then(\n              pdfPage => {\n                const pageView = this._pages[pageNum - 1];\n                if (!pageView.pdfPage) {\n                  pageView.setPdfPage(pdfPage);\n                }\n                this.linkService.cachePageRef(pageNum, pdfPage.ref);\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              },\n              reason => {\n                console.error(\n                  `Unable to get page ${pageNum} to initialize viewer`,\n                  reason\n                );\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              }\n            );\n          }\n        });\n\n        /** #495 modified by ngx-extended-pdf-viewer */\n        this.hidePagesDependingOnpageViewMode();\n        /** end of modification */\n\n        this.eventBus.dispatch(\"pagesinit\", { source: this });\n\n        if (this.defaultRenderingQueue) {\n          this.update();\n        }\n      })\n      .catch(reason => {\n        console.error(\"Unable to initialize viewer\", reason);\n      });\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (\n      !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n    ) {\n      this._pageLabels = null;\n      console.error(`setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFPageView` instances.\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].setPageLabel(this._pageLabels?.[i] ?? null);\n    }\n  }\n\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n    this._location = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._pagesRequests = new WeakMap();\n    this._firstPageCapability = createPromiseCapability();\n    this._onePageRenderedCapability = createPromiseCapability();\n    this._pagesCapability = createPromiseCapability();\n    this._scrollMode = ScrollMode.VERTICAL;\n    this._spreadMode = SpreadMode.NONE;\n\n    if (this._onBeforeDraw) {\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n      this._onBeforeDraw = null;\n    }\n    if (this._onAfterDraw) {\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    }\n    // Remove the pages from the DOM...\n    this.viewer.textContent = \"\";\n    // ... and reset the Scroll mode CSS class(es) afterwards.\n    this._updateScrollMode();\n  }\n\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n    this.update();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    /** #492 modified by ngx-extended-pdf-viewer */\n    if (this.pageViewMode === \"single\") {\n      this._pages.forEach(() => {\n        pageDiv.style.display = \"inline-block\";\n      });\n    }\n    /** #492 end of modification */\n\n    scrollIntoView(pageDiv, pageSpot, false, this.pageViewMode === \"infinite-scroll\");\n  }\n\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n    this._currentScaleValue = newValue.toString();\n\n    if (isSameScale(this._currentScale, newScale)) {\n      if (preset) {\n        this.eventBus.dispatch(\"scalechanging\", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue,\n        });\n      }\n      return;\n    }\n    this._doc.style.setProperty(\"--zoom-factor\", newScale);\n\n    const updateArgs = { scale: newScale };\n    for (const pageView of this._pages) {\n      pageView.update(updateArgs);\n    }\n    this._currentScale = newScale;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n        dest;\n      if (\n        this._location &&\n        !(this.isInPresentationMode || this.isChangingPresentationMode)\n      ) {\n        page = this._location.pageNumber;\n        dest = [\n          null,\n          { name: \"XYZ\" },\n          this._location.left,\n          this._location.top,\n          null,\n        ];\n      }\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true,\n      });\n    }\n\n    this.eventBus.dispatch(\"scalechanging\", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  /**\n   * @private\n   */\n  get _pageWidthScaleFactor() {\n    if (\n      this._spreadMode !== SpreadMode.NONE &&\n      this._scrollMode !== ScrollMode.HORIZONTAL &&\n      !this.isInPresentationMode\n    ) {\n      return 2;\n    }\n    return 1;\n  }\n\n  _setScale(value, noScroll = false) {\n    // #90 modified by ngx-extended-pdf-viewer\n    if (null === value) {\n      value = \"auto\";\n    }\n    // #90 end of modification\n    let scale = parseFloat(value);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ false);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n      if (!currentPage) {\n        return;\n      }\n      const noPadding = this.isInPresentationMode || this.removePageBorders;\n      // #589 modified by ngx-extended-pdf-viewer\n      let verticalPadding = VERTICAL_PADDING;\n      if (this.pageViewMode === 'single') {\n        verticalPadding += 15;\n      }\n      let hPadding = noPadding ? 0 : SCROLLBAR_PADDING;\n      let vPadding = noPadding ? (this.pageViewMode === 'single'? 10: 0) : verticalPadding;\n      // #589 end of modification\n\n      if (!noPadding && this._isScrollModeHorizontal) {\n        [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\n      }\n      const pageWidthScale =\n        (((this.container.clientWidth - hPadding) / currentPage.width) *\n          currentPage.scale) /\n        this._pageWidthScaleFactor;\n      const pageHeightScale =\n        ((this.container.clientHeight - vPadding) / currentPage.height) *\n        currentPage.scale;\n      switch (value) {\n        case \"page-actual\":\n          scale = 1;\n          break;\n        case \"page-width\":\n          scale = pageWidthScale;\n          break;\n        case \"page-height\":\n          scale = pageHeightScale;\n          break;\n        case \"page-fit\":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n        case \"auto\":\n          // For pages in landscape mode, fit the page height to the viewer\n          // *unless* the page would thus become too wide to fit horizontally.\n          const horizontalScale = isPortraitOrientation(currentPage)\n            ? pageWidthScale\n            : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n          break;\n        default:\n          console.error(`_setScale: \"${value}\" is an unknown zoom value.`);\n          return;\n      }\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ true);\n    }\n  }\n\n  /**\n   * Refreshes page view: scrolls to the current page and updates the scale.\n   * @private\n   */\n  _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      // Fixes the case when PDF has different page sizes.\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n    this._scrollIntoView({ pageDiv: pageView.div });\n  }\n\n  /**\n   * @param {string} label - The page label.\n   * @returns {number|null} The page number corresponding to the page label,\n   *   or `null` when no page labels exist and/or the input is invalid.\n   */\n  pageLabelToPageNumber(label) {\n    if (!this._pageLabels) {\n      return null;\n    }\n    const i = this._pageLabels.indexOf(label);\n    if (i < 0) {\n      return null;\n    }\n    return i + 1;\n  }\n\n  /**\n   * @typedef ScrollPageIntoViewParameters\n   * @property {number} pageNumber - The page number.\n   * @property {Array} [destArray] - The original PDF destination array, in the\n   *   format: <page-ref> </XYZ|/FitXXX> <args..>\n   * @property {boolean} [allowNegativeOffset] - Allow negative page offsets.\n   *   The default value is `false`.\n   * @property {boolean} [ignoreDestinationZoom] - Ignore the zoom argument in\n   *   the destination array. The default value is `false`.\n   */\n\n  /**\n   * Scrolls page into view.\n   * @param {ScrollPageIntoViewParameters} params\n   */\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false,\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageView =\n      Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n    if (!pageView) {\n      console.error(\n        `scrollPageIntoView: \"${pageNumber}\" is not a valid pageNumber parameter.`\n      );\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n      return;\n    }\n    let x = 0,\n      y = 0;\n    let width = 0,\n      height = 0,\n      widthScale,\n      heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth =\n      (changeOrientation ? pageView.height : pageView.width) /\n      pageView.scale /\n      CSS_UNITS;\n    const pageHeight =\n      (changeOrientation ? pageView.width : pageView.height) /\n      pageView.scale /\n      CSS_UNITS;\n    let scale = 0;\n    switch (destArray[1].name) {\n      case \"XYZ\":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        // If x and/or y coordinates are not supplied, default to\n        // _top_ left of the page (not the obvious bottom left,\n        // since aligning the bottom of the intended page with the\n        // top of the window is rarely helpful).\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n      case \"Fit\":\n      case \"FitB\":\n        scale = \"page-fit\";\n        break;\n      case \"FitH\":\n      case \"FitBH\":\n        y = destArray[2];\n        scale = \"page-width\";\n        // According to the PDF spec, section 12.3.2.2, a `null` value in the\n        // parameter should maintain the position relative to the new page.\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        } else if (typeof y !== \"number\") {\n          // The \"top\" value isn't optional, according to the spec, however some\n          // bad PDF generators will pretend that it is (fixes bug 1663390).\n          y = pageHeight;\n        }\n        break;\n      case \"FitV\":\n      case \"FitBV\":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = \"page-height\";\n        break;\n      case \"FitR\":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = this.removePageBorders ? 0 : SCROLLBAR_PADDING;\n        const vPadding = this.removePageBorders ? 0 : VERTICAL_PADDING;\n\n        widthScale =\n          (this.container.clientWidth - hPadding) / width / CSS_UNITS;\n        heightScale =\n          (this.container.clientHeight - vPadding) / height / CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n      default:\n        console.error(\n          `scrollPageIntoView: \"${destArray[1].name}\" is not a valid destination type.`\n        );\n        return;\n    }\n\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === UNKNOWN_SCALE) {\n        this.currentScaleValue = DEFAULT_SCALE_VALUE;\n      }\n    }\n\n    /** #495 modified by ngx-extended-pdf-viewer */\n    this._ensurePdfPageLoaded(pageView).then(() => {\n      this.renderingQueue.renderView(pageView);\n      if (this.currentPageNumber !== pageNumber) {\n        this.currentPageNumber = pageNumber;\n      }\n    });\n    /** end of modification */\n\n\n    if (scale === \"page-fit\" && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageNumber,\n      });\n      return;\n    }\n\n    const boundingRect = [\n      pageView.viewport.convertToViewportPoint(x, y),\n      pageView.viewport.convertToViewportPoint(x + width, y + height),\n    ];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      // Some bad PDF generators will create destinations with e.g. top values\n      // that exceeds the page height. Ensure that offsets are not negative,\n      // to prevent a previous page from becoming visible (fixes bug 874482).\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n    this._scrollIntoView({\n      pageDiv: pageView.div,\n      pageSpot: { left, top },\n      pageNumber,\n    });\n  }\n\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue =\n      parseFloat(currentScaleValue) === currentScale\n        ? Math.round(currentScale * 10000) / 100\n        : currentScaleValue;\n\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = \"#page=\" + pageNumber;\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(\n      container.scrollLeft - firstPage.x,\n      container.scrollTop - firstPage.y\n    );\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams,\n    };\n  }\n\n  _updateHelper(visiblePages) {\n    throw new Error(\"Not implemented: _updateHelper\");\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n    const visiblePages = visible.views,\n      numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n    this._buffer.resize(newCacheSize, visiblePages);\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    this._updateHelper(visiblePages); // Run any class-specific update code.\n\n    this._updateLocation(visible.first);\n    this.eventBus.dispatch(\"updateviewarea\", {\n      source: this,\n      location: this._location,\n    });\n    // #859 modified by ngx-extended-pdf-viewer\n    this.hidePagesDependingOnpageViewMode();\n    // #859 end of modification\n  }\n\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n\n  focus() {\n    this.container.focus();\n  }\n\n  get _isScrollModeHorizontal() {\n    // Used to ensure that pre-rendering of the next/previous page works\n    // correctly, since Scroll/Spread modes are ignored in Presentation Mode.\n    return this.isInPresentationMode\n      ? false\n      : this._scrollMode === ScrollMode.HORIZONTAL;\n  }\n\n  get _isContainerRtl() {\n    return getComputedStyle(this.container).direction === \"rtl\";\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === PresentationModeState.CHANGING;\n  }\n\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollWidth > this.container.clientWidth;\n  }\n\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollHeight > this.container.clientHeight;\n  }\n\n  /**\n   * Helper method for `this._getVisiblePages`. Should only ever be used when\n   * the viewer can only display a single page at a time, for example in:\n   *  - `PDFSinglePageViewer`.\n   *  - `PDFViewer` with Presentation Mode active.\n   */\n  _getCurrentVisiblePage() {\n    if (!this.pagesCount) {\n      return { views: [] };\n    }\n    const pageView = this._pages[this._currentPageNumber - 1];\n    // NOTE: Compute the `x` and `y` properties of the current view,\n    // since `this._updateLocation` depends of them being available.\n    const element = pageView.div;\n\n    const view = {\n      id: pageView.id,\n      x: element.offsetLeft + element.clientLeft,\n      y: element.offsetTop + element.clientTop,\n      view: pageView,\n    };\n    return { first: view, last: view, views: [view] };\n  }\n\n  _getVisiblePages() {\n    /** #495 modified by ngx-extended-pdf-viewer */\n    if (this.pageViewMode === \"single\") {\n      if (!this.pagesCount) {\n        return { views: [] };\n      }\n      const pageView = this._pages[this._currentPageNumber - 1];\n      if (pageView.div.parentElement.classList.contains(\"spread\")) {\n        const pageViews = [];\n        pageView.div.parentElement.childNodes.forEach(div => {\n          const pageNumber = Number(div.getAttribute(\"data-page-number\"));\n          const pv = this._pages[pageNumber - 1];\n          const element = pv.div;\n\n          const view = {\n            id: pv.id,\n            x: element.offsetLeft + element.clientLeft,\n            y: element.offsetTop + element.clientTop,\n            view: pv,\n          };\n          pageViews.push(view);\n        });\n        return { first: pageViews[0], last: pageViews[pageViews.length - 1], views: pageViews };\n      }\n      return this._getCurrentVisiblePage();\n    }\n    /** end of modification */\n    return getVisibleElements({\n      scrollEl: this.container,\n      views: this._pages,\n      sortByVisibility: true,\n      horizontal: this._isScrollModeHorizontal,\n      rtl: this._isScrollModeHorizontal && this._isContainerRtl,\n    });\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.pagesCount\n      )\n    ) {\n      console.error(`isPageVisible: \"${pageNumber}\" is not a valid page.`);\n      return false;\n    }\n    return this._getVisiblePages().views.some(function (view) {\n      return view.id === pageNumber;\n    });\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageCached(pageNumber) {\n    if (!this.pdfDocument || !this._buffer) {\n      return false;\n    }\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.pagesCount\n      )\n    ) {\n      console.error(`isPageCached: \"${pageNumber}\" is not a valid page.`);\n      return false;\n    }\n    const pageView = this._pages[pageNumber - 1];\n    if (!pageView) {\n      return false;\n    }\n    return this._buffer.has(pageView);\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (\n        this._pages[i] &&\n        this._pages[i].renderingState !== RenderingStates.FINISHED\n      ) {\n        this._pages[i].reset();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _cancelRendering() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i]) {\n        this._pages[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @param {PDFPageView} pageView\n   * @returns {Promise} Returns a promise containing a {PDFPageProxy} object.\n   * @private\n   */\n  _ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return Promise.resolve(pageView.pdfPage);\n    }\n    if (this._pagesRequests.has(pageView)) {\n      return this._pagesRequests.get(pageView);\n    }\n    const promise = this.pdfDocument\n      .getPage(pageView.id)\n      .then(pdfPage => {\n        if (!pageView.pdfPage) {\n          pageView.setPdfPage(pdfPage);\n        }\n        this._pagesRequests.delete(pageView);\n        return pdfPage;\n      })\n      .catch(reason => {\n        console.error(\"Unable to get page for page view\", reason);\n        // Page error -- there is nothing that can be done.\n        this._pagesRequests.delete(pageView);\n      });\n    this._pagesRequests.set(pageView, promise);\n    return promise;\n  }\n\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n    const scrollAhead = this._isScrollModeHorizontal\n      ? this.scroll.right\n      : this.scroll.down;\n    const pageView = this.renderingQueue.getHighestPriority(\n      visiblePages,\n      this._pages,\n      scrollAhead\n    );\n    if (pageView) {\n      this._ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @param {TextHighlighter} highlighter\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus,\n    highlighter\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      enhanceTextSelection: this.isInPresentationMode\n        ? false\n        : enhanceTextSelection,\n      highlighter,\n    });\n  }\n\n  /**\n   * @param {number} pageIndex\n   * @param {EventBus} eventBus\n   * @returns {TextHighlighter}\n   */\n  createTextHighlighter(pageIndex, eventBus) {\n    return new TextHighlighter({\n      eventBus,\n      pageIndex,\n      findController: this.isInPresentationMode ? null : this.findController,\n    });\n  }\n\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {AnnotationStorage} [annotationStorage] - Storage for annotation\n   *   data in forms.\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderForms\n   * @param {IL10n} l10n\n   * @param {boolean} [enableScripting]\n   * @param {Promise<boolean>} [hasJSActionsPromise]\n   * @param {Object} [mouseState]\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderForms = true,\n    l10n = NullL10n,\n    enableScripting = null,\n    hasJSActionsPromise = null,\n    mouseState = null\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      annotationStorage:\n        annotationStorage || this.pdfDocument?.annotationStorage,\n      imageResourcesPath,\n      renderForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      l10n,\n      enableScripting: enableScripting ?? this.enableScripting,\n      hasJSActionsPromise:\n        hasJSActionsPromise || this.pdfDocument?.hasJSActions(),\n      mouseState: mouseState || this._scriptingManager?.mouseState,\n    });\n  }\n\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {AnnotationStorage} [annotationStorage] - Storage for annotation\n   *   data in forms.\n   * @returns {XfaLayerBuilder}\n   */\n  createXfaLayerBuilder(pageDiv, pdfPage, annotationStorage = null) {\n    return new XfaLayerBuilder({\n      pageDiv,\n      pdfPage,\n      annotationStorage:\n        annotationStorage || this.pdfDocument?.annotationStorage,\n    });\n  }\n\n  /**\n   * @param {PDFPage} pdfPage\n   * @returns {StructTreeLayerBuilder}\n   */\n  createStructTreeLayerBuilder(pdfPage) {\n    return new StructTreeLayerBuilder({\n      pdfPage,\n    });\n  }\n\n  /**\n   * @type {boolean} Whether all pages of the PDF document have identical\n   *   widths and heights.\n   */\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n      if (\n        pageView.width !== firstPageView.width ||\n        pageView.height !== firstPageView.height\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns sizes of the pages.\n   * @returns {Array} Array of objects with width/height/rotation fields.\n   */\n  getPagesOverview() {\n    return this._pages.map(pageView => {\n      const viewport = pageView.pdfPage.getViewport({ scale: 1 });\n\n      if (!this.enablePrintAutoRotate || isPortraitOrientation(viewport)) {\n        return {\n          width: viewport.width,\n          height: viewport.height,\n          rotation: viewport.rotation,\n        };\n      }\n      // Landscape orientation.\n      return {\n        width: viewport.height,\n        height: viewport.width,\n        rotation: (viewport.rotation - 90) % 360,\n      };\n    });\n  }\n\n  /**\n   * @type {Promise<OptionalContentConfig | null>}\n   */\n  get optionalContentConfigPromise() {\n    if (!this.pdfDocument) {\n      return Promise.resolve(null);\n    }\n    if (!this._optionalContentConfigPromise) {\n      // Prevent issues if the getter is accessed *before* the `onePageRendered`\n      // promise has resolved; won't (normally) happen in the default viewer.\n      return this.pdfDocument.getOptionalContentConfig();\n    }\n    return this._optionalContentConfigPromise;\n  }\n\n  /**\n   * @param {Promise<OptionalContentConfig>} promise - A promise that is\n   *   resolved with an {@link OptionalContentConfig} instance.\n   */\n  set optionalContentConfigPromise(promise) {\n    if (!(promise instanceof Promise)) {\n      throw new Error(`Invalid optionalContentConfigPromise: ${promise}`);\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!this._optionalContentConfigPromise) {\n      // Ignore the setter *before* the `onePageRendered` promise has resolved,\n      // since it'll be overwritten anyway; won't happen in the default viewer.\n      return;\n    }\n    this._optionalContentConfigPromise = promise;\n\n    const updateArgs = { optionalContentConfigPromise: promise };\n    for (const pageView of this._pages) {\n      pageView.update(updateArgs);\n    }\n    this.update();\n\n    this.eventBus.dispatch(\"optionalcontentconfigchanged\", {\n      source: this,\n      promise,\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {ScrollMode}.\n   */\n  get scrollMode() {\n    return this._scrollMode;\n  }\n\n  /**\n   * @param {number} mode - The direction in which the document pages should be\n   *   laid out within the scrolling container.\n   *   The constants from {ScrollMode} should be used.\n   */\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return; // The Scroll mode didn't change.\n    }\n    if (!isValidScrollMode(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n    this._scrollMode = mode;\n    this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode });\n\n    this._updateScrollMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n      viewer = this.viewer;\n\n    viewer.classList.toggle(\n      \"scrollHorizontal\",\n      scrollMode === ScrollMode.HORIZONTAL\n    );\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n    // Non-numeric scale values can be sensitive to the scroll orientation.\n    // Call this before re-scrolling to the current page, to ensure that any\n    // changes in scale don't move the current page.\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n\n  /**\n   * @type {number} One of the values in {SpreadMode}.\n   */\n  get spreadMode() {\n    return this._spreadMode;\n  }\n\n  /**\n   * @param {number} mode - Group the pages in spreads, starting with odd- or\n   *   even-number pages (unless `SpreadMode.NONE` is used).\n   *   The constants from {SpreadMode} should be used.\n   */\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return; // The Spread mode didn't change.\n    }\n    if (!isValidSpreadMode(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n    this._spreadMode = mode;\n    this.eventBus.dispatch(\"spreadmodechanged\", { source: this, mode });\n\n    this._updateSpreadMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const viewer = this.viewer,\n      pages = this._pages;\n\n    // Temporarily remove all the pages from the DOM.\n    viewer.textContent = \"\";\n\n\n    if (this._spreadMode === SpreadMode.NONE) {\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        viewer.appendChild(pages[i].div);\n      }\n    } else {\n      const parity = this._spreadMode - 1;\n      let spread = null;\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        if (spread === null) {\n          spread = document.createElement(\"div\");\n          spread.className = \"spread\";\n          viewer.appendChild(spread);\n        } else if (i % 2 === parity) {\n          spread = spread.cloneNode(false);\n          viewer.appendChild(spread);\n        }\n        spread.appendChild(pages[i].div);\n      }\n    }\n\n    // #859 modified by ngx-extended-pdf-viewer\n    this.hidePagesDependingOnpageViewMode();\n    // end of modification by ngx-extended-pdf-viewer\n\n    if (!pageNumber) {\n      return;\n    }\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n\n  /**\n   * @private\n   */\n  _getPageAdvance(currentPageNumber, previous = false) {\n    if (this.isInPresentationMode) {\n      return 1;\n    }\n    switch (this._scrollMode) {\n      case ScrollMode.WRAPPED: {\n        const { views } = this._getVisiblePages(),\n          pageLayout = new Map();\n\n        // Determine the current (visible) page layout.\n        for (const { id, y, percent, widthPercent } of views) {\n          if (percent === 0 || widthPercent < 100) {\n            continue;\n          }\n          let yArray = pageLayout.get(y);\n          if (!yArray) {\n            pageLayout.set(y, (yArray ||= []));\n          }\n          yArray.push(id);\n        }\n        // Find the row of the current page.\n        for (const yArray of pageLayout.values()) {\n          const currentIndex = yArray.indexOf(currentPageNumber);\n          if (currentIndex === -1) {\n            continue;\n          }\n          const numPages = yArray.length;\n          if (numPages === 1) {\n            break;\n          }\n          // Handle documents with varying page sizes.\n          if (previous) {\n            for (let i = currentIndex - 1, ii = 0; i >= ii; i--) {\n              const currentId = yArray[i],\n                expectedId = yArray[i + 1] - 1;\n              if (currentId < expectedId) {\n                return currentPageNumber - expectedId;\n              }\n            }\n          } else {\n            for (let i = currentIndex + 1, ii = numPages; i < ii; i++) {\n              const currentId = yArray[i],\n                expectedId = yArray[i - 1] + 1;\n              if (currentId > expectedId) {\n                return expectedId - currentPageNumber;\n              }\n            }\n          }\n          // The current row is \"complete\", advance to the previous/next one.\n          if (previous) {\n            const firstId = yArray[0];\n            if (firstId < currentPageNumber) {\n              return currentPageNumber - firstId + 1;\n            }\n          } else {\n            const lastId = yArray[numPages - 1];\n            if (lastId > currentPageNumber) {\n              return lastId - currentPageNumber + 1;\n            }\n          }\n          break;\n        }\n        break;\n      }\n      case ScrollMode.HORIZONTAL: {\n        break;\n      }\n      case ScrollMode.VERTICAL: {\n        if (this._spreadMode === SpreadMode.NONE) {\n          break; // Normal vertical scrolling.\n        }\n        if (this.pageViewMode === \"single\") {\n          return 2;\n        }\n\n        const parity = this._spreadMode - 1;\n\n        if (previous && currentPageNumber % 2 !== parity) {\n          break; // Left-hand side page.\n        } else if (!previous && currentPageNumber % 2 === parity) {\n          break; // Right-hand side page.\n        }\n        const { views } = this._getVisiblePages(),\n          expectedId = previous ? currentPageNumber - 1 : currentPageNumber + 1;\n\n        for (const { id, percent, widthPercent } of views) {\n          if (id !== expectedId) {\n            continue;\n          }\n          if (percent > 0 && widthPercent === 100) {\n            return 2;\n          }\n          break;\n        }\n        break;\n      }\n    }\n    return 1;\n  }\n\n  /**\n   * Go to the next page, taking scroll/spread-modes into account.\n   * @returns {boolean} Whether navigation occured.\n   */\n  nextPage() {\n    const currentPageNumber = this._currentPageNumber,\n      pagesCount = this.pagesCount;\n\n    if (currentPageNumber >= pagesCount) {\n      return false;\n    }\n    const advance =\n      this._getPageAdvance(currentPageNumber, /* previous = */ false) || 1;\n\n    this.currentPageNumber = Math.min(currentPageNumber + advance, pagesCount);\n    return true;\n  }\n\n  /**\n   * Go to the previous page, taking scroll/spread-modes into account.\n   * @returns {boolean} Whether navigation occured.\n   */\n  previousPage() {\n    const currentPageNumber = this._currentPageNumber;\n\n    if (currentPageNumber <= 1) {\n      return false;\n    }\n    const advance =\n      this._getPageAdvance(currentPageNumber, /* previous = */ true) || 1;\n\n    this.currentPageNumber = Math.max(currentPageNumber - advance, 1);\n    return true;\n  }\n}\n\nexport { BaseViewer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./interfaces\").IPDFAnnotationLayerFactory} IPDFAnnotationLayerFactory */\n\nimport { AnnotationLayer } from \"pdfjs-lib\";\nimport { NullL10n } from \"./l10n_utils.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\n\n/**\n * @typedef {Object} AnnotationLayerBuilderOptions\n * @property {HTMLDivElement} pageDiv\n * @property {PDFPage} pdfPage\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {IL10n} l10n - Localization service.\n * @property {boolean} [enableScripting]\n * @property {Promise<boolean>} [hasJSActionsPromise]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationLayerBuilder {\n  /**\n   * @param {AnnotationLayerBuilderOptions} options\n   */\n  constructor({\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderForms = true,\n    l10n = NullL10n,\n    enableScripting = false,\n    hasJSActionsPromise = null,\n    mouseState = null,\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderForms = renderForms;\n    this.l10n = l10n;\n    this.annotationStorage = annotationStorage;\n    this.enableScripting = enableScripting;\n    this._hasJSActionsPromise = hasJSActionsPromise;\n    this._mouseState = mouseState;\n\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  /**\n   * @param {PageViewport} viewport\n   * @param {string} intent (default value is 'display')\n   * @returns {Promise<void>} A promise that is resolved when rendering of the\n   *   annotations is complete.\n   */\n  render(viewport, intent = \"display\") {\n    return Promise.all([\n      this.pdfPage.getAnnotations({ intent }),\n      this._hasJSActionsPromise,\n    ]).then(([annotations, hasJSActions = false]) => {\n      if (this._cancelled || annotations.length === 0) {\n        return;\n      }\n\n      const parameters = {\n        viewport: viewport.clone({ dontFlip: true }),\n        div: this.div,\n        annotations,\n        page: this.pdfPage,\n        imageResourcesPath: this.imageResourcesPath,\n        removePageBorders: this.removePageBorders, // #194\n        renderForms: this.renderForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n        annotationStorage: this.annotationStorage,\n        enableScripting: this.enableScripting,\n        hasJSActions,\n        mouseState: this._mouseState,\n      };\n\n      if (this.div) {\n        // If an annotationLayer already exists, refresh its children's\n        // transformation matrices.\n        AnnotationLayer.update(parameters);\n      } else {\n        // Create an annotation layer div and render the annotations\n        // if there is at least one annotation.\n        this.div = document.createElement(\"div\");\n        this.div.className = \"annotationLayer\";\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n\n        AnnotationLayer.render(parameters);\n        this.l10n.translate(this.div);\n      }\n    });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.hidden = true;\n  }\n}\n\n/**\n * @implements IPDFAnnotationLayerFactory\n */\nclass DefaultAnnotationLayerFactory {\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {AnnotationStorage} [annotationStorage]\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderForms\n   * @param {IL10n} l10n\n   * @param {boolean} [enableScripting]\n   * @param {Promise<boolean>} [hasJSActionsPromise]\n   * @param {Object} [mouseState]\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderForms = true,\n    l10n = NullL10n,\n    enableScripting = false,\n    hasJSActionsPromise = null,\n    mouseState = null\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderForms,\n      linkService: new SimpleLinkService(),\n      l10n,\n      annotationStorage,\n      enableScripting,\n      hasJSActionsPromise,\n      mouseState,\n    });\n  }\n}\n\nexport { AnnotationLayerBuilder, DefaultAnnotationLayerFactory };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A subset of the l10n strings in the `l10n/en-US/viewer.properties` file.\n */\nconst DEFAULT_L10N_STRINGS = {\n  of_pages: \"of {{pagesCount}}\",\n  page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n\n  document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n  document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n  document_properties_date_string: \"{{date}}, {{time}}\",\n  document_properties_page_size_unit_inches: \"in\",\n  document_properties_page_size_unit_millimeters: \"mm\",\n  document_properties_page_size_orientation_portrait: \"portrait\",\n  document_properties_page_size_orientation_landscape: \"landscape\",\n  document_properties_page_size_name_a3: \"A3\",\n  document_properties_page_size_name_a4: \"A4\",\n  document_properties_page_size_name_letter: \"Letter\",\n  document_properties_page_size_name_legal: \"Legal\",\n  document_properties_page_size_dimension_string:\n    \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n  document_properties_page_size_dimension_name_string:\n    \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n  document_properties_linearized_yes: \"Yes\",\n  document_properties_linearized_no: \"No\",\n\n  print_progress_percent: \"{{progress}}%\",\n\n  \"toggle_sidebar.title\": \"Toggle Sidebar\",\n  \"toggle_sidebar_notification2.title\":\n    \"Toggle Sidebar (document contains outline/attachments/layers)\",\n\n  additional_layers: \"Additional Layers\",\n  page_landmark: \"Page {{page}}\",\n  thumb_page_title: \"Page {{page}}\",\n  thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n\n  find_reached_top: \"Reached top of document, continued from bottom\",\n  find_reached_bottom: \"Reached end of document, continued from top\",\n  \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n  \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n  \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n  \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n  find_not_found: \"Phrase not found\",\n\n  error_version_info: \"PDF.js v{{version}} (build: {{build}})\",\n  error_message: \"Message: {{message}}\",\n  error_stack: \"Stack: {{stack}}\",\n  error_file: \"File: {{file}}\",\n  error_line: \"Line: {{line}}\",\n  rendering_error: \"An error occurred while rendering the page.\",\n\n  page_scale_width: \"Page Width\",\n  page_scale_fit: \"Page Fit\",\n  page_scale_auto: \"Automatic Zoom\",\n  page_scale_actual: \"Actual Size\",\n  page_scale_percent: \"{{scale}}%\",\n\n  loading: \"Loading…\",\n  loading_error: \"An error occurred while loading the PDF.\",\n  invalid_file_error: \"Invalid or corrupted PDF file.\",\n  missing_file_error: \"Missing PDF file.\",\n  unexpected_response_error: \"Unexpected server response.\",\n\n  printing_not_supported:\n    \"Warning: Printing is not fully supported by this browser.\",\n  printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n  web_fonts_disabled:\n    \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n};\n\nfunction getL10nFallback(key, args) {\n  switch (key) {\n    case \"find_match_count\":\n      key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n      break;\n    case \"find_match_count_limit\":\n      key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n      break;\n  }\n  return DEFAULT_L10N_STRINGS[key] || \"\";\n}\n\nconst PARTIAL_LANG_CODES = {\n  en: \"en-US\",\n  es: \"es-ES\",\n  fy: \"fy-NL\",\n  ga: \"ga-IE\",\n  gu: \"gu-IN\",\n  hi: \"hi-IN\",\n  hy: \"hy-AM\",\n  nb: \"nb-NO\",\n  ne: \"ne-NP\",\n  nn: \"nn-NO\",\n  pa: \"pa-IN\",\n  pt: \"pt-PT\",\n  sv: \"sv-SE\",\n  zh: \"zh-CN\",\n};\n\n// Try to support \"incompletely\" specified language codes (see issue 13689).\nfunction fixupLangCode(langCode) {\n  return PARTIAL_LANG_CODES[langCode?.toLowerCase()] || langCode;\n}\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\nexport { fixupLangCode, getL10nFallback, NullL10n };\n","/**\n * Class representing a book page\n */\nclass Page {\n    constructor(render, density) {\n        this.state = {\n            angle: 0,\n            area: [],\n            position: { x: 0, y: 0 },\n            hardAngle: 0,\n            hardDrawingAngle: 0,\n        };\n        this.createdDensity = density;\n        this.nowDrawingDensity = this.createdDensity;\n        this.render = render;\n    }\n    /**\n     * Set a constant page density\n     *\n     * @param {PageDensity} density\n     */\n    setDensity(density) {\n        this.createdDensity = density;\n        this.nowDrawingDensity = density;\n    }\n    /**\n     * Set temp page density to next render\n     *\n     * @param {PageDensity}  density\n     */\n    setDrawingDensity(density) {\n        this.nowDrawingDensity = density;\n    }\n    /**\n     * Set page position\n     *\n     * @param {Point} pagePos\n     */\n    setPosition(pagePos) {\n        this.state.position = pagePos;\n    }\n    /**\n     * Set page angle\n     *\n     * @param {number} angle\n     */\n    setAngle(angle) {\n        this.state.angle = angle;\n    }\n    /**\n     * Set page crop area\n     *\n     * @param {Point[]} area\n     */\n    setArea(area) {\n        this.state.area = area;\n    }\n    /**\n     * Rotate angle for hard pages to next render\n     *\n     * @param {number} angle\n     */\n    setHardDrawingAngle(angle) {\n        this.state.hardDrawingAngle = angle;\n    }\n    /**\n     * Rotate angle for hard pages\n     *\n     * @param {number} angle\n     */\n    setHardAngle(angle) {\n        this.state.hardAngle = angle;\n        this.state.hardDrawingAngle = angle;\n    }\n    /**\n     * Set page orientation\n     *\n     * @param {PageOrientation} orientation\n     */\n    setOrientation(orientation) {\n        this.orientation = orientation;\n    }\n    /**\n     * Get temp page density\n     */\n    getDrawingDensity() {\n        return this.nowDrawingDensity;\n    }\n    /**\n     * Get a constant page density\n     */\n    getDensity() {\n        return this.createdDensity;\n    }\n    /**\n     * Get rotate angle for hard pages\n     */\n    getHardAngle() {\n        return this.state.hardAngle;\n    }\n}\n\n/**\n * Class representing a book page as an image on Canvas\n */\nclass ImagePage extends Page {\n    constructor(render, href, density) {\n        super(render, density);\n        this.image = null;\n        this.isLoad = false;\n        this.loadingAngle = 0;\n        this.image = new Image();\n        this.image.src = href;\n    }\n    draw(tempDensity) {\n        const ctx = this.render.getContext();\n        const pagePos = this.render.convertToGlobal(this.state.position);\n        const pageWidth = this.render.getRect().pageWidth;\n        const pageHeight = this.render.getRect().height;\n        ctx.save();\n        ctx.translate(pagePos.x, pagePos.y);\n        ctx.beginPath();\n        for (let p of this.state.area) {\n            if (p !== null) {\n                p = this.render.convertToGlobal(p);\n                ctx.lineTo(p.x - pagePos.x, p.y - pagePos.y);\n            }\n        }\n        ctx.rotate(this.state.angle);\n        ctx.clip();\n        if (!this.isLoad) {\n            this.drawLoader(ctx, { x: 0, y: 0 }, pageWidth, pageHeight);\n        }\n        else {\n            ctx.drawImage(this.image, 0, 0, pageWidth, pageHeight);\n        }\n        ctx.restore();\n    }\n    simpleDraw(orient) {\n        const rect = this.render.getRect();\n        const ctx = this.render.getContext();\n        const pageWidth = rect.pageWidth;\n        const pageHeight = rect.height;\n        const x = orient === 1 /* RIGHT */ ? rect.left + rect.pageWidth : rect.left;\n        const y = rect.top;\n        if (!this.isLoad) {\n            this.drawLoader(ctx, { x, y }, pageWidth, pageHeight);\n        }\n        else {\n            ctx.drawImage(this.image, x, y, pageWidth, pageHeight);\n        }\n    }\n    drawLoader(ctx, shiftPos, pageWidth, pageHeight) {\n        ctx.beginPath();\n        ctx.strokeStyle = 'rgb(200, 200, 200)';\n        ctx.fillStyle = 'rgb(255, 255, 255)';\n        ctx.lineWidth = 1;\n        ctx.rect(shiftPos.x + 1, shiftPos.y + 1, pageWidth - 1, pageHeight - 1);\n        ctx.stroke();\n        ctx.fill();\n        const middlePoint = {\n            x: shiftPos.x + pageWidth / 2,\n            y: shiftPos.y + pageHeight / 2,\n        };\n        ctx.beginPath();\n        ctx.lineWidth = 10;\n        ctx.arc(middlePoint.x, middlePoint.y, 20, this.loadingAngle, (3 * Math.PI) / 2 + this.loadingAngle);\n        ctx.stroke();\n        ctx.closePath();\n        this.loadingAngle += 0.07;\n        if (this.loadingAngle >= 2 * Math.PI) {\n            this.loadingAngle = 0;\n        }\n    }\n    load() {\n        if (!this.isLoad)\n            this.image.onload = () => {\n                this.isLoad = true;\n            };\n    }\n    newTemporaryCopy() {\n        return this;\n    }\n    getTemporaryCopy() {\n        return this;\n    }\n    hideTemporaryCopy() {\n        return;\n    }\n}\n\n/**\n * Сlass representing a collection of pages\n */\nclass PageCollection {\n    constructor(app, render) {\n        /** Pages List */\n        this.pages = [];\n        /** Index of the current page in list */\n        this.currentPageIndex = 0;\n        /** Number of the current spread in book */\n        this.currentSpreadIndex = 0;\n        /**  Two-page spread in landscape mode */\n        this.landscapeSpread = [];\n        /**  One-page spread in portrait mode */\n        this.portraitSpread = [];\n        this.render = render;\n        this.app = app;\n        this.currentPageIndex = 0;\n        this.isShowCover = this.app.getSettings().showCover;\n    }\n    /**\n     * Clear pages list\n     */\n    destroy() {\n        this.pages = [];\n    }\n    /**\n     * Split the book on the two-page spread in landscape mode and one-page spread in portrait mode\n     */\n    createSpread() {\n        this.landscapeSpread = [];\n        this.portraitSpread = [];\n        for (let i = 0; i < this.pages.length; i++) {\n            this.portraitSpread.push([i]); // In portrait mode - (one spread = one page)\n        }\n        let start = 0;\n        if (this.isShowCover) {\n            this.pages[0].setDensity(\"hard\" /* HARD */);\n            this.landscapeSpread.push([start]);\n            start++;\n        }\n        for (let i = start; i < this.pages.length; i += 2) {\n            if (i < this.pages.length - 1)\n                this.landscapeSpread.push([i, i + 1]);\n            else {\n                this.landscapeSpread.push([i]);\n                this.pages[i].setDensity(\"hard\" /* HARD */);\n            }\n        }\n    }\n    /**\n     * Get spread by mode (portrait or landscape)\n     */\n    getSpread() {\n        return this.render.getOrientation() === \"landscape\" /* LANDSCAPE */\n            ? this.landscapeSpread\n            : this.portraitSpread;\n    }\n    /**\n     * Get spread index by page number\n     *\n     * @param {number} pageNum - page index\n     */\n    getSpreadIndexByPage(pageNum) {\n        const spread = this.getSpread();\n        for (let i = 0; i < spread.length; i++)\n            if (pageNum === spread[i][0] || pageNum === spread[i][1])\n                return i;\n        return null;\n    }\n    /**\n     * Get the total number of pages\n     */\n    getPageCount() {\n        return this.pages.length;\n    }\n    /**\n     * Get the pages list\n     */\n    getPages() {\n        return this.pages;\n    }\n    /**\n     * Get page by index\n     *\n     * @param {number} pageIndex\n     */\n    getPage(pageIndex) {\n        if (pageIndex >= 0 && pageIndex < this.pages.length) {\n            return this.pages[pageIndex];\n        }\n        throw new Error('Invalid page number');\n    }\n    /**\n     * Get the next page from the specified\n     *\n     * @param {Page} current\n     */\n    nextBy(current) {\n        const idx = this.pages.indexOf(current);\n        if (idx < this.pages.length - 1)\n            return this.pages[idx + 1];\n        return null;\n    }\n    /**\n     * Get previous page from specified\n     *\n     * @param {Page} current\n     */\n    prevBy(current) {\n        const idx = this.pages.indexOf(current);\n        if (idx > 0)\n            return this.pages[idx - 1];\n        return null;\n    }\n    /**\n     * Get flipping page depending on the direction\n     *\n     * @param {FlipDirection} direction\n     */\n    getFlippingPage(direction) {\n        const current = this.currentSpreadIndex;\n        if (this.render.getOrientation() === \"portrait\" /* PORTRAIT */) {\n            return direction === 0 /* FORWARD */\n                ? this.pages[current].newTemporaryCopy()\n                : this.pages[current - 1];\n        }\n        else {\n            const spread = direction === 0 /* FORWARD */\n                ? this.getSpread()[current + 1]\n                : this.getSpread()[current - 1];\n            if (spread.length === 1)\n                return this.pages[spread[0]];\n            return direction === 0 /* FORWARD */\n                ? this.pages[spread[0]]\n                : this.pages[spread[1]];\n        }\n    }\n    /**\n     * Get Next page at the time of flipping\n     *\n     * @param {FlipDirection}  direction\n     */\n    getBottomPage(direction) {\n        const current = this.currentSpreadIndex;\n        if (this.render.getOrientation() === \"portrait\" /* PORTRAIT */) {\n            return direction === 0 /* FORWARD */\n                ? this.pages[current + 1]\n                : this.pages[current - 1];\n        }\n        else {\n            const spread = direction === 0 /* FORWARD */\n                ? this.getSpread()[current + 1]\n                : this.getSpread()[current - 1];\n            if (spread.length === 1)\n                return this.pages[spread[0]];\n            return direction === 0 /* FORWARD */\n                ? this.pages[spread[1]]\n                : this.pages[spread[0]];\n        }\n    }\n    /**\n     * Show next spread\n     */\n    showNext() {\n        if (this.currentSpreadIndex < this.getSpread().length) {\n            this.currentSpreadIndex++;\n            this.showSpread();\n        }\n    }\n    /**\n     * Show prev spread\n     */\n    showPrev() {\n        if (this.currentSpreadIndex > 0) {\n            this.currentSpreadIndex--;\n            this.showSpread();\n        }\n    }\n    /**\n     * Get the number of the current spread in book\n     */\n    getCurrentPageIndex() {\n        return this.currentPageIndex;\n    }\n    /**\n     * Show specified page\n     * @param {number} pageNum - Page index (from 0s)\n     */\n    show(pageNum = null) {\n        if (pageNum === null)\n            pageNum = this.currentPageIndex;\n        if (pageNum < 0 || pageNum >= this.pages.length)\n            return;\n        const spreadIndex = this.getSpreadIndexByPage(pageNum);\n        if (spreadIndex !== null) {\n            this.currentSpreadIndex = spreadIndex;\n            this.showSpread();\n        }\n    }\n    /**\n     * Index of the current page in list\n     */\n    getCurrentSpreadIndex() {\n        return this.currentSpreadIndex;\n    }\n    /**\n     * Set new spread index as current\n     *\n     * @param {number} newIndex - new spread index\n     */\n    setCurrentSpreadIndex(newIndex) {\n        if (newIndex >= 0 && newIndex < this.getSpread().length) {\n            this.currentSpreadIndex = newIndex;\n        }\n        else {\n            throw new Error('Invalid page');\n        }\n    }\n    /**\n     * Show current spread\n     */\n    showSpread() {\n        const spread = this.getSpread()[this.currentSpreadIndex];\n        if (spread.length === 2) {\n            this.render.setLeftPage(this.pages[spread[0]]);\n            this.render.setRightPage(this.pages[spread[1]]);\n        }\n        else {\n            if (this.render.getOrientation() === \"landscape\" /* LANDSCAPE */) {\n                if (spread[0] === this.pages.length - 1) {\n                    this.render.setLeftPage(this.pages[spread[0]]);\n                    this.render.setRightPage(null);\n                }\n                else {\n                    this.render.setLeftPage(null);\n                    this.render.setRightPage(this.pages[spread[0]]);\n                }\n            }\n            else {\n                this.render.setLeftPage(null);\n                this.render.setRightPage(this.pages[spread[0]]);\n            }\n        }\n        this.currentPageIndex = spread[0];\n        this.app.updatePageIndex(this.currentPageIndex);\n    }\n}\n\n/**\n * Сlass representing a collection of pages as images on the canvas\n */\nclass ImagePageCollection extends PageCollection {\n    constructor(app, render, imagesHref) {\n        super(app, render);\n        this.imagesHref = imagesHref;\n    }\n    load() {\n        for (const href of this.imagesHref) {\n            const page = new ImagePage(this.render, href, \"soft\" /* SOFT */);\n            page.load();\n            this.pages.push(page);\n        }\n        this.createSpread();\n    }\n}\n\n/**\n * A class containing helping mathematical methods\n */\nclass Helper {\n    /**\n     * Get the distance between two points\n     *\n     * @param {Point} point1\n     * @param {Point} point2\n     */\n    static GetDistanceBetweenTwoPoint(point1, point2) {\n        if (point1 === null || point2 === null) {\n            return Infinity;\n        }\n        return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n    }\n    /**\n     * Get the length of the line segment\n     *\n     * @param {Segment} segment\n     */\n    static GetSegmentLength(segment) {\n        return Helper.GetDistanceBetweenTwoPoint(segment[0], segment[1]);\n    }\n    /**\n     * Get the angle between two lines\n     *\n     * @param {Segment} line1\n     * @param {Segment} line2\n     */\n    static GetAngleBetweenTwoLine(line1, line2) {\n        const A1 = line1[0].y - line1[1].y;\n        const A2 = line2[0].y - line2[1].y;\n        const B1 = line1[1].x - line1[0].x;\n        const B2 = line2[1].x - line2[0].x;\n        return Math.acos((A1 * A2 + B1 * B2) / (Math.sqrt(A1 * A1 + B1 * B1) * Math.sqrt(A2 * A2 + B2 * B2)));\n    }\n    /**\n     * Check for a point in a rectangle\n     *\n     * @param {Rect} rect\n     * @param {Point} pos\n     *\n     * @returns {Point} If the point enters the rectangle its coordinates will be returned, otherwise - null\n     */\n    static PointInRect(rect, pos) {\n        if (pos === null) {\n            return null;\n        }\n        if (pos.x >= rect.left &&\n            pos.x <= rect.width + rect.left &&\n            pos.y >= rect.top &&\n            pos.y <= rect.top + rect.height) {\n            return pos;\n        }\n        return null;\n    }\n    /**\n     * Transform point coordinates to a given angle\n     *\n     * @param {Point} transformedPoint - Point to rotate\n     * @param {Point} startPoint - Transformation reference point\n     * @param {number} angle - Rotation angle (in radians)\n     *\n     * @returns {Point} Point coordinates after rotation\n     */\n    static GetRotatedPoint(transformedPoint, startPoint, angle) {\n        return {\n            x: transformedPoint.x * Math.cos(angle) + transformedPoint.y * Math.sin(angle) + startPoint.x,\n            y: transformedPoint.y * Math.cos(angle) - transformedPoint.x * Math.sin(angle) + startPoint.y,\n        };\n    }\n    /**\n     * Limit a point \"linePoint\" to a given circle centered at point \"startPoint\" and a given radius\n     *\n     * @param {Point} startPoint - Circle center\n     * @param {number} radius - Circle radius\n     * @param {Point} limitedPoint - Сhecked point\n     *\n     * @returns {Point} If \"linePoint\" enters the circle, then its coordinates are returned.\n     * Else will be returned the intersection point between the line ([startPoint, linePoint]) and the circle\n     */\n    static LimitPointToCircle(startPoint, radius, limitedPoint) {\n        // If \"linePoint\" enters the circle, do nothing\n        if (Helper.GetDistanceBetweenTwoPoint(startPoint, limitedPoint) <= radius) {\n            return limitedPoint;\n        }\n        const a = startPoint.x;\n        const b = startPoint.y;\n        const n = limitedPoint.x;\n        const m = limitedPoint.y;\n        // Find the intersection between the line at two points: (startPoint and limitedPoint) and the circle.\n        let x = Math.sqrt((Math.pow(radius, 2) * Math.pow(a - n, 2)) / (Math.pow(a - n, 2) + Math.pow(b - m, 2))) + a;\n        if (limitedPoint.x < 0) {\n            x *= -1;\n        }\n        let y = ((x - a) * (b - m)) / (a - n) + b;\n        if (a - n + b === 0) {\n            y = radius;\n        }\n        return { x, y };\n    }\n    /**\n     * Find the intersection of two lines bounded by a rectangle \"rectBorder\"\n     *\n     * @param {Rect} rectBorder\n     * @param {Segment} one\n     * @param {Segment} two\n     *\n     * @returns {Point} The intersection point, or \"null\" if it does not exist, or it lies outside the rectangle \"rectBorder\"\n     */\n    static GetIntersectBetweenTwoSegment(rectBorder, one, two) {\n        return Helper.PointInRect(rectBorder, Helper.GetIntersectBeetwenTwoLine(one, two));\n    }\n    /**\n     * Find the intersection point of two lines\n     *\n     * @param one\n     * @param two\n     *\n     * @returns {Point} The intersection point, or \"null\" if it does not exist\n     * @throws Error if the segments are on the same line\n     */\n    static GetIntersectBeetwenTwoLine(one, two) {\n        const A1 = one[0].y - one[1].y;\n        const A2 = two[0].y - two[1].y;\n        const B1 = one[1].x - one[0].x;\n        const B2 = two[1].x - two[0].x;\n        const C1 = one[0].x * one[1].y - one[1].x * one[0].y;\n        const C2 = two[0].x * two[1].y - two[1].x * two[0].y;\n        const det1 = A1 * C2 - A2 * C1;\n        const det2 = B1 * C2 - B2 * C1;\n        const x = -((C1 * B2 - C2 * B1) / (A1 * B2 - A2 * B1));\n        const y = -((A1 * C2 - A2 * C1) / (A1 * B2 - A2 * B1));\n        if (isFinite(x) && isFinite(y)) {\n            return { x, y };\n        }\n        else {\n            if (Math.abs(det1 - det2) < 0.1)\n                throw new Error('Segment included');\n        }\n        return null;\n    }\n    /**\n     * Get a list of coordinates (step: 1px) between two points\n     *\n     * @param pointOne\n     * @param pointTwo\n     *\n     * @returns {Point[]}\n     */\n    static GetCordsFromTwoPoint(pointOne, pointTwo) {\n        const sizeX = Math.abs(pointOne.x - pointTwo.x);\n        const sizeY = Math.abs(pointOne.y - pointTwo.y);\n        const lengthLine = Math.max(sizeX, sizeY);\n        const result = [pointOne];\n        function getCord(c1, c2, size, length, index) {\n            if (c2 > c1) {\n                return c1 + index * (size / length);\n            }\n            else if (c2 < c1) {\n                return c1 - index * (size / length);\n            }\n            return c1;\n        }\n        for (let i = 1; i <= lengthLine; i += 1) {\n            result.push({\n                x: getCord(pointOne.x, pointTwo.x, sizeX, lengthLine, i),\n                y: getCord(pointOne.y, pointTwo.y, sizeY, lengthLine, i),\n            });\n        }\n        return result;\n    }\n}\n\n/**\n * Class representing a book page as a HTML Element\n */\nclass HTMLPage extends Page {\n    constructor(render, element, density) {\n        super(render, density);\n        this.copiedElement = null;\n        this.temporaryCopy = null;\n        this.isLoad = false;\n        this.element = element;\n        this.element.classList.add('stf__item');\n        this.element.classList.add('--' + density);\n    }\n    newTemporaryCopy() {\n        if (this.nowDrawingDensity === \"hard\" /* HARD */) {\n            return this;\n        }\n        if (this.temporaryCopy === null) {\n            this.copiedElement = this.element.cloneNode(true);\n            this.element.parentElement.appendChild(this.copiedElement);\n            this.temporaryCopy = new HTMLPage(this.render, this.copiedElement, this.nowDrawingDensity);\n        }\n        return this.getTemporaryCopy();\n    }\n    getTemporaryCopy() {\n        return this.temporaryCopy;\n    }\n    hideTemporaryCopy() {\n        if (this.temporaryCopy !== null) {\n            this.copiedElement.remove();\n            this.copiedElement = null;\n            this.temporaryCopy = null;\n        }\n    }\n    draw(tempDensity) {\n        const density = tempDensity ? tempDensity : this.nowDrawingDensity;\n        const pagePos = this.render.convertToGlobal(this.state.position);\n        const pageWidth = this.render.getRect().pageWidth;\n        const pageHeight = this.render.getRect().height;\n        this.element.classList.remove('--simple');\n        // modified by ngx-extended-pdf-viewer (added position: absolute)\n        const commonStyle = `\n            position: absolute;\n            display: block;\n            z-index: ${this.element.style.zIndex};\n            left: 0;\n            top: 0;\n            width: ${pageWidth}px;\n            height: ${pageHeight}px;\n        `;\n        // end of modification by ngx-extended-pdf-viewer\n        density === \"hard\" /* HARD */\n            ? this.drawHard(commonStyle)\n            : this.drawSoft(pagePos, commonStyle);\n    }\n    drawHard(commonStyle = '') {\n        const pos = this.render.getRect().left + this.render.getRect().width / 2;\n        const angle = this.state.hardDrawingAngle;\n        const newStyle = commonStyle +\n            `\n                backface-visibility: hidden;\n                -webkit-backface-visibility: hidden;\n                clip-path: none;\n                -webkit-clip-path: none;\n            ` +\n            (this.orientation === 0 /* LEFT */\n                ? `transform-origin: ${this.render.getRect().pageWidth}px 0;\n                   transform: translate3d(0, 0, 0) rotateY(${angle}deg);`\n                : `transform-origin: 0 0;\n                   transform: translate3d(${pos}px, 0, 0) rotateY(${angle}deg);`);\n        this.element.style.cssText = newStyle;\n    }\n    drawSoft(position, commonStyle = '') {\n        let polygon = 'polygon( ';\n        for (const p of this.state.area) {\n            if (p !== null) {\n                let g = this.render.getDirection() === 1 /* BACK */\n                    ? {\n                        x: -p.x + this.state.position.x,\n                        y: p.y - this.state.position.y,\n                    }\n                    : {\n                        x: p.x - this.state.position.x,\n                        y: p.y - this.state.position.y,\n                    };\n                g = Helper.GetRotatedPoint(g, { x: 0, y: 0 }, this.state.angle);\n                polygon += g.x + 'px ' + g.y + 'px, ';\n            }\n        }\n        polygon = polygon.slice(0, -2);\n        polygon += ')';\n        const newStyle = commonStyle +\n            `transform-origin: 0 0; clip-path: ${polygon}; -webkit-clip-path: ${polygon};` +\n            (this.render.isSafari() && this.state.angle === 0\n                ? `transform: translate(${position.x}px, ${position.y}px);`\n                : `transform: translate3d(${position.x}px, ${position.y}px, 0) rotate(${this.state.angle}rad);`);\n        this.element.style.cssText = newStyle;\n    }\n    simpleDraw(orient) {\n        const rect = this.render.getRect();\n        const pageWidth = rect.pageWidth;\n        const pageHeight = rect.height;\n        const x = orient === 1 /* RIGHT */ ? rect.left + rect.pageWidth : rect.left;\n        const y = rect.top;\n        this.element.classList.add('--simple');\n        this.element.style.cssText = `\n            position: absolute;\n            display: block;\n            height: ${pageHeight}px;\n            left: ${x}px;\n            top: ${y}px;\n            width: ${pageWidth}px;\n            z-index: ${this.render.getSettings().startZIndex + 1};`;\n    }\n    getElement() {\n        return this.element;\n    }\n    load() {\n        this.isLoad = true;\n    }\n    setOrientation(orientation) {\n        super.setOrientation(orientation);\n        this.element.classList.remove('--left', '--right');\n        this.element.classList.add(orientation === 1 /* RIGHT */ ? '--right' : '--left');\n    }\n    setDrawingDensity(density) {\n        this.element.classList.remove('--soft', '--hard');\n        this.element.classList.add('--' + density);\n        super.setDrawingDensity(density);\n    }\n}\n\n/**\n * Сlass representing a collection of pages as HTML Element\n */\nclass HTMLPageCollection extends PageCollection {\n    constructor(app, render, element, items) {\n        super(app, render);\n        this.element = element;\n        this.pagesElement = items;\n    }\n    load() {\n        for (const pageElement of this.pagesElement) {\n            const page = new HTMLPage(this.render, pageElement, pageElement.dataset['density'] === 'hard' ? \"hard\" /* HARD */ : \"soft\" /* SOFT */);\n            page.load();\n            this.pages.push(page);\n        }\n        this.createSpread();\n    }\n}\n\n/**\n * Class representing mathematical methods for calculating page position (rotation angle, clip area ...)\n */\nclass FlipCalculation {\n    /**\n     * @constructor\n     *\n     * @param {FlipDirection} direction - Flipping direction\n     * @param {FlipCorner} corner - Flipping corner\n     * @param pageWidth - Current page width\n     * @param pageHeight - Current page height\n     */\n    constructor(direction, corner, pageWidth, pageHeight) {\n        this.direction = direction;\n        this.corner = corner;\n        /** The point of intersection of the page with the borders of the book */\n        this.topIntersectPoint = null; // With top border\n        this.sideIntersectPoint = null; // With side border\n        this.bottomIntersectPoint = null; // With bottom border\n        this.pageWidth = parseInt(pageWidth, 10);\n        this.pageHeight = parseInt(pageHeight, 10);\n    }\n    /**\n     * The main calculation method\n     *\n     * @param {Point} localPos - Touch Point Coordinates (relative active page!)\n     *\n     * @returns {boolean} True - if the calculations were successful, false if errors occurred\n     */\n    calc(localPos) {\n        try {\n            // Find: page rotation angle and active corner position\n            this.position = this.calcAngleAndPosition(localPos);\n            // Find the intersection points of the scrolling page and the book\n            this.calculateIntersectPoint(this.position);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Get the crop area for the flipping page\n     *\n     * @returns {Point[]} Polygon page\n     */\n    getFlippingClipArea() {\n        const result = [];\n        let clipBottom = false;\n        result.push(this.rect.topLeft);\n        result.push(this.topIntersectPoint);\n        if (this.sideIntersectPoint === null) {\n            clipBottom = true;\n        }\n        else {\n            result.push(this.sideIntersectPoint);\n            if (this.bottomIntersectPoint === null)\n                clipBottom = false;\n        }\n        result.push(this.bottomIntersectPoint);\n        if (clipBottom || this.corner === \"bottom\" /* BOTTOM */) {\n            result.push(this.rect.bottomLeft);\n        }\n        return result;\n    }\n    /**\n     * Get the crop area for the page that is below the page to be flipped\n     *\n     * @returns {Point[]} Polygon page\n     */\n    getBottomClipArea() {\n        const result = [];\n        result.push(this.topIntersectPoint);\n        if (this.corner === \"top\" /* TOP */) {\n            result.push({ x: this.pageWidth, y: 0 });\n        }\n        else {\n            if (this.topIntersectPoint !== null) {\n                result.push({ x: this.pageWidth, y: 0 });\n            }\n            result.push({ x: this.pageWidth, y: this.pageHeight });\n        }\n        if (this.sideIntersectPoint !== null) {\n            if (Helper.GetDistanceBetweenTwoPoint(this.sideIntersectPoint, this.topIntersectPoint) >= 10)\n                result.push(this.sideIntersectPoint);\n        }\n        else {\n            if (this.corner === \"top\" /* TOP */) {\n                result.push({ x: this.pageWidth, y: this.pageHeight });\n            }\n        }\n        result.push(this.bottomIntersectPoint);\n        result.push(this.topIntersectPoint);\n        return result;\n    }\n    /**\n     * Get page rotation angle\n     */\n    getAngle() {\n        if (this.direction === 0 /* FORWARD */) {\n            return -this.angle;\n        }\n        return this.angle;\n    }\n    /**\n     * Get page area while flipping\n     */\n    getRect() {\n        return this.rect;\n    }\n    /**\n     * Get the position of the active angle when turning\n     */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Get the active corner of the page (which pull)\n     */\n    getActiveCorner() {\n        if (this.direction === 0 /* FORWARD */) {\n            return this.rect.topLeft;\n        }\n        return this.rect.topRight;\n    }\n    /**\n     * Get flipping direction\n     */\n    getDirection() {\n        return this.direction;\n    }\n    /**\n     * Get flipping progress (0-100)\n     */\n    getFlippingProgress() {\n        return Math.abs(((this.position.x - this.pageWidth) / (2 * this.pageWidth)) * 100);\n    }\n    /**\n     * Get flipping corner position (top, bottom)\n     */\n    getCorner() {\n        return this.corner;\n    }\n    /**\n     * Get start position for the page that is below the page to be flipped\n     */\n    getBottomPagePosition() {\n        if (this.direction === 1 /* BACK */) {\n            return { x: this.pageWidth, y: 0 };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Get the starting position of the shadow\n     */\n    getShadowStartPoint() {\n        if (this.corner === \"top\" /* TOP */) {\n            return this.topIntersectPoint;\n        }\n        else {\n            if (this.sideIntersectPoint !== null)\n                return this.sideIntersectPoint;\n            return this.topIntersectPoint;\n        }\n    }\n    /**\n     * Get the rotate angle of the shadow\n     */\n    getShadowAngle() {\n        const angle = Helper.GetAngleBetweenTwoLine(this.getSegmentToShadowLine(), [\n            { x: 0, y: 0 },\n            { x: this.pageWidth, y: 0 },\n        ]);\n        if (this.direction === 0 /* FORWARD */) {\n            return angle;\n        }\n        return Math.PI - angle;\n    }\n    calcAngleAndPosition(pos) {\n        let result = pos;\n        this.updateAngleAndGeometry(result);\n        if (this.corner === \"top\" /* TOP */) {\n            result = this.checkPositionAtCenterLine(result, { x: 0, y: 0 }, { x: 0, y: this.pageHeight });\n        }\n        else {\n            result = this.checkPositionAtCenterLine(result, { x: 0, y: this.pageHeight }, { x: 0, y: 0 });\n        }\n        if (Math.abs(result.x - this.pageWidth) < 1 && Math.abs(result.y) < 1) {\n            throw new Error('Point is too small');\n        }\n        return result;\n    }\n    updateAngleAndGeometry(pos) {\n        this.angle = this.calculateAngle(pos);\n        this.rect = this.getPageRect(pos);\n    }\n    calculateAngle(pos) {\n        const left = this.pageWidth - pos.x + 1;\n        const top = this.corner === \"bottom\" /* BOTTOM */ ? this.pageHeight - pos.y : pos.y;\n        let angle = 2 * Math.acos(left / Math.sqrt(top * top + left * left));\n        if (top < 0)\n            angle = -angle;\n        const da = Math.PI - angle;\n        if (!isFinite(angle) || (da >= 0 && da < 0.003))\n            throw new Error('The G point is too small');\n        if (this.corner === \"bottom\" /* BOTTOM */)\n            angle = -angle;\n        return angle;\n    }\n    getPageRect(localPos) {\n        if (this.corner === \"top\" /* TOP */) {\n            return this.getRectFromBasePoint([\n                { x: 0, y: 0 },\n                { x: this.pageWidth, y: 0 },\n                { x: 0, y: this.pageHeight },\n                { x: this.pageWidth, y: this.pageHeight },\n            ], localPos);\n        }\n        return this.getRectFromBasePoint([\n            { x: 0, y: -this.pageHeight },\n            { x: this.pageWidth, y: -this.pageHeight },\n            { x: 0, y: 0 },\n            { x: this.pageWidth, y: 0 },\n        ], localPos);\n    }\n    getRectFromBasePoint(points, localPos) {\n        return {\n            topLeft: this.getRotatedPoint(points[0], localPos),\n            topRight: this.getRotatedPoint(points[1], localPos),\n            bottomLeft: this.getRotatedPoint(points[2], localPos),\n            bottomRight: this.getRotatedPoint(points[3], localPos),\n        };\n    }\n    getRotatedPoint(transformedPoint, startPoint) {\n        return {\n            x: transformedPoint.x * Math.cos(this.angle) +\n                transformedPoint.y * Math.sin(this.angle) +\n                startPoint.x,\n            y: transformedPoint.y * Math.cos(this.angle) -\n                transformedPoint.x * Math.sin(this.angle) +\n                startPoint.y,\n        };\n    }\n    calculateIntersectPoint(pos) {\n        const boundRect = {\n            left: -1,\n            top: -1,\n            width: this.pageWidth + 2,\n            height: this.pageHeight + 2,\n        };\n        if (this.corner === \"top\" /* TOP */) {\n            this.topIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [pos, this.rect.topRight], [\n                { x: 0, y: 0 },\n                { x: this.pageWidth, y: 0 },\n            ]);\n            this.sideIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [pos, this.rect.bottomLeft], [\n                { x: this.pageWidth, y: 0 },\n                { x: this.pageWidth, y: this.pageHeight },\n            ]);\n            this.bottomIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [this.rect.bottomLeft, this.rect.bottomRight], [\n                { x: 0, y: this.pageHeight },\n                { x: this.pageWidth, y: this.pageHeight },\n            ]);\n        }\n        else {\n            this.topIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [this.rect.topLeft, this.rect.topRight], [\n                { x: 0, y: 0 },\n                { x: this.pageWidth, y: 0 },\n            ]);\n            this.sideIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [pos, this.rect.topLeft], [\n                { x: this.pageWidth, y: 0 },\n                { x: this.pageWidth, y: this.pageHeight },\n            ]);\n            this.bottomIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [this.rect.bottomLeft, this.rect.bottomRight], [\n                { x: 0, y: this.pageHeight },\n                { x: this.pageWidth, y: this.pageHeight },\n            ]);\n        }\n    }\n    checkPositionAtCenterLine(checkedPos, centerOne, centerTwo) {\n        let result = checkedPos;\n        const tmp = Helper.LimitPointToCircle(centerOne, this.pageWidth, result);\n        if (result !== tmp) {\n            result = tmp;\n            this.updateAngleAndGeometry(result);\n        }\n        const rad = Math.sqrt(Math.pow(this.pageWidth, 2) + Math.pow(this.pageHeight, 2));\n        let checkPointOne = this.rect.bottomRight;\n        let checkPointTwo = this.rect.topLeft;\n        if (this.corner === \"bottom\" /* BOTTOM */) {\n            checkPointOne = this.rect.topRight;\n            checkPointTwo = this.rect.bottomLeft;\n        }\n        if (checkPointOne.x <= 0) {\n            const bottomPoint = Helper.LimitPointToCircle(centerTwo, rad, checkPointTwo);\n            if (bottomPoint !== result) {\n                result = bottomPoint;\n                this.updateAngleAndGeometry(result);\n            }\n        }\n        return result;\n    }\n    getSegmentToShadowLine() {\n        const first = this.getShadowStartPoint();\n        const second = first !== this.sideIntersectPoint && this.sideIntersectPoint !== null\n            ? this.sideIntersectPoint\n            : this.bottomIntersectPoint;\n        return [first, second];\n    }\n}\n\n/**\n * Class representing the flipping process\n */\nclass Flip {\n    constructor(render, app) {\n        this.flippingPage = null;\n        this.bottomPage = null;\n        this.calc = null;\n        this.state = \"read\" /* READ */;\n        this.render = render;\n        this.app = app;\n    }\n    /**\n     * Called when the page folding (User drags page corner)\n     *\n     * @param globalPos - Touch Point Coordinates (relative window)\n     */\n    fold(globalPos) {\n        this.setState(\"user_fold\" /* USER_FOLD */);\n        // If the process has not started yet\n        if (this.calc === null)\n            this.start(globalPos);\n        this.do(this.render.convertToPage(globalPos));\n    }\n    /**\n     * Page turning with animation\n     *\n     * @param globalPos - Touch Point Coordinates (relative window)\n     */\n    flip(globalPos) {\n        if (this.app.getSettings().disableFlipByClick && !this.isPointOnCorners(globalPos))\n            return;\n        // the flipiing process is already running\n        if (this.calc !== null)\n            this.render.finishAnimation();\n        if (!this.start(globalPos))\n            return;\n        const rect = this.getBoundsRect();\n        this.setState(\"flipping\" /* FLIPPING */);\n        // Margin from top to start flipping\n        const topMargins = rect.height / 10;\n        // Defining animation start points\n        const yStart = this.calc.getCorner() === \"bottom\" /* BOTTOM */ ? rect.height - topMargins : topMargins;\n        const yDest = this.calc.getCorner() === \"bottom\" /* BOTTOM */ ? rect.height : 0;\n        // Сalculations for these points\n        this.calc.calc({ x: rect.pageWidth - topMargins, y: yStart });\n        // Run flipping animation\n        this.animateFlippingTo({ x: rect.pageWidth - topMargins, y: yStart }, { x: -rect.pageWidth, y: yDest }, true);\n    }\n    /**\n     * Start the flipping process. Find direction and corner of flipping. Creating an object for calculation.\n     *\n     * @param {Point} globalPos - Touch Point Coordinates (relative window)\n     *\n     * @returns {boolean} True if flipping is possible, false otherwise\n     */\n    start(globalPos) {\n        this.reset();\n        const bookPos = this.render.convertToBook(globalPos);\n        const rect = this.getBoundsRect();\n        // Find the direction of flipping\n        const direction = this.getDirectionByPoint(bookPos);\n        // Find the active corner\n        const flipCorner = bookPos.y >= rect.height / 2 ? \"bottom\" /* BOTTOM */ : \"top\" /* TOP */;\n        if (!this.checkDirection(direction))\n            return false;\n        try {\n            this.flippingPage = this.app.getPageCollection().getFlippingPage(direction);\n            this.bottomPage = this.app.getPageCollection().getBottomPage(direction);\n            // In landscape mode, needed to set the density  of the next page to the same as that of the flipped\n            if (this.render.getOrientation() === \"landscape\" /* LANDSCAPE */) {\n                if (direction === 1 /* BACK */) {\n                    const nextPage = this.app.getPageCollection().nextBy(this.flippingPage);\n                    if (nextPage !== null) {\n                        if (this.flippingPage.getDensity() !== nextPage.getDensity()) {\n                            this.flippingPage.setDrawingDensity(\"hard\" /* HARD */);\n                            nextPage.setDrawingDensity(\"hard\" /* HARD */);\n                        }\n                    }\n                }\n                else {\n                    const prevPage = this.app.getPageCollection().prevBy(this.flippingPage);\n                    if (prevPage !== null) {\n                        if (this.flippingPage.getDensity() !== prevPage.getDensity()) {\n                            this.flippingPage.setDrawingDensity(\"hard\" /* HARD */);\n                            prevPage.setDrawingDensity(\"hard\" /* HARD */);\n                        }\n                    }\n                }\n            }\n            this.render.setDirection(direction);\n            this.calc = new FlipCalculation(direction, flipCorner, rect.pageWidth.toString(10), // fix bug with type casting\n            rect.height.toString(10) // fix bug with type casting\n            );\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Perform calculations for the current page position. Pass data to render object\n     *\n     * @param {Point} pagePos - Touch Point Coordinates (relative active page)\n     */\n    do(pagePos) {\n        if (this.calc === null)\n            return; // Flipping process not started\n        if (this.calc.calc(pagePos)) {\n            // Perform calculations for a specific position\n            const progress = this.calc.getFlippingProgress();\n            this.bottomPage.setArea(this.calc.getBottomClipArea());\n            this.bottomPage.setPosition(this.calc.getBottomPagePosition());\n            this.bottomPage.setAngle(0);\n            this.bottomPage.setHardAngle(0);\n            this.flippingPage.setArea(this.calc.getFlippingClipArea());\n            this.flippingPage.setPosition(this.calc.getActiveCorner());\n            this.flippingPage.setAngle(this.calc.getAngle());\n            if (this.calc.getDirection() === 0 /* FORWARD */) {\n                this.flippingPage.setHardAngle((90 * (200 - progress * 2)) / 100);\n            }\n            else {\n                this.flippingPage.setHardAngle((-90 * (200 - progress * 2)) / 100);\n            }\n            this.render.setPageRect(this.calc.getRect());\n            this.render.setBottomPage(this.bottomPage);\n            this.render.setFlippingPage(this.flippingPage);\n            this.render.setShadowData(this.calc.getShadowStartPoint(), this.calc.getShadowAngle(), progress, this.calc.getDirection());\n        }\n    }\n    /**\n     * Turn to the specified page number (with animation)\n     *\n     * @param {number} page - New page number\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipToPage(page, corner) {\n        const current = this.app.getPageCollection().getCurrentSpreadIndex();\n        const next = this.app.getPageCollection().getSpreadIndexByPage(page);\n        try {\n            if (next > current) {\n                this.app.getPageCollection().setCurrentSpreadIndex(next - 1);\n                this.flipNext(corner);\n            }\n            if (next < current) {\n                this.app.getPageCollection().setCurrentSpreadIndex(next + 1);\n                this.flipPrev(corner);\n            }\n        }\n        catch (e) {\n            //\n        }\n    }\n    /**\n     * Turn to the next page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipNext(corner) {\n        this.flip({\n            x: this.render.getRect().left + this.render.getRect().pageWidth * 2 - 10,\n            y: corner === \"top\" /* TOP */ ? 1 : this.render.getRect().height - 2,\n        });\n    }\n    /**\n     * Turn to the prev page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipPrev(corner) {\n        this.flip({\n            x: 10,\n            y: corner === \"top\" /* TOP */ ? 1 : this.render.getRect().height - 2,\n        });\n    }\n    /**\n     * Called when the user has stopped flipping\n     */\n    stopMove() {\n        if (this.calc === null)\n            return;\n        const pos = this.calc.getPosition();\n        const rect = this.getBoundsRect();\n        const y = this.calc.getCorner() === \"bottom\" /* BOTTOM */ ? rect.height : 0;\n        if (pos.x <= 0)\n            this.animateFlippingTo(pos, { x: -rect.pageWidth, y }, true);\n        else\n            this.animateFlippingTo(pos, { x: rect.pageWidth, y }, false);\n    }\n    /**\n     * Fold the corners of the book when the mouse pointer is over them.\n     * Called when the mouse pointer is over the book without clicking\n     *\n     * @param globalPos\n     */\n    showCorner(globalPos) {\n        if (!this.checkState(\"read\" /* READ */, \"fold_corner\" /* FOLD_CORNER */))\n            return;\n        const rect = this.getBoundsRect();\n        const pageWidth = rect.pageWidth;\n        if (this.isPointOnCorners(globalPos)) {\n            if (this.calc === null) {\n                if (!this.start(globalPos))\n                    return;\n                this.setState(\"fold_corner\" /* FOLD_CORNER */);\n                this.calc.calc({ x: pageWidth - 1, y: 1 });\n                const fixedCornerSize = 50;\n                const yStart = this.calc.getCorner() === \"bottom\" /* BOTTOM */ ? rect.height - 1 : 1;\n                const yDest = this.calc.getCorner() === \"bottom\" /* BOTTOM */\n                    ? rect.height - fixedCornerSize\n                    : fixedCornerSize;\n                this.animateFlippingTo({ x: pageWidth - 1, y: yStart }, { x: pageWidth - fixedCornerSize, y: yDest }, false, false);\n            }\n            else {\n                this.do(this.render.convertToPage(globalPos));\n            }\n        }\n        else {\n            this.setState(\"read\" /* READ */);\n            this.render.finishAnimation();\n            this.stopMove();\n        }\n    }\n    /**\n     * Starting the flipping animation process\n     *\n     * @param {Point} start - animation start point\n     * @param {Point} dest - animation end point\n     * @param {boolean} isTurned - will the page turn over, or just bring it back\n     * @param {boolean} needReset - reset the flipping process at the end of the animation\n     */\n    animateFlippingTo(start, dest, isTurned, needReset = true) {\n        const points = Helper.GetCordsFromTwoPoint(start, dest);\n        // Create frames\n        const frames = [];\n        for (const p of points)\n            frames.push(() => this.do(p));\n        const duration = this.getAnimationDuration(points.length);\n        this.render.startAnimation(frames, duration, () => {\n            // callback function\n            if (!this.calc)\n                return;\n            if (isTurned) {\n                if (this.calc.getDirection() === 1 /* BACK */)\n                    this.app.turnToPrevPage();\n                else\n                    this.app.turnToNextPage();\n            }\n            if (needReset) {\n                this.render.setBottomPage(null);\n                this.render.setFlippingPage(null);\n                this.render.clearShadow();\n                this.setState(\"read\" /* READ */);\n                this.reset();\n            }\n        });\n    }\n    /**\n     * Get the current calculations object\n     */\n    getCalculation() {\n        return this.calc;\n    }\n    /**\n     * Get current flipping state\n     */\n    getState() {\n        return this.state;\n    }\n    setState(newState) {\n        if (this.state !== newState) {\n            this.app.updateState(newState);\n            this.state = newState;\n        }\n    }\n    getDirectionByPoint(touchPos) {\n        const rect = this.getBoundsRect();\n        if (this.render.getOrientation() === \"portrait\" /* PORTRAIT */) {\n            if (touchPos.x - rect.pageWidth <= rect.width / 5) {\n                return 1 /* BACK */;\n            }\n        }\n        else if (touchPos.x < rect.width / 2) {\n            return 1 /* BACK */;\n        }\n        return 0 /* FORWARD */;\n    }\n    getAnimationDuration(size) {\n        const defaultTime = this.app.getSettings().flippingTime;\n        if (size >= 1000)\n            return defaultTime;\n        return (size / 1000) * defaultTime;\n    }\n    checkDirection(direction) {\n        if (direction === 0 /* FORWARD */)\n            return this.app.getCurrentPageIndex() < this.app.getPageCount() - 1;\n        return this.app.getCurrentPageIndex() >= 1;\n    }\n    reset() {\n        this.calc = null;\n        this.flippingPage = null;\n        this.bottomPage = null;\n    }\n    getBoundsRect() {\n        return this.render.getRect();\n    }\n    checkState(...states) {\n        for (const state of states) {\n            if (this.state === state)\n                return true;\n        }\n        return false;\n    }\n    isPointOnCorners(globalPos) {\n        const rect = this.getBoundsRect();\n        const pageWidth = rect.pageWidth;\n        const operatingDistance = Math.sqrt(Math.pow(pageWidth, 2) + Math.pow(rect.height, 2)) / 5;\n        const bookPos = this.render.convertToBook(globalPos);\n        return (bookPos.x > 0 &&\n            bookPos.y > 0 &&\n            bookPos.x < rect.width &&\n            bookPos.y < rect.height &&\n            (bookPos.x < operatingDistance || bookPos.x > rect.width - operatingDistance) &&\n            (bookPos.y < operatingDistance || bookPos.y > rect.height - operatingDistance));\n    }\n}\n\n/**\n * Class responsible for rendering the book\n */\nclass Render {\n    constructor(app, setting) {\n        /** Left static book page */\n        this.leftPage = null;\n        /** Right static book page */\n        this.rightPage = null;\n        /** Page currently flipping */\n        this.flippingPage = null;\n        /** Next page at the time of flipping */\n        this.bottomPage = null;\n        /** Current flipping direction */\n        this.direction = null;\n        /** Current book orientation */\n        this.orientation = null;\n        /** Сurrent state of the shadows */\n        this.shadow = null;\n        /** Сurrent animation process */\n        this.animation = null;\n        /** Page borders while flipping */\n        this.pageRect = null;\n        /** Current book area */\n        this.boundsRect = null;\n        /** Timer started from start of rendering */\n        this.timer = 0;\n        /**\n         * Safari browser definitions for resolving a bug with a css property clip-area\n         *\n         * https://bugs.webkit.org/show_bug.cgi?id=126207\n         */\n        this.safari = false;\n        this.setting = setting;\n        this.app = app;\n        // detect safari\n        const regex = new RegExp('Version\\\\/[\\\\d\\\\.]+.*Safari/');\n        this.safari = regex.exec(window.navigator.userAgent) !== null;\n    }\n    /**\n     * Executed when requestAnimationFrame is called. Performs the current animation process and call drawFrame()\n     *\n     * @param timer\n     */\n    render(timer) {\n        if (this.animation !== null) {\n            // Find current frame of animation\n            const frameIndex = Math.round((timer - this.animation.startedAt) / this.animation.durationFrame);\n            if (frameIndex < this.animation.frames.length) {\n                this.animation.frames[frameIndex]();\n            }\n            else {\n                this.animation.onAnimateEnd();\n                this.animation = null;\n            }\n          }\n        this.timer = timer; // modified by ngx-extended-pdf-viewer\n        this.drawFrame(); // modified by ngx-extended-pdf-viewer\n    }\n    /**\n     * Running requestAnimationFrame, and rendering process\n     */\n    start() {\n        this.update();\n        const loop = (timer) => {\n            this.render(timer);\n            requestAnimationFrame(loop);\n        };\n        requestAnimationFrame(loop);\n    }\n    /**\n     * Start a new animation process\n     *\n     * @param {FrameAction[]} frames - Frame list\n     * @param {number} duration - total animation duration\n     * @param {AnimationSuccessAction} onAnimateEnd - Animation callback function\n     */\n    startAnimation(frames, duration, onAnimateEnd) {\n        this.finishAnimation(); // finish the previous animation process\n        this.animation = {\n            frames,\n            duration,\n            durationFrame: duration / frames.length,\n            onAnimateEnd,\n            startedAt: this.timer,\n        };\n    }\n    /**\n     * End the current animation process and call the callback\n     */\n    finishAnimation() {\n        if (this.animation !== null) {\n            this.animation.frames[this.animation.frames.length - 1]();\n            if (this.animation.onAnimateEnd !== null) {\n                this.animation.onAnimateEnd();\n            }\n        }\n        this.animation = null;\n    }\n    /**\n     * Recalculate the size of the displayed area, and update the page orientation\n     */\n    update() {\n        this.boundsRect = null;\n        const orientation = this.calculateBoundsRect();\n        if (this.orientation !== orientation) {\n            this.orientation = orientation;\n            this.app.updateOrientation(orientation);\n        }\n    }\n    /**\n     * Calculate the size and position of the book depending on the parent element and configuration parameters\n     */\n    calculateBoundsRect() {\n        let orientation = \"landscape\" /* LANDSCAPE */;\n        const blockWidth = this.getBlockWidth();\n        const middlePoint = {\n            x: blockWidth / 2,\n            y: this.getBlockHeight() / 2,\n        };\n        const ratio = this.setting.width / this.setting.height;\n        let pageWidth = this.setting.width;\n        let pageHeight = this.setting.height;\n        let left = middlePoint.x - pageWidth;\n        if (this.setting.size === \"stretch\" /* STRETCH */) {\n            if (blockWidth < this.setting.minWidth * 2 && this.app.getSettings().usePortrait)\n                orientation = \"portrait\" /* PORTRAIT */;\n            pageWidth =\n                orientation === \"portrait\" /* PORTRAIT */\n                    ? this.getBlockWidth()\n                    : this.getBlockWidth() / 2;\n            if (pageWidth > this.setting.maxWidth)\n                pageWidth = this.setting.maxWidth;\n            pageHeight = pageWidth / ratio;\n            if (pageHeight > this.getBlockHeight()) {\n                pageHeight = this.getBlockHeight();\n                pageWidth = pageHeight * ratio;\n            }\n            left =\n                orientation === \"portrait\" /* PORTRAIT */\n                    ? middlePoint.x - pageWidth / 2 - pageWidth\n                    : middlePoint.x - pageWidth;\n        }\n        else {\n            if (blockWidth < pageWidth * 2) {\n                if (this.app.getSettings().usePortrait) {\n                    orientation = \"portrait\" /* PORTRAIT */;\n                    left = middlePoint.x - pageWidth / 2 - pageWidth;\n                }\n            }\n        }\n        this.boundsRect = {\n            left,\n            top: middlePoint.y - pageHeight / 2,\n            width: pageWidth * 2,\n            height: pageHeight,\n            pageWidth: pageWidth,\n        };\n        return orientation;\n    }\n    /**\n     * Set the current parameters of the drop shadow\n     *\n     * @param {Point} pos - Shadow Position Start Point\n     * @param {number} angle - The angle of the shadows relative to the book\n     * @param {number} progress - Flipping progress in percent (0 - 100)\n     * @param {FlipDirection} direction - Flipping Direction, the direction of the shadow gradients\n     */\n    setShadowData(pos, angle, progress, direction) {\n        if (!this.app.getSettings().drawShadow)\n            return;\n        const maxShadowOpacity = 100 * this.getSettings().maxShadowOpacity;\n        this.shadow = {\n            pos,\n            angle,\n            width: (((this.getRect().pageWidth * 3) / 4) * progress) / 100,\n            opacity: ((100 - progress) * maxShadowOpacity) / 100 / 100,\n            direction,\n            progress: progress * 2,\n        };\n    }\n    /**\n     * Clear shadow\n     */\n    clearShadow() {\n        this.shadow = null;\n    }\n    /**\n     * Get parent block offset width\n     */\n    getBlockWidth() {\n        return this.app.getUI().getDistElement().offsetWidth;\n    }\n    /**\n     * Get parent block offset height\n     */\n    getBlockHeight() {\n        return this.app.getUI().getDistElement().offsetHeight;\n    }\n    /**\n     * Get current flipping direction\n     */\n    getDirection() {\n        return this.direction;\n    }\n    /**\n     * Сurrent size and position of the book\n     */\n    getRect() {\n        if (this.boundsRect === null)\n            this.calculateBoundsRect();\n        return this.boundsRect;\n    }\n    /**\n     * Get configuration object\n     */\n    getSettings() {\n        return this.app.getSettings();\n    }\n    /**\n     * Get current book orientation\n     */\n    getOrientation() {\n        return this.orientation;\n    }\n    /**\n     * Set page area while flipping\n     *\n     * @param direction\n     */\n    setPageRect(pageRect) {\n        this.pageRect = pageRect;\n    }\n    /**\n     * Set flipping direction\n     *\n     * @param direction\n     */\n    setDirection(direction) {\n        this.direction = direction;\n    }\n    /**\n     * Set right static book page\n     *\n     * @param page\n     */\n    setRightPage(page) {\n        if (page !== null)\n            page.setOrientation(1 /* RIGHT */);\n        this.rightPage = page;\n    }\n    /**\n     * Set left static book page\n     * @param page\n     */\n    setLeftPage(page) {\n        if (page !== null)\n            page.setOrientation(0 /* LEFT */);\n        this.leftPage = page;\n    }\n    /**\n     * Set next page at the time of flipping\n     * @param page\n     */\n    setBottomPage(page) {\n        if (page !== null)\n            page.setOrientation(this.direction === 1 /* BACK */ ? 0 /* LEFT */ : 1 /* RIGHT */);\n        this.bottomPage = page;\n    }\n    /**\n     * Set currently flipping page\n     *\n     * @param page\n     */\n    setFlippingPage(page) {\n        if (page !== null)\n            page.setOrientation(this.direction === 0 /* FORWARD */ &&\n                this.orientation !== \"portrait\" /* PORTRAIT */\n                ? 0 /* LEFT */\n                : 1 /* RIGHT */);\n        this.flippingPage = page;\n    }\n    /**\n     * Coordinate conversion function. Window coordinates -> to book coordinates\n     *\n     * @param {Point} pos - Global coordinates relative to the window\n     * @returns {Point} Coordinates relative to the book\n     */\n    convertToBook(pos) {\n        const rect = this.getRect();\n        return {\n            x: pos.x - rect.left,\n            y: pos.y - rect.top,\n        };\n    }\n    isSafari() {\n        return this.safari;\n    }\n    /**\n     * Coordinate conversion function. Window coordinates -> to current coordinates of the working page\n     *\n     * @param {Point} pos - Global coordinates relative to the window\n     * @param {FlipDirection} direction  - Current flipping direction\n     *\n     * @returns {Point} Coordinates relative to the work page\n     */\n    convertToPage(pos, direction) {\n        if (!direction)\n            direction = this.direction;\n        const rect = this.getRect();\n        const x = direction === 0 /* FORWARD */\n            ? pos.x - rect.left - rect.width / 2\n            : rect.width / 2 - pos.x + rect.left;\n        return {\n            x,\n            y: pos.y - rect.top,\n        };\n    }\n    /**\n     * Coordinate conversion function. Coordinates relative to the work page -> Window coordinates\n     *\n     * @param {Point} pos - Coordinates relative to the work page\n     * @param {FlipDirection} direction  - Current flipping direction\n     *\n     * @returns {Point} Global coordinates relative to the window\n     */\n    convertToGlobal(pos, direction) {\n        if (!direction)\n            direction = this.direction;\n        if (pos == null)\n            return null;\n        const rect = this.getRect();\n        const x = direction === 0 /* FORWARD */\n            ? pos.x + rect.left + rect.width / 2\n            : rect.width / 2 - pos.x + rect.left;\n        return {\n            x,\n            y: pos.y + rect.top,\n        };\n    }\n    /**\n     * Casting the coordinates of the corners of the rectangle in the coordinates relative to the window\n     *\n     * @param {RectPoints} rect - Coordinates of the corners of the rectangle relative to the work page\n     * @param {FlipDirection} direction  - Current flipping direction\n     *\n     * @returns {RectPoints} Coordinates of the corners of the rectangle relative to the window\n     */\n    convertRectToGlobal(rect, direction) {\n        if (!direction)\n            direction = this.direction;\n        return {\n            topLeft: this.convertToGlobal(rect.topLeft, direction),\n            topRight: this.convertToGlobal(rect.topRight, direction),\n            bottomLeft: this.convertToGlobal(rect.bottomLeft, direction),\n            bottomRight: this.convertToGlobal(rect.bottomRight, direction),\n        };\n    }\n}\n\n/**\n * Class responsible for rendering the Canvas book\n */\nclass CanvasRender extends Render {\n    constructor(app, setting, inCanvas) {\n        super(app, setting);\n        this.canvas = inCanvas;\n        this.ctx = inCanvas.getContext('2d');\n    }\n    getContext() {\n        return this.ctx;\n    }\n    reload() {\n        //\n    }\n    drawFrame() {\n        this.clear();\n        if (this.orientation !== \"portrait\" /* PORTRAIT */)\n            if (this.leftPage != null)\n                this.leftPage.simpleDraw(0 /* LEFT */);\n        if (this.rightPage != null)\n            this.rightPage.simpleDraw(1 /* RIGHT */);\n        if (this.bottomPage != null)\n            this.bottomPage.draw();\n        this.drawBookShadow();\n        if (this.flippingPage != null)\n            this.flippingPage.draw();\n        if (this.shadow != null) {\n            this.drawOuterShadow();\n            this.drawInnerShadow();\n        }\n        const rect = this.getRect();\n        if (this.orientation === \"portrait\" /* PORTRAIT */) {\n            this.ctx.beginPath();\n            this.ctx.rect(rect.left + rect.pageWidth, rect.top, rect.width, rect.height);\n            this.ctx.clip();\n        }\n    }\n    drawBookShadow() {\n        const rect = this.getRect();\n        this.ctx.save();\n        this.ctx.beginPath();\n        const shadowSize = rect.width / 20;\n        this.ctx.rect(rect.left, rect.top, rect.width, rect.height);\n        const shadowPos = { x: rect.left + rect.width / 2 - shadowSize / 2, y: 0 };\n        this.ctx.translate(shadowPos.x, shadowPos.y);\n        const outerGradient = this.ctx.createLinearGradient(0, 0, shadowSize, 0);\n        outerGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n        outerGradient.addColorStop(0.4, 'rgba(0, 0, 0, 0.2)');\n        outerGradient.addColorStop(0.49, 'rgba(0, 0, 0, 0.1)');\n        outerGradient.addColorStop(0.5, 'rgba(0, 0, 0, 0.5)');\n        outerGradient.addColorStop(0.51, 'rgba(0, 0, 0, 0.4)');\n        outerGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n        this.ctx.clip();\n        this.ctx.fillStyle = outerGradient;\n        this.ctx.fillRect(0, 0, shadowSize, rect.height * 2);\n        this.ctx.restore();\n    }\n    drawOuterShadow() {\n        const rect = this.getRect();\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.rect(rect.left, rect.top, rect.width, rect.height);\n        const shadowPos = this.convertToGlobal({ x: this.shadow.pos.x, y: this.shadow.pos.y });\n        this.ctx.translate(shadowPos.x, shadowPos.y);\n        this.ctx.rotate(Math.PI + this.shadow.angle + Math.PI / 2);\n        const outerGradient = this.ctx.createLinearGradient(0, 0, this.shadow.width, 0);\n        if (this.shadow.direction === 0 /* FORWARD */) {\n            this.ctx.translate(0, -100);\n            outerGradient.addColorStop(0, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            outerGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n        }\n        else {\n            this.ctx.translate(-this.shadow.width, -100);\n            outerGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n            outerGradient.addColorStop(1, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n        }\n        this.ctx.clip();\n        this.ctx.fillStyle = outerGradient;\n        this.ctx.fillRect(0, 0, this.shadow.width, rect.height * 2);\n        this.ctx.restore();\n    }\n    drawInnerShadow() {\n        const rect = this.getRect();\n        this.ctx.save();\n        this.ctx.beginPath();\n        const shadowPos = this.convertToGlobal({ x: this.shadow.pos.x, y: this.shadow.pos.y });\n        const pageRect = this.convertRectToGlobal(this.pageRect);\n        this.ctx.moveTo(pageRect.topLeft.x, pageRect.topLeft.y);\n        this.ctx.lineTo(pageRect.topRight.x, pageRect.topRight.y);\n        this.ctx.lineTo(pageRect.bottomRight.x, pageRect.bottomRight.y);\n        this.ctx.lineTo(pageRect.bottomLeft.x, pageRect.bottomLeft.y);\n        this.ctx.translate(shadowPos.x, shadowPos.y);\n        this.ctx.rotate(Math.PI + this.shadow.angle + Math.PI / 2);\n        const isw = (this.shadow.width * 3) / 4;\n        const innerGradient = this.ctx.createLinearGradient(0, 0, isw, 0);\n        if (this.shadow.direction === 0 /* FORWARD */) {\n            this.ctx.translate(-isw, -100);\n            innerGradient.addColorStop(1, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(0.9, 'rgba(0, 0, 0, 0.05)');\n            innerGradient.addColorStop(0.7, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n        }\n        else {\n            this.ctx.translate(0, -100);\n            innerGradient.addColorStop(0, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(0.1, 'rgba(0, 0, 0, 0.05)');\n            innerGradient.addColorStop(0.3, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n        }\n        this.ctx.clip();\n        this.ctx.fillStyle = innerGradient;\n        this.ctx.fillRect(0, 0, isw, rect.height * 2);\n        this.ctx.restore();\n    }\n    clear() {\n        this.ctx.fillStyle = 'white';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n}\n\n/**\n * UI Class, represents work with DOM\n */\nclass UI {\n    /**\n     * @constructor\n     *\n     * @param {HTMLElement} inBlock - Root HTML Element\n     * @param {PageFlip} app - PageFlip instanse\n     * @param {FlipSetting} setting - Configuration object\n     */\n    constructor(inBlock, app, setting) {\n        this.touchPoint = null;\n        this.swipeTimeout = 250;\n        this.onResize = () => {\n            this.update();\n        };\n        this.onMouseDown = (e) => {\n            if (this.checkTarget(e.target)) {\n                const pos = this.getMousePos(e.clientX, e.clientY);\n                this.app.startUserTouch(pos);\n                e.preventDefault();\n            }\n        };\n        this.onTouchStart = (e) => {\n            if (this.checkTarget(e.target)) {\n                if (e.changedTouches.length > 0) {\n                    const t = e.changedTouches[0];\n                    const pos = this.getMousePos(t.clientX, t.clientY);\n                    this.touchPoint = {\n                        point: pos,\n                        time: Date.now(),\n                    };\n                    // part of swipe detection\n                    setTimeout(() => {\n                        if (this.touchPoint !== null) {\n                            this.app.startUserTouch(pos);\n                        }\n                    }, this.swipeTimeout);\n                    if (!this.app.getSettings().mobileScrollSupport)\n                        e.preventDefault();\n                }\n            }\n        };\n        this.onMouseUp = (e) => {\n            const pos = this.getMousePos(e.clientX, e.clientY);\n            this.app.userStop(pos);\n        };\n        this.onMouseMove = (e) => {\n            const pos = this.getMousePos(e.clientX, e.clientY);\n            this.app.userMove(pos, false);\n        };\n        this.onTouchMove = (e) => {\n            if (e.changedTouches.length > 0) {\n                const t = e.changedTouches[0];\n                const pos = this.getMousePos(t.clientX, t.clientY);\n                if (this.app.getSettings().mobileScrollSupport) {\n                    if (this.touchPoint !== null) {\n                        if (Math.abs(this.touchPoint.point.x - pos.x) > 10 ||\n                            this.app.getState() !== \"read\" /* READ */) {\n                            if (e.cancelable)\n                                this.app.userMove(pos, true);\n                        }\n                    }\n                    if (this.app.getState() !== \"read\" /* READ */) {\n                        e.preventDefault();\n                    }\n                }\n                else {\n                    this.app.userMove(pos, true);\n                }\n            }\n        };\n        this.onTouchEnd = (e) => {\n            if (e.changedTouches.length > 0) {\n                const t = e.changedTouches[0];\n                const pos = this.getMousePos(t.clientX, t.clientY);\n                let isSwipe = false;\n                // swipe detection\n                if (this.touchPoint !== null) {\n                    const dx = pos.x - this.touchPoint.point.x;\n                    const distY = Math.abs(pos.y - this.touchPoint.point.y);\n                    if (Math.abs(dx) > this.swipeDistance &&\n                        distY < this.swipeDistance * 2 &&\n                        Date.now() - this.touchPoint.time < this.swipeTimeout) {\n                        if (dx > 0) {\n                            this.app.flipPrev(this.touchPoint.point.y < this.app.getRender().getRect().height / 2\n                                ? \"top\" /* TOP */\n                                : \"bottom\" /* BOTTOM */);\n                        }\n                        else {\n                            this.app.flipNext(this.touchPoint.point.y < this.app.getRender().getRect().height / 2\n                                ? \"top\" /* TOP */\n                                : \"bottom\" /* BOTTOM */);\n                        }\n                        isSwipe = true;\n                    }\n                    this.touchPoint = null;\n                }\n                this.app.userStop(pos, isSwipe);\n            }\n        };\n        this.parentElement = inBlock;\n        inBlock.classList.add('stf__parent');\n        // Add first wrapper\n        inBlock.insertAdjacentHTML('afterbegin', '<div class=\"stf__wrapper\"></div>');\n        this.wrapper = inBlock.querySelector('.stf__wrapper');\n        this.app = app;\n        const k = this.app.getSettings().usePortrait ? 1 : 2;\n        // Setting block sizes based on configuration\n        inBlock.style.minWidth = setting.minWidth * k + 'px';\n        inBlock.style.minHeight = setting.minHeight + 'px';\n        if (setting.size === \"fixed\" /* FIXED */) {\n            inBlock.style.minWidth = setting.width * k + 'px';\n            inBlock.style.minHeight = setting.height + 'px';\n        }\n        if (setting.autoSize) {\n            inBlock.style.width = '100%';\n            inBlock.style.maxWidth = setting.maxWidth * 2 + 'px';\n        }\n        inBlock.style.display = 'block';\n        window.addEventListener('resize', this.onResize, false);\n        this.swipeDistance = setting.swipeDistance;\n    }\n    /**\n     * Destructor. Remove all HTML elements and all event handlers\n     */\n    destroy() {\n        if (this.app.getSettings().useMouseEvents)\n            this.removeHandlers();\n        this.distElement.remove();\n        this.wrapper.remove();\n    }\n    /**\n     * Get parent element for book\n     *\n     * @returns {HTMLElement}\n     */\n    getDistElement() {\n        return this.distElement;\n    }\n    /**\n     * Get wrapper element\n     *\n     * @returns {HTMLElement}\n     */\n    getWrapper() {\n        return this.wrapper;\n    }\n    /**\n     * Updates styles and sizes based on book orientation\n     *\n     * @param {Orientation} orientation - New book orientation\n     */\n    setOrientationStyle(orientation) {\n        this.wrapper.classList.remove('--portrait', '--landscape');\n        if (orientation === \"portrait\" /* PORTRAIT */) {\n            if (this.app.getSettings().autoSize)\n                this.wrapper.style.paddingBottom =\n                    (this.app.getSettings().height / this.app.getSettings().width) * 100 + '%';\n            this.wrapper.classList.add('--portrait');\n        }\n        else {\n            if (this.app.getSettings().autoSize)\n                this.wrapper.style.paddingBottom =\n                    (this.app.getSettings().height / (this.app.getSettings().width * 2)) * 100 +\n                        '%';\n            this.wrapper.classList.add('--landscape');\n        }\n        this.update();\n    }\n    removeHandlers() {\n        window.removeEventListener('resize', this.onResize);\n        this.distElement.removeEventListener('mousedown', this.onMouseDown);\n        this.distElement.removeEventListener('touchstart', this.onTouchStart);\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('touchmove', this.onTouchMove);\n        window.removeEventListener('mouseup', this.onMouseUp);\n        window.removeEventListener('touchend', this.onTouchEnd);\n    }\n    setHandlers() {\n        window.addEventListener('resize', this.onResize, false);\n        if (!this.app.getSettings().useMouseEvents)\n            return;\n        this.distElement.addEventListener('mousedown', this.onMouseDown);\n        this.distElement.addEventListener('touchstart', this.onTouchStart);\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('touchmove', this.onTouchMove, {\n            passive: !this.app.getSettings().mobileScrollSupport,\n        });\n        window.addEventListener('mouseup', this.onMouseUp);\n        window.addEventListener('touchend', this.onTouchEnd);\n    }\n    /**\n     * Convert global coordinates to relative book coordinates\n     *\n     * @param x\n     * @param y\n     */\n    getMousePos(x, y) {\n        const rect = this.distElement.getBoundingClientRect();\n        return {\n            x: x - rect.left,\n            y: y - rect.top,\n        };\n    }\n    checkTarget(targer) {\n        if (!this.app.getSettings().clickEventForward)\n            return true;\n        if (['a', 'button'].includes(targer.tagName.toLowerCase())) {\n            return false;\n        }\n        return true;\n    }\n}\n\n/**\n * UI for HTML mode\n */\nclass HTMLUI extends UI {\n    constructor(inBlock, app, setting, items) {\n        super(inBlock, app, setting);\n        // Second wrapper to HTML page\n        this.wrapper.insertAdjacentHTML('afterbegin', '<div class=\"stf__block\"></div>');\n        this.distElement = inBlock.querySelector('.stf__block');\n        this.items = items;\n        for (const item of items) {\n            this.distElement.appendChild(item);\n        }\n        this.setHandlers();\n    }\n    clear() {\n        for (const item of this.items) {\n            this.parentElement.appendChild(item);\n        }\n    }\n    /**\n     * Update page list from HTMLElements\n     *\n     * @param {(NodeListOf<HTMLElement>|HTMLElement[])} items - List of pages as HTML Element\n     */\n    updateItems(items) {\n        this.removeHandlers();\n        this.distElement.innerHTML = '';\n        for (const item of items) {\n            this.distElement.appendChild(item);\n        }\n        this.items = items;\n        this.setHandlers();\n    }\n    update() {\n        this.app.getRender().update();\n    }\n}\n\n/**\n * UI for canvas mode\n */\nclass CanvasUI extends UI {\n    constructor(inBlock, app, setting) {\n        super(inBlock, app, setting);\n        this.wrapper.innerHTML = '<canvas class=\"stf__canvas\"></canvas>';\n        this.canvas = inBlock.querySelectorAll('canvas')[0];\n        this.distElement = this.canvas;\n        this.resizeCanvas();\n        this.setHandlers();\n    }\n    resizeCanvas() {\n        const cs = getComputedStyle(this.canvas);\n        const width = parseInt(cs.getPropertyValue('width'), 10);\n        const height = parseInt(cs.getPropertyValue('height'), 10);\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n    /**\n     * Get canvas element\n     */\n    getCanvas() {\n        return this.canvas;\n    }\n    update() {\n        this.resizeCanvas();\n        this.app.getRender().update();\n    }\n}\n\n/**\n * A class implementing a basic event model\n */\nclass EventObject {\n    constructor() {\n        this.events = new Map();\n    }\n    /**\n     * Add new event handler\n     *\n     * @param {string} eventName\n     * @param {EventCallback} callback\n     */\n    on(eventName, callback) {\n        if (!this.events.has(eventName)) {\n            this.events.set(eventName, [callback]);\n        }\n        else {\n            this.events.get(eventName).push(callback);\n        }\n        return this;\n    }\n    /**\n     * Removing all handlers from an event\n     *\n     * @param {string} event - Event name\n     */\n    off(event) {\n        this.events.delete(event);\n    }\n    trigger(eventName, app, data = null) {\n        if (!this.events.has(eventName))\n            return;\n        for (const callback of this.events.get(eventName)) {\n            callback({ data, object: app });\n        }\n    }\n}\n\n/**\n * Class responsible for rendering the HTML book\n */\nclass HTMLRender extends Render {\n    /**\n     * @constructor\n     *\n     * @param {PageFlip} app - PageFlip object\n     * @param {FlipSetting} setting - Configuration object\n     * @param {HTMLElement} element - Parent HTML Element\n     */\n    constructor(app, setting, element) {\n        super(app, setting);\n        this.outerShadow = null;\n        this.innerShadow = null;\n        this.hardShadow = null;\n        this.hardInnerShadow = null;\n        this.element = element;\n        this.createShadows();\n    }\n    createShadows() {\n        this.element.insertAdjacentHTML('beforeend', `<div class=\"stf__outerShadow\"></div>\n             <div class=\"stf__innerShadow\"></div>\n             <div class=\"stf__hardShadow\"></div>\n             <div class=\"stf__hardInnerShadow\"></div>`);\n        this.outerShadow = this.element.querySelector('.stf__outerShadow');\n        this.innerShadow = this.element.querySelector('.stf__innerShadow');\n        this.hardShadow = this.element.querySelector('.stf__hardShadow');\n        this.hardInnerShadow = this.element.querySelector('.stf__hardInnerShadow');\n    }\n    clearShadow() {\n        super.clearShadow();\n        this.outerShadow.style.cssText = 'display: none';\n        this.innerShadow.style.cssText = 'display: none';\n        this.hardShadow.style.cssText = 'display: none';\n        this.hardInnerShadow.style.cssText = 'display: none';\n    }\n    reload() {\n        const testShadow = this.element.querySelector('.stf__outerShadow');\n        if (!testShadow) {\n            this.createShadows();\n        }\n    }\n    /**\n     * Draw inner shadow to the hard page\n     */\n    drawHardInnerShadow() {\n        const rect = this.getRect();\n        const progress = this.shadow.progress > 100 ? 200 - this.shadow.progress : this.shadow.progress;\n        let innerShadowSize = ((100 - progress) * (2.5 * rect.pageWidth)) / 100 + 20;\n        if (innerShadowSize > rect.pageWidth)\n            innerShadowSize = rect.pageWidth;\n        let newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 5).toString(10)};\n            width: ${innerShadowSize}px;\n            height: ${rect.height}px;\n            background: linear-gradient(to right,\n                rgba(0, 0, 0, ${(this.shadow.opacity * progress) / 100}) 5%,\n                rgba(0, 0, 0, 0) 100%);\n            left: ${rect.left + rect.width / 2}px;\n            transform-origin: 0 0;\n        `;\n        newStyle +=\n            (this.getDirection() === 0 /* FORWARD */ && this.shadow.progress > 100) ||\n                (this.getDirection() === 1 /* BACK */ && this.shadow.progress <= 100)\n                ? `transform: translate3d(0, 0, 0);`\n                : `transform: translate3d(0, 0, 0) rotateY(180deg);`;\n        this.hardInnerShadow.style.cssText = newStyle;\n    }\n    /**\n     * Draw outer shadow to the hard page\n     */\n    drawHardOuterShadow() {\n        const rect = this.getRect();\n        const progress = this.shadow.progress > 100 ? 200 - this.shadow.progress : this.shadow.progress;\n        let shadowSize = ((100 - progress) * (2.5 * rect.pageWidth)) / 100 + 20;\n        if (shadowSize > rect.pageWidth)\n            shadowSize = rect.pageWidth;\n        let newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 4).toString(10)};\n            width: ${shadowSize}px;\n            height: ${rect.height}px;\n            background: linear-gradient(to left, rgba(0, 0, 0, ${this.shadow.opacity}) 5%, rgba(0, 0, 0, 0) 100%);\n            left: ${rect.left + rect.width / 2}px;\n            transform-origin: 0 0;\n        `;\n        newStyle +=\n            (this.getDirection() === 0 /* FORWARD */ && this.shadow.progress > 100) ||\n                (this.getDirection() === 1 /* BACK */ && this.shadow.progress <= 100)\n                ? `transform: translate3d(0, 0, 0) rotateY(180deg);`\n                : `transform: translate3d(0, 0, 0);`;\n        this.hardShadow.style.cssText = newStyle;\n    }\n    /**\n     * Draw inner shadow to the soft page\n     */\n    drawInnerShadow() {\n        const rect = this.getRect();\n        const innerShadowSize = (this.shadow.width * 3) / 4;\n        const shadowTranslate = this.getDirection() === 0 /* FORWARD */ ? innerShadowSize : 0;\n        const shadowDirection = this.getDirection() === 0 /* FORWARD */ ? 'to left' : 'to right';\n        const shadowPos = this.convertToGlobal(this.shadow.pos);\n        const angle = this.shadow.angle + (3 * Math.PI) / 2;\n        const clip = [\n            this.pageRect.topLeft,\n            this.pageRect.topRight,\n            this.pageRect.bottomRight,\n            this.pageRect.bottomLeft,\n        ];\n        let polygon = 'polygon( ';\n        for (const p of clip) {\n            let g = this.getDirection() === 1 /* BACK */\n                ? {\n                    x: -p.x + this.shadow.pos.x,\n                    y: p.y - this.shadow.pos.y,\n                }\n                : {\n                    x: p.x - this.shadow.pos.x,\n                    y: p.y - this.shadow.pos.y,\n                };\n            g = Helper.GetRotatedPoint(g, { x: shadowTranslate, y: 100 }, angle);\n            polygon += g.x + 'px ' + g.y + 'px, ';\n        }\n        polygon = polygon.slice(0, -2);\n        polygon += ')';\n        const newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 10).toString(10)};\n            width: ${innerShadowSize}px;\n            height: ${rect.height * 2}px;\n            background: linear-gradient(${shadowDirection},\n                rgba(0, 0, 0, ${this.shadow.opacity}) 5%,\n                rgba(0, 0, 0, 0.05) 15%,\n                rgba(0, 0, 0, ${this.shadow.opacity}) 35%,\n                rgba(0, 0, 0, 0) 100%);\n            transform-origin: ${shadowTranslate}px 100px;\n            transform: translate3d(${shadowPos.x - shadowTranslate}px, ${shadowPos.y - 100}px, 0) rotate(${angle}rad);\n            clip-path: ${polygon};\n            -webkit-clip-path: ${polygon};\n        `;\n        this.innerShadow.style.cssText = newStyle;\n    }\n    /**\n     * Draw outer shadow to the soft page\n     */\n    drawOuterShadow() {\n        const rect = this.getRect();\n        const shadowPos = this.convertToGlobal({ x: this.shadow.pos.x, y: this.shadow.pos.y });\n        const angle = this.shadow.angle + (3 * Math.PI) / 2;\n        const shadowTranslate = this.getDirection() === 1 /* BACK */ ? this.shadow.width : 0;\n        const shadowDirection = this.getDirection() === 0 /* FORWARD */ ? 'to right' : 'to left';\n        const clip = [\n            { x: 0, y: 0 },\n            { x: rect.pageWidth, y: 0 },\n            { x: rect.pageWidth, y: rect.height },\n            { x: 0, y: rect.height },\n        ];\n        let polygon = 'polygon( ';\n        for (const p of clip) {\n            if (p !== null) {\n                let g = this.getDirection() === 1 /* BACK */\n                    ? {\n                        x: -p.x + this.shadow.pos.x,\n                        y: p.y - this.shadow.pos.y,\n                    }\n                    : {\n                        x: p.x - this.shadow.pos.x,\n                        y: p.y - this.shadow.pos.y,\n                    };\n                g = Helper.GetRotatedPoint(g, { x: shadowTranslate, y: 100 }, angle);\n                polygon += g.x + 'px ' + g.y + 'px, ';\n            }\n        }\n        polygon = polygon.slice(0, -2);\n        polygon += ')';\n        const newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 10).toString(10)};\n            width: ${this.shadow.width}px;\n            height: ${rect.height * 2}px;\n            background: linear-gradient(${shadowDirection}, rgba(0, 0, 0, ${this.shadow.opacity}), rgba(0, 0, 0, 0));\n            transform-origin: ${shadowTranslate}px 100px;\n            transform: translate3d(${shadowPos.x - shadowTranslate}px, ${shadowPos.y - 100}px, 0) rotate(${angle}rad);\n            clip-path: ${polygon};\n            -webkit-clip-path: ${polygon};\n        `;\n        this.outerShadow.style.cssText = newStyle;\n    }\n    /**\n     * Draw left static page\n     */\n    drawLeftPage() {\n        if (this.orientation === \"portrait\" /* PORTRAIT */ || this.leftPage === null)\n            return;\n        if (this.direction === 1 /* BACK */ &&\n            this.flippingPage !== null &&\n            this.flippingPage.getDrawingDensity() === \"hard\" /* HARD */) {\n            this.leftPage.getElement().style.zIndex = (this.getSettings().startZIndex + 5).toString(10);\n            this.leftPage.setHardDrawingAngle(180 + this.flippingPage.getHardAngle());\n            this.leftPage.draw(this.flippingPage.getDrawingDensity());\n        }\n        else {\n            this.leftPage.simpleDraw(0 /* LEFT */);\n        }\n    }\n    /**\n     * Draw right static page\n     */\n    drawRightPage() {\n        if (this.rightPage === null)\n            return;\n        if (this.direction === 0 /* FORWARD */ &&\n            this.flippingPage !== null &&\n            this.flippingPage.getDrawingDensity() === \"hard\" /* HARD */) {\n            this.rightPage.getElement().style.zIndex = (this.getSettings().startZIndex + 5).toString(10);\n            this.rightPage.setHardDrawingAngle(180 + this.flippingPage.getHardAngle());\n            this.rightPage.draw(this.flippingPage.getDrawingDensity());\n        }\n        else {\n            this.rightPage.simpleDraw(1 /* RIGHT */);\n        }\n    }\n    /**\n     * Draw the next page at the time of flipping\n     */\n    drawBottomPage() {\n        if (this.bottomPage === null)\n            return;\n        const tempDensity = this.flippingPage != null ? this.flippingPage.getDrawingDensity() : null;\n        if (!(this.orientation === \"portrait\" /* PORTRAIT */ && this.direction === 1 /* BACK */)) {\n            this.bottomPage.getElement().style.zIndex = (this.getSettings().startZIndex + 3).toString(10);\n            this.bottomPage.draw(tempDensity);\n        }\n    }\n    drawFrame() {\n        this.clear();\n        this.drawLeftPage();\n        this.drawRightPage();\n        this.drawBottomPage();\n        if (this.flippingPage != null) {\n            this.flippingPage.getElement().style.zIndex = (this.getSettings().startZIndex + 5).toString(10);\n            this.flippingPage.draw();\n        }\n        if (this.shadow != null && this.flippingPage !== null) {\n            if (this.flippingPage.getDrawingDensity() === \"soft\" /* SOFT */) {\n                this.drawOuterShadow();\n                this.drawInnerShadow();\n            }\n            else {\n                this.drawHardOuterShadow();\n                this.drawHardInnerShadow();\n            }\n        }\n    }\n    clear() {\n        for (const page of this.app.getPageCollection().getPages()) {\n            if (page !== this.leftPage &&\n                page !== this.rightPage &&\n                page !== this.flippingPage &&\n                page !== this.bottomPage) {\n                page.getElement().style.cssText = 'display: none';\n            }\n            if (page.getTemporaryCopy() !== this.flippingPage) {\n                page.hideTemporaryCopy();\n            }\n        }\n    }\n    update() {\n        super.update();\n        if (this.rightPage !== null) {\n            this.rightPage.setOrientation(1 /* RIGHT */);\n        }\n        if (this.leftPage !== null) {\n            this.leftPage.setOrientation(0 /* LEFT */);\n        }\n    }\n}\n\nclass Settings {\n    constructor() {\n        this._default = {\n            startPage: 0,\n            size: \"fixed\" /* FIXED */,\n            width: 0,\n            height: 0,\n            minWidth: 0,\n            maxWidth: 0,\n            minHeight: 0,\n            maxHeight: 0,\n            drawShadow: true,\n            flippingTime: 1000,\n            usePortrait: true,\n            startZIndex: 0,\n            autoSize: true,\n            maxShadowOpacity: 1,\n            showCover: false,\n            mobileScrollSupport: true,\n            swipeDistance: 30,\n            clickEventForward: true,\n            useMouseEvents: true,\n            showPageCorners: true,\n            disableFlipByClick: false,\n        };\n    }\n    /**\n     * Processing parameters received from the user. Substitution default values\n     *\n     * @param userSetting\n     * @returns {FlipSetting} Сonfiguration object\n     */\n    getSettings(userSetting) {\n        const result = this._default;\n        Object.assign(result, userSetting);\n        if (result.size !== \"stretch\" /* STRETCH */ && result.size !== \"fixed\" /* FIXED */)\n            throw new Error('Invalid size type. Available only \"fixed\" and \"stretch\" value');\n        if (result.width <= 0 || result.height <= 0)\n            throw new Error('Invalid width or height');\n        if (result.flippingTime <= 0)\n            throw new Error('Invalid flipping time');\n        if (result.size === \"stretch\" /* STRETCH */) {\n            if (result.minWidth <= 0)\n                result.minWidth = 100;\n            if (result.maxWidth < result.minWidth)\n                result.maxWidth = 2000;\n            if (result.minHeight <= 0)\n                result.minHeight = 100;\n            if (result.maxHeight < result.minHeight)\n                result.maxHeight = 2000;\n        }\n        else {\n            result.minWidth = result.width;\n            result.maxWidth = result.width;\n            result.minHeight = result.height;\n            result.maxHeight = result.height;\n        }\n        return result;\n    }\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".stf__parent {\\n  position: relative;\\n  display: block;\\n  box-sizing: border-box;\\n  transform: translateZ(0);\\n\\n  -ms-touch-action: pan-y;\\n  touch-action: pan-y;\\n}\\n\\n.sft__wrapper {\\n  position: relative;\\n  width: 100%;\\n  box-sizing: border-box;\\n}\\n\\n.stf__parent canvas {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.stf__block {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  box-sizing: border-box;\\n  perspective: 2000px;\\n}\\n\\n.stf__item {\\n  display: none;\\n  position: absolute;\\n  transform-style: preserve-3d;\\n}\\n\\n.stf__outerShadow {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.stf__innerShadow {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.stf__hardShadow {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.stf__hardInnerShadow {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\";\nstyleInject(css_248z);\n\n/**\n * Class representing a main PageFlip object\n *\n * @extends EventObject\n */\nclass PageFlip extends EventObject {\n    /**\n     * Create a new PageFlip instance\n     *\n     * @constructor\n     * @param {HTMLElement} inBlock - Root HTML Element\n     * @param {Object} setting - Configuration object\n     */\n    constructor(inBlock, setting) {\n        super();\n        this.isUserTouch = false;\n        this.isUserMove = false;\n        this.setting = null;\n        this.pages = null;\n        this.setting = new Settings().getSettings(setting);\n        this.block = inBlock;\n    }\n    /**\n     * Destructor. Remove a root HTML element and all event handlers\n     */\n    destroy() {\n        this.ui.destroy();\n        this.block.remove();\n    }\n    /**\n     * Update the render area. Re-show current page.\n     */\n    update() {\n        this.render.update();\n        this.pages.show();\n    }\n    /**\n     * Load pages from images on the Canvas mode\n     *\n     * @param {string[]} imagesHref - List of paths to images\n     */\n    loadFromImages(imagesHref) {\n        this.ui = new CanvasUI(this.block, this, this.setting);\n        const canvas = this.ui.getCanvas();\n        this.render = new CanvasRender(this, this.setting, canvas);\n        this.flipController = new Flip(this.render, this);\n        this.pages = new ImagePageCollection(this, this.render, imagesHref);\n        this.pages.load();\n        this.render.start();\n        this.pages.show(this.setting.startPage);\n        // safari fix\n        setTimeout(() => {\n            this.ui.update();\n            this.trigger('init', this, {\n                page: this.setting.startPage,\n                mode: this.render.getOrientation(),\n            });\n        }, 1);\n    }\n    /**\n     * Load pages from HTML elements on the HTML mode\n     *\n     * @param {(NodeListOf<HTMLElement>|HTMLElement[])} items - List of pages as HTML Element\n     */\n    loadFromHTML(items) {\n        this.ui = new HTMLUI(this.block, this, this.setting, items);\n        this.render = new HTMLRender(this, this.setting, this.ui.getDistElement());\n        this.flipController = new Flip(this.render, this);\n        this.pages = new HTMLPageCollection(this, this.render, this.ui.getDistElement(), items);\n        this.pages.load();\n        this.render.start();\n        this.pages.show(this.setting.startPage);\n        // safari fix\n        setTimeout(() => {\n            this.ui.update();\n            this.trigger('init', this, {\n                page: this.setting.startPage,\n                mode: this.render.getOrientation(),\n            });\n        }, 1);\n    }\n    /**\n     * Update current pages from images\n     *\n     * @param {string[]} imagesHref - List of paths to images\n     */\n    updateFromImages(imagesHref) {\n        const current = this.pages.getCurrentPageIndex();\n        this.pages.destroy();\n        this.pages = new ImagePageCollection(this, this.render, imagesHref);\n        this.pages.load();\n        this.pages.show(current);\n        this.trigger('update', this, {\n            page: current,\n            mode: this.render.getOrientation(),\n        });\n    }\n    /**\n     * Update current pages from HTML\n     *\n     * @param {(NodeListOf<HTMLElement>|HTMLElement[])} items - List of pages as HTML Element\n     */\n    updateFromHtml(items) {\n        const current = this.pages.getCurrentPageIndex();\n        this.pages.destroy();\n        this.pages = new HTMLPageCollection(this, this.render, this.ui.getDistElement(), items);\n        this.pages.load();\n        this.ui.updateItems(items);\n        this.render.reload();\n        this.pages.show(current);\n        this.trigger('update', this, {\n            page: current,\n            mode: this.render.getOrientation(),\n        });\n    }\n    /**\n     * Clear pages from HTML (remove to initinalState)\n     */\n    clear() {\n        this.pages.destroy();\n        this.ui.clear();\n    }\n    /**\n     * Turn to the previous page (without animation)\n     */\n    turnToPrevPage() {\n        this.pages.showPrev();\n    }\n    /**\n     * Turn to the next page (without animation)\n     */\n    turnToNextPage() {\n        this.pages.showNext();\n    }\n    /**\n     * Turn to the specified page number (without animation)\n     *\n     * @param {number} page - New page number\n     */\n    turnToPage(page) {\n        this.pages.show(page);\n    }\n    /**\n     * Turn to the next page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipNext(corner = \"top\" /* TOP */) {\n        this.flipController.flipNext(corner);\n    }\n    /**\n     * Turn to the prev page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipPrev(corner = \"top\" /* TOP */) {\n        this.flipController.flipPrev(corner);\n    }\n    /**\n     * Turn to the specified page number (with animation)\n     *\n     * @param {number} page - New page number\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flip(page, corner = \"top\" /* TOP */) {\n        this.flipController.flipToPage(page, corner);\n    }\n    /**\n     * Call a state change event trigger\n     *\n     * @param {FlippingState} newState - New  state of the object\n     */\n    updateState(newState) {\n        this.trigger('changeState', this, newState);\n    }\n    /**\n     * Call a page number change event trigger\n     *\n     * @param {number} newPage - New page Number\n     */\n    updatePageIndex(newPage) {\n        this.trigger('flip', this, newPage);\n    }\n    /**\n     * Call a page orientation change event trigger. Update UI and rendering area\n     *\n     * @param {Orientation} newOrientation - New page orientation (portrait, landscape)\n     */\n    updateOrientation(newOrientation) {\n        this.ui.setOrientationStyle(newOrientation);\n        this.update();\n        this.trigger('changeOrientation', this, newOrientation);\n    }\n    /**\n     * Get the total number of pages in a book\n     *\n     * @returns {number}\n     */\n    getPageCount() {\n        return this.pages.getPageCount();\n    }\n    /**\n     * Get the index of the current page in the page list (starts at 0)\n     *\n     * @returns {number}\n     */\n    getCurrentPageIndex() {\n        return this.pages.getCurrentPageIndex();\n    }\n    /**\n     * Get page from collection by number\n     *\n     * @param {number} pageIndex\n     * @returns {Page}\n     */\n    getPage(pageIndex) {\n        return this.pages.getPage(pageIndex);\n    }\n    /**\n     * Get the current rendering object\n     *\n     * @returns {Render}\n     */\n    getRender() {\n        return this.render;\n    }\n    /**\n     * Get current object responsible for flipping\n     *\n     * @returns {Flip}\n     */\n    getFlipController() {\n        return this.flipController;\n    }\n    /**\n     * Get current page orientation\n     *\n     * @returns {Orientation} Сurrent orientation: portrait or landscape\n     */\n    getOrientation() {\n        return this.render.getOrientation();\n    }\n    /**\n     * Get current book sizes and position\n     *\n     * @returns {PageRect}\n     */\n    getBoundsRect() {\n        return this.render.getRect();\n    }\n    /**\n     * Get configuration object\n     *\n     * @returns {FlipSetting}\n     */\n    getSettings() {\n        return this.setting;\n    }\n    /**\n     * Get UI object\n     *\n     * @returns {UI}\n     */\n    getUI() {\n        return this.ui;\n    }\n    /**\n     * Get current flipping state\n     *\n     * @returns {FlippingState}\n     */\n    getState() {\n        return this.flipController.getState();\n    }\n    /**\n     * Get page collection\n     *\n     * @returns {PageCollection}\n     */\n    getPageCollection() {\n        return this.pages;\n    }\n    /**\n     * Start page turning. Called when a user clicks or touches\n     *\n     * @param {Point} pos - Touch position in coordinates relative to the book\n     */\n    startUserTouch(pos) {\n        this.mousePosition = pos; // Save touch position\n        this.isUserTouch = true;\n        this.isUserMove = false;\n    }\n    /**\n     * Called when a finger / mouse moves\n     *\n     * @param {Point} pos - Touch position in coordinates relative to the book\n     * @param {boolean} isTouch - True if there was a touch event, not a mouse click\n     */\n    userMove(pos, isTouch) {\n        if (!this.isUserTouch && !isTouch && this.setting.showPageCorners) {\n            this.flipController.showCorner(pos); // fold Page Corner\n        }\n        else if (this.isUserTouch) {\n            if (Helper.GetDistanceBetweenTwoPoint(this.mousePosition, pos) > 5) {\n                this.isUserMove = true;\n                this.flipController.fold(pos);\n            }\n        }\n    }\n    /**\n     * Сalled when the user has stopped touching\n     *\n     * @param {Point} pos - Touch end position in coordinates relative to the book\n     * @param {boolean} isSwipe - true if there was a mobile swipe event\n     */\n    userStop(pos, isSwipe = false) {\n        if (this.isUserTouch) {\n            this.isUserTouch = false;\n            if (!isSwipe) {\n                if (!this.isUserMove)\n                    this.flipController.flip(pos);\n                else\n                    this.flipController.stopMove();\n            }\n        }\n    }\n}\n\nexport { PageFlip };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./interfaces\").IRenderableView} IRenderableView */\n\nimport {\n  AnnotationMode,\n  createPromiseCapability,\n  RenderingCancelledException,\n  SVGGraphics,\n} from \"pdfjs-lib\";\nimport {\n  approximateFraction,\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  getOutputScale,\n  RendererType,\n  roundToDivide,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport { compatibilityParams } from \"./app_options.js\";\nimport { NullL10n } from \"./l10n_utils.js\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\nimport canvasSize from \"canvas-size\";\nimport { warn } from \"../src/shared/util.js\";\n\n/**\n * @typedef {Object} PDFPageViewOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} id - The page unique ID (normally its number).\n * @property {number} scale - The page scale display.\n * @property {PageViewport} defaultViewport - The page viewport.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that is resolved with an {@link OptionalContentConfig} instance.\n *   The default value is `null`.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {IPDFTextLayerFactory} textLayerFactory\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {number} [annotationMode] - Controls if the annotation layer is\n *   created, and if interactive form elements or `AnnotationStorage`-data are\n *   being rendered. The constants from {@link AnnotationMode} should be used;\n *   see also {@link RenderParameters} and {@link GetOperatorListParameters}.\n *   The default value is `AnnotationMode.ENABLE_FORMS`.\n * @property {IPDFAnnotationLayerFactory} annotationLayerFactory\n * @property {IPDFXfaLayerFactory} xfaLayerFactory\n * @property {IPDFStructTreeLayerFactory} structTreeLayerFactory\n * @property {Object} [textHighlighterFactory]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n */\n\nconst MAX_CANVAS_PIXELS = compatibilityParams.maxCanvasPixels || 16777216;\n\n/**\n * @implements {IRenderableView}\n */\nclass PDFPageView {\n  /**\n   * @param {PDFPageViewOptions} options\n   */\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n\n    this.id = options.id;\n    this.renderingId = \"page\" + this.id;\n\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise =\n      options.optionalContentConfigPromise || null;\n    this.hasRestrictedScaling = false;\n    this.textLayerMode = options.textLayerMode ?? TextLayerMode.ENABLE;\n    this._annotationMode =\n      options.annotationMode ?? AnnotationMode.ENABLE_FORMS;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.xfaLayerFactory = options.xfaLayerFactory;\n    this.textHighlighter =\n      options.textHighlighterFactory?.createTextHighlighter(\n        this.id - 1,\n        this.eventBus\n      );\n    this.structTreeLayerFactory = options.structTreeLayerFactory;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.l10n = options.l10n || NullL10n;\n\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    this._renderError = null;\n    this._isStandalone = !this.renderingQueue?.hasViewer();\n\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n    this.xfaLayer = null;\n    this.structTreeLayer = null;\n\n    const div = document.createElement(\"div\");\n    div.className = \"page\";\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    div.setAttribute(\"data-page-number\", this.id);\n    div.setAttribute(\"role\", \"region\");\n    this.l10n.get(\"page_landmark\", { page: this.id }).then(msg => {\n      div.setAttribute(\"aria-label\", msg);\n    });\n    this.div = div;\n\n    container.appendChild(div);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n    if (this.pdfPage) {\n      this.pdfPage.cleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _renderAnnotationLayer() {\n    let error = null;\n    try {\n      await this.annotationLayer.render(this.viewport, \"display\");\n    } catch (ex) {\n      error = ex;\n    } finally {\n      this.eventBus.dispatch(\"annotationlayerrendered\", {\n        source: this,\n        pageNumber: this.id,\n        error,\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _renderXfaLayer() {\n    let error = null;\n    try {\n      const result = await this.xfaLayer.render(this.viewport, \"display\");\n      if (this.textHighlighter) {\n        this._buildXfaTextContentItems(result.textDivs);\n      }\n    } catch (ex) {\n      error = ex;\n    } finally {\n      this.eventBus.dispatch(\"xfalayerrendered\", {\n        source: this,\n        pageNumber: this.id,\n        error,\n      });\n    }\n  }\n\n  async _buildXfaTextContentItems(textDivs) {\n    const text = await this.pdfPage.getTextContent();\n    const items = [];\n    for (const item of text.items) {\n      items.push(item.str);\n    }\n    this.textHighlighter.setTextMapping(textDivs, items);\n    this.textHighlighter.enable();\n  }\n\n  /**\n   * @private\n   */\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.paintedViewportMap.delete(zoomLayerCanvas);\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n\n    if (removeFromDOM) {\n      // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\n      this.zoomLayer.remove();\n    }\n    this.zoomLayer = null;\n  }\n\n  reset({\n    keepZoomLayer = false,\n    keepAnnotationLayer = false,\n    keepXfaLayer = false,\n  } = {}) {\n    this.cancelRendering({ keepAnnotationLayer, keepXfaLayer });\n    this.renderingState = RenderingStates.INITIAL;\n\n    const div = this.div;\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n\n    const childNodes = div.childNodes,\n      zoomLayerNode = (keepZoomLayer && this.zoomLayer) || null,\n      annotationLayerNode =\n        (keepAnnotationLayer && this.annotationLayer?.div) || null,\n      xfaLayerNode = (keepXfaLayer && this.xfaLayer?.div) || null;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n      switch (node) {\n        case zoomLayerNode:\n        case annotationLayerNode:\n        case xfaLayerNode:\n          continue;\n      }\n      div.removeChild(node);\n    }\n    div.removeAttribute(\"data-loaded\");\n\n    if (annotationLayerNode) {\n      // Hide the annotation layer until all elements are resized\n      // so they are not displayed on the already resized page.\n      this.annotationLayer.hide();\n    }\n    if (xfaLayerNode) {\n      // Hide the XFA layer until all elements are resized\n      // so they are not displayed on the already resized page.\n      this.xfaLayer.hide();\n    }\n\n    if (!zoomLayerNode) {\n      if (this.canvas) {\n        this.paintedViewportMap.delete(this.canvas);\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n      this._resetZoomLayer();\n    }\n    if (this.svg) {\n      this.paintedViewportMap.delete(this.svg);\n      delete this.svg;\n    }\n\n    this.loadingIconDiv = document.createElement(\"div\");\n    this.loadingIconDiv.className = \"loadingIcon\";\n    this.loadingIconDiv.setAttribute(\"role\", \"img\");\n    this.l10n.get(\"loading\").then(msg => {\n      this.loadingIconDiv?.setAttribute(\"aria-label\", msg);\n    });\n    div.appendChild(this.loadingIconDiv);\n  }\n\n  update({ scale = 0, rotation = null, optionalContentConfigPromise = null }) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC\") &&\n      typeof arguments[0] !== \"object\"\n    ) {\n      console.error(\n        \"PDFPageView.update called with separate parameters, please use an object instead.\"\n      );\n\n      this.update({\n        scale: arguments[0],\n        rotation: arguments[1],\n        optionalContentConfigPromise: arguments[2],\n      });\n      return;\n    }\n\n    this.scale = scale || this.scale;\n    if (typeof rotation === \"number\") {\n      this.rotation = rotation; // The rotation may be zero.\n    }\n    if (optionalContentConfigPromise instanceof Promise) {\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n    }\n    if (this._isStandalone) {\n      const doc = document.documentElement;\n      doc.style.setProperty(\"--zoom-factor\", this.scale);\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n\n    if (this.svg) {\n      this.cssTransform({\n        target: this.svg,\n        redrawAnnotationLayer: true,\n        redrawXfaLayer: true,\n      });\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: true,\n        timestamp: performance.now(),\n        error: this._renderError,\n      });\n      return;\n    }\n\n    let isScalingRestricted = false;\n    if (this.canvas && this.maxCanvasPixels > 0) {\n      const outputScale = this.outputScale;\n      if (\n        ((Math.floor(this.viewport.width) * outputScale.sx) | 0) *\n          ((Math.floor(this.viewport.height) * outputScale.sy) | 0) >\n        this.maxCanvasPixels\n      ) {\n        isScalingRestricted = true;\n      }\n    }\n\n    if (this.canvas) {\n      if (\n        this.useOnlyCssZoom ||\n        (this.hasRestrictedScaling && isScalingRestricted)\n      ) {\n        this.cssTransform({\n          target: this.canvas,\n          redrawAnnotationLayer: true,\n          redrawXfaLayer: true,\n        });\n\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n          error: this._renderError,\n        });\n        return;\n      }\n      if (!this.zoomLayer && !this.canvas.hidden) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = \"absolute\";\n      }\n    }\n    if (this.zoomLayer) {\n      this.cssTransform({ target: this.zoomLayer.firstChild });\n    }\n    this.reset({\n      keepZoomLayer: true,\n      keepAnnotationLayer: true,\n      keepXfaLayer: true,\n    });\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering({ keepAnnotationLayer = false, keepXfaLayer = false } = {}) {\n    if (this.paintTask) {\n      this.paintTask.cancel();\n      this.paintTask = null;\n    }\n    this.resume = null;\n\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n    if (\n      this.annotationLayer &&\n      (!keepAnnotationLayer || !this.annotationLayer.div)\n    ) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n    if (this.xfaLayer && (!keepXfaLayer || !this.xfaLayer.div)) {\n      this.xfaLayer.cancel();\n      this.xfaLayer = null;\n      this.textHighlighter?.disable();\n    }\n    if (this._onTextLayerRendered) {\n      this.eventBus._off(\"textlayerrendered\", this._onTextLayerRendered);\n      this._onTextLayerRendered = null;\n    }\n  }\n\n  cssTransform({\n    target,\n    redrawAnnotationLayer = false,\n    redrawXfaLayer = false,\n  }) {\n    // Scale target (canvas or svg), its wrapper and page container.\n    const width = this.viewport.width;\n    const height = this.viewport.height;\n    const div = this.div;\n    target.style.width =\n      target.parentNode.style.width =\n      div.style.width =\n        Math.floor(width) + \"px\";\n    target.style.height =\n      target.parentNode.style.height =\n      div.style.height =\n        Math.floor(height) + \"px\";\n    // The canvas may have been originally rotated; rotate relative to that.\n    const relativeRotation =\n      this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n    const absRotation = Math.abs(relativeRotation);\n    let scaleX = 1,\n      scaleY = 1;\n    if (absRotation === 90 || absRotation === 270) {\n      // Scale x and y because of the rotation.\n      scaleX = height / width;\n      scaleY = width / height;\n    }\n    target.style.transform = `rotate(${relativeRotation}deg) scale(${scaleX}, ${scaleY})`;\n\n    if (this.textLayer) {\n      // Rotating the text layer is more complicated since the divs inside the\n      // the text layer are rotated.\n      // TODO: This could probably be simplified by drawing the text layer in\n      // one orientation and then rotating overall.\n      const textLayerViewport = this.textLayer.viewport;\n      const textRelativeRotation =\n        this.viewport.rotation - textLayerViewport.rotation;\n      const textAbsRotation = Math.abs(textRelativeRotation);\n      let scale = width / textLayerViewport.width;\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\n        scale = width / textLayerViewport.height;\n      }\n      const textLayerDiv = this.textLayer.textLayerDiv;\n      let transX, transY;\n      switch (textAbsRotation) {\n        case 0:\n          transX = transY = 0;\n          break;\n        case 90:\n          transX = 0;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 180:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 270:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = 0;\n          break;\n        default:\n          console.error(\"Bad rotation value.\");\n          break;\n      }\n\n      textLayerDiv.style.transform =\n        `rotate(${textAbsRotation}deg) ` +\n        `scale(${scale}) ` +\n        `translate(${transX}, ${transY})`;\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\n    }\n\n    if (redrawAnnotationLayer && this.annotationLayer) {\n      this._renderAnnotationLayer();\n    }\n    if (redrawXfaLayer && this.xfaLayer) {\n      this._renderXfaLayer();\n    }\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      this.reset(); // Ensure that we reset all state to prevent issues.\n    }\n    const { div, pdfPage } = this;\n\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = RenderingStates.RUNNING;\n\n    // Wrap the canvas so that if it has a CSS transform for high DPI the\n    // overflow will be hidden in Firefox.\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.style.width = div.style.width;\n    canvasWrapper.style.height = div.style.height;\n    canvasWrapper.classList.add(\"canvasWrapper\");\n\n    if (this.annotationLayer?.div) {\n      // The annotation layer needs to stay on top.\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    let textLayer = null;\n    if (this.textLayerMode !== TextLayerMode.DISABLE && this.textLayerFactory) {\n      const textLayerDiv = document.createElement(\"div\");\n      textLayerDiv.className = \"textLayer\";\n      textLayerDiv.style.width = canvasWrapper.style.width;\n      textLayerDiv.style.height = canvasWrapper.style.height;\n      if (this.annotationLayer?.div) {\n        // The annotation layer needs to stay on top.\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\n      } else {\n        div.appendChild(textLayerDiv);\n      }\n\n      textLayer = this.textLayerFactory.createTextLayerBuilder(\n        textLayerDiv,\n        this.id - 1,\n        this.viewport,\n        this.textLayerMode === TextLayerMode.ENABLE_ENHANCE,\n        this.eventBus,\n        this.textHighlighter\n      );\n    }\n    this.textLayer = textLayer;\n\n    if (this.xfaLayer?.div) {\n      // The xfa layer needs to stay on top.\n      div.appendChild(this.xfaLayer.div);\n    }\n\n    let renderContinueCallback = null;\n    if (this.renderingQueue) {\n      renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = RenderingStates.PAUSED;\n          this.resume = () => {\n            this.renderingState = RenderingStates.RUNNING;\n            cont();\n          };\n          return;\n        }\n        cont();\n      };\n    }\n\n    const finishPaintTask = async (error = null) => {\n      // The paintTask may have been replaced by a new one, so only remove\n      // the reference to the paintTask if it matches the one that is\n      // triggering this callback.\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof RenderingCancelledException) {\n        this._renderError = null;\n        return;\n      }\n      this._renderError = error;\n\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      this._resetZoomLayer(/* removeFromDOM = */ true);\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: false,\n        timestamp: performance.now(),\n        error: this._renderError,\n      });\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask =\n      this.renderer === RendererType.SVG\n        ? this.paintOnSvg(canvasWrapper)\n        : this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n\n    const resultPromise = paintTask.promise.then(\n      () => {\n        return finishPaintTask(null).then(() => {\n          if (textLayer) {\n            const readableStream = pdfPage.streamTextContent({\n              normalizeWhitespace: true,\n              includeMarkedContent: true,\n            });\n            textLayer.setTextContentStream(readableStream);\n            textLayer.render();\n          }\n        });\n      },\n      function (reason) {\n        return finishPaintTask(reason);\n      }\n    );\n\n    if (\n      this._annotationMode !== AnnotationMode.DISABLE &&\n      this.annotationLayerFactory\n    ) {\n      if (!this.annotationLayer) {\n        this.annotationLayer =\n          this.annotationLayerFactory.createAnnotationLayerBuilder(\n            div,\n            pdfPage,\n            /* annotationStorage = */ null,\n            this.imageResourcesPath,\n            this._annotationMode === AnnotationMode.ENABLE_FORMS,\n            this.l10n,\n            /* enableScripting = */ null,\n            /* hasJSActionsPromise = */ null,\n            /* mouseState = */ null\n          );\n      }\n      this._renderAnnotationLayer();\n    }\n\n    if (this.xfaLayerFactory) {\n      if (!this.xfaLayer) {\n        this.xfaLayer = this.xfaLayerFactory.createXfaLayerBuilder(\n          div,\n          pdfPage,\n          /* annotationStorage = */ null\n        );\n      }\n      this._renderXfaLayer();\n    }\n\n    // The structure tree is currently only supported when the text layer is\n    // enabled and a canvas is used for rendering.\n    if (this.structTreeLayerFactory && this.textLayer && this.canvas) {\n      // The structure tree must be generated after the text layer for the\n      // aria-owns to work.\n      this._onTextLayerRendered = event => {\n        if (event.pageNumber !== this.id) {\n          return;\n        }\n        this.eventBus._off(\"textlayerrendered\", this._onTextLayerRendered);\n        this._onTextLayerRendered = null;\n\n        if (!this.canvas) {\n          return; // The canvas was removed, prevent errors below.\n        }\n        this.pdfPage.getStructTree().then(tree => {\n          if (!tree) {\n            return;\n          }\n          if (!this.canvas) {\n            return; // The canvas was removed, prevent errors below.\n          }\n          const treeDom = this.structTreeLayer.render(tree);\n          treeDom.classList.add(\"structTree\");\n          this.canvas.appendChild(treeDom);\n        });\n      };\n      this.eventBus._on(\"textlayerrendered\", this._onTextLayerRendered);\n      this.structTreeLayer =\n        this.structTreeLayerFactory.createStructTreeLayerBuilder(pdfPage);\n    }\n\n    div.setAttribute(\"data-loaded\", true);\n\n    this.eventBus.dispatch(\"pagerender\", {\n      source: this,\n      pageNumber: this.id,\n    });\n    return resultPromise;\n  }\n\n  paintOnCanvas(canvasWrapper) {\n    const renderCapability = createPromiseCapability();\n    const result = {\n      promise: renderCapability.promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        renderTask.cancel();\n      },\n    };\n\n    const viewport = this.viewport;\n    const canvas = document.createElement(\"canvas\");\n\n    // Keep the canvas hidden until the first draw callback, or until drawing\n    // is complete when `!this.renderingQueue`, to prevent black flickering.\n    canvas.hidden = true;\n    let isCanvasHidden = true;\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.hidden = false;\n        isCanvasHidden = false;\n      }\n    };\n\n    canvasWrapper.appendChild(canvas);\n    this.canvas = canvas;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const outputScale = getOutputScale(ctx);\n    this.outputScale = outputScale;\n\n    if (this.useOnlyCssZoom) {\n      const actualSizeViewport = viewport.clone({ scale: CSS_UNITS });\n      // Use a scale that makes the canvas have the originally intended size\n      // of the page.\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\n      outputScale.scaled = true;\n    }\n\n    if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = viewport.width * viewport.height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        outputScale.scaled = true;\n        this.hasRestrictedScaling = true;\n      } else {\n        this.hasRestrictedScaling = false;\n      }\n    }\n\n    const sfx = approximateFraction(outputScale.sx);\n    const sfy = approximateFraction(outputScale.sy);\n\n    // modified by ngx-extended-pdf-viewer #387\n    const width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n    const height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n    if (width >= 4096 || height >= 4096) {\n      if ((!!this.maxWidth) || (!canvasSize.test({ width, height }))) {\n        const max = this.determineMaxDimensions();\n        let divisor = Math.max(width / max, height / max);\n        const newScale = Math.floor(100 * this.scale / divisor) / 100; // round to integer percentages\n        divisor = this.scale / newScale;\n        this.scale = newScale;\n\n        const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n        PDFViewerApplicationOptions.set('maxZoom', newScale);\n\n        PDFViewerApplication.pdfViewer.currentScaleValue = this.scale;\n        viewport.width /= divisor;\n        viewport.height /= divisor;\n        warn(\"Page \" + this.id + \": Reduced the maximum zoom to \" + newScale + \" because the browser can't render larger canvases.\");\n      }\n    }\n    // end of modification\n    canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = roundToDivide(viewport.width, sfx[1]) + \"px\";\n    canvas.style.height = roundToDivide(viewport.height, sfy[1]) + \"px\";\n    // Add the viewport so it's known what it was originally drawn with.\n    this.paintedViewportMap.set(canvas, viewport);\n\n    // Rendering area\n    const transform = !outputScale.scaled\n      ? null\n      : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      annotationMode: this._annotationMode,\n      optionalContentConfigPromise: this._optionalContentConfigPromise,\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(\n      function () {\n        showCanvas();\n        renderCapability.resolve(undefined);\n      },\n      function (error) {\n        showCanvas();\n        renderCapability.reject(error);\n      }\n    );\n    return result;\n  }\n\n  paintOnSvg(wrapper) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      // Return a mock object, to prevent errors such as e.g.\n      // \"TypeError: paintTask.promise is undefined\".\n      return {\n        promise: Promise.reject(new Error(\"SVG rendering is not supported.\")),\n        onRenderContinue(cont) {},\n        cancel() {},\n      };\n    }\n\n    let cancelled = false;\n    const ensureNotCancelled = () => {\n      if (cancelled) {\n        throw new RenderingCancelledException(\n          `Rendering cancelled, page ${this.id}`,\n          \"svg\"\n        );\n      }\n    };\n\n    const pdfPage = this.pdfPage;\n    const actualSizeViewport = this.viewport.clone({ scale: CSS_UNITS });\n    const promise = pdfPage\n      .getOperatorList({\n        annotationMode: this._annotatationMode,\n      })\n      .then(opList => {\n        ensureNotCancelled();\n        const svgGfx = new SVGGraphics(\n          pdfPage.commonObjs,\n          pdfPage.objs,\n          /* forceDataSchema = */ compatibilityParams.disableCreateObjectURL\n        );\n        return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n          ensureNotCancelled();\n          this.svg = svg;\n          this.paintedViewportMap.set(svg, actualSizeViewport);\n\n          svg.style.width = wrapper.style.width;\n          svg.style.height = wrapper.style.height;\n          this.renderingState = RenderingStates.FINISHED;\n          wrapper.appendChild(svg);\n        });\n      });\n\n    return {\n      promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        cancelled = true;\n      },\n    };\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    if (this.pageLabel !== null) {\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\n    } else {\n      this.div.removeAttribute(\"data-page-label\");\n    }\n  }\n\n  // modified (added) by ngx-extended-pdf-viewer #387\n  determineMaxDimensions() {\n    if (this.maxWidth) {\n      return this.maxWidth;\n    }\n    const checklist = [4096, // iOS\n      8192, // IE 9-10\n      10836, // Android\n      11180, // Firefox\n      11402, // Android,\n      14188,\n      16384\n    ];\n    for (let width of checklist) {\n      if (!canvasSize.test({width: width+1, height: width+1})) {\n        this.maxWidth = width;\n        return this.maxWidth;\n      }\n    }\n    return 16384;\n  }\n  // end of modification\n}\n\nexport { PDFPageView };\n","/*!\n * canvas-size\n * v1.2.4\n * https://github.com/jhildenbiddle/canvas-size\n * (c) 2015-2021 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) symbols = symbols.filter((function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        }));\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\n\nfunction _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        if (i % 2) {\n            ownKeys(Object(source), true).forEach((function(key) {\n                _defineProperty(target, key, source[key]);\n            }));\n        } else if (Object.getOwnPropertyDescriptors) {\n            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n        } else {\n            ownKeys(Object(source)).forEach((function(key) {\n                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n            }));\n        }\n    }\n    return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for (i = 0; i < sourceSymbolKeys.length; i++) {\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n}\n\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction canvasTest(settings) {\n    var size = settings.sizes.shift();\n    var width = Math.max(Math.ceil(size[0]), 1);\n    var height = Math.max(Math.ceil(size[1]), 1);\n    var fill = [ width - 1, height - 1, 1, 1 ];\n    var job = Date.now();\n    var isWorker = typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope;\n    var cropCvs, testCvs;\n    if (isWorker) {\n        cropCvs = new OffscreenCanvas(1, 1);\n        testCvs = new OffscreenCanvas(width, height);\n    } else {\n        cropCvs = document.createElement(\"canvas\");\n        cropCvs.width = 1;\n        cropCvs.height = 1;\n        testCvs = document.createElement(\"canvas\");\n        testCvs.width = width;\n        testCvs.height = height;\n    }\n    var cropCtx = cropCvs.getContext(\"2d\");\n    var testCtx = testCvs.getContext(\"2d\");\n    if (testCtx) {\n        testCtx.fillRect.apply(testCtx, fill);\n        cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n    }\n    var isTestPass = cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n    var benchmark = Date.now() - job;\n    if (isWorker) {\n        postMessage({\n            width: width,\n            height: height,\n            benchmark: benchmark,\n            isTestPass: isTestPass\n        });\n        if (!isTestPass && settings.sizes.length) {\n            canvasTest(settings);\n        }\n    } else if (isTestPass) {\n        settings.onSuccess(width, height, benchmark);\n    } else {\n        settings.onError(width, height, benchmark);\n        if (settings.sizes.length) {\n            canvasTest(settings);\n        }\n    }\n    return isTestPass;\n}\n\nvar testSizes = {\n    area: [ 16384, 14188, 11402, 11180, 10836, 8192, 4096, 1 ],\n    height: [ 8388607, 65535, 32767, 16384, 8192, 4096, 1 ],\n    width: [ 4194303, 65535, 32767, 16384, 8192, 4096, 1 ]\n};\n\nvar defaults = {\n    max: null,\n    min: 1,\n    sizes: [],\n    step: 1024,\n    usePromise: false,\n    useWorker: false,\n    onError: Function.prototype,\n    onSuccess: Function.prototype\n};\n\nvar workerJobs = {};\n\nfunction createSizesArray(settings) {\n    var isArea = settings.width === settings.height;\n    var isWidth = settings.height === 1;\n    var isHeight = settings.width === 1;\n    var sizes = [];\n    if (!settings.width || !settings.height) {\n        settings.sizes.forEach((function(testSize) {\n            var width = isArea || isWidth ? testSize : 1;\n            var height = isArea || isHeight ? testSize : 1;\n            sizes.push([ width, height ]);\n        }));\n    } else {\n        var testMin = settings.min || defaults.min;\n        var testStep = settings.step || defaults.step;\n        var testSize = Math.max(settings.width, settings.height);\n        while (testSize >= testMin) {\n            var width = isArea || isWidth ? testSize : 1;\n            var height = isArea || isHeight ? testSize : 1;\n            sizes.push([ width, height ]);\n            testSize -= testStep;\n        }\n    }\n    return sizes;\n}\n\nfunction handleMethod(settings) {\n    var hasCanvasSupport = window && \"HTMLCanvasElement\" in window;\n    var hasOffscreenCanvasSupport = window && \"OffscreenCanvas\" in window;\n    var jobID = Date.now();\n    var _onError = settings.onError, _onSuccess = settings.onSuccess, settingsWithoutCallbacks = _objectWithoutProperties(settings, [ \"onError\", \"onSuccess\" ]);\n    var worker = null;\n    if (!hasCanvasSupport) {\n        return false;\n    }\n    if (settings.useWorker && hasOffscreenCanvasSupport) {\n        var js = \"\\n            var canvasTest = \".concat(canvasTest.toString(), \";\\n            onmessage = function(e) {\\n                canvasTest(e.data);\\n            };\\n        \");\n        var blob = new Blob([ js ], {\n            type: \"application/javascript\"\n        });\n        var blobURL = URL.createObjectURL(blob);\n        worker = new Worker(blobURL);\n        URL.revokeObjectURL(blobURL);\n        worker.onmessage = function(e) {\n            var _e$data = e.data, width = _e$data.width, height = _e$data.height, benchmark = _e$data.benchmark, isTestPass = _e$data.isTestPass;\n            if (isTestPass) {\n                workerJobs[jobID].onSuccess(width, height, benchmark);\n                delete workerJobs[jobID];\n            } else {\n                workerJobs[jobID].onError(width, height, benchmark);\n            }\n        };\n    }\n    if (settings.usePromise) {\n        return new Promise((function(resolve, reject) {\n            var promiseSettings = _objectSpread2(_objectSpread2({}, settings), {}, {\n                onError: function onError(width, height, benchmark) {\n                    var isLastTest;\n                    if (settings.sizes.length === 0) {\n                        isLastTest = true;\n                    } else {\n                        var _settings$sizes$slice = settings.sizes.slice(-1), _settings$sizes$slice2 = _slicedToArray(_settings$sizes$slice, 1), _settings$sizes$slice3 = _slicedToArray(_settings$sizes$slice2[0], 2), lastWidth = _settings$sizes$slice3[0], lastHeight = _settings$sizes$slice3[1];\n                        isLastTest = width === lastWidth && height === lastHeight;\n                    }\n                    _onError(width, height, benchmark);\n                    if (isLastTest) {\n                        reject({\n                            width: width,\n                            height: height,\n                            benchmark: benchmark\n                        });\n                    }\n                },\n                onSuccess: function onSuccess(width, height, benchmark) {\n                    _onSuccess(width, height, benchmark);\n                    resolve({\n                        width: width,\n                        height: height,\n                        benchmark: benchmark\n                    });\n                }\n            });\n            if (worker) {\n                var onError = promiseSettings.onError, onSuccess = promiseSettings.onSuccess;\n                workerJobs[jobID] = {\n                    onError: onError,\n                    onSuccess: onSuccess\n                };\n                worker.postMessage(settingsWithoutCallbacks);\n            } else {\n                canvasTest(promiseSettings);\n            }\n        }));\n    } else {\n        if (worker) {\n            workerJobs[jobID] = {\n                onError: _onError,\n                onSuccess: _onSuccess\n            };\n            worker.postMessage(settingsWithoutCallbacks);\n        } else {\n            return canvasTest(settings);\n        }\n    }\n}\n\nvar canvasSize = {\n    maxArea: function maxArea() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var sizes = createSizesArray({\n            width: options.max,\n            height: options.max,\n            min: options.min,\n            step: options.step,\n            sizes: _toConsumableArray(testSizes.area)\n        });\n        var settings = _objectSpread2(_objectSpread2(_objectSpread2({}, defaults), options), {}, {\n            sizes: sizes\n        });\n        return handleMethod(settings);\n    },\n    maxHeight: function maxHeight() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var sizes = createSizesArray({\n            width: 1,\n            height: options.max,\n            min: options.min,\n            step: options.step,\n            sizes: _toConsumableArray(testSizes.height)\n        });\n        var settings = _objectSpread2(_objectSpread2(_objectSpread2({}, defaults), options), {}, {\n            sizes: sizes\n        });\n        return handleMethod(settings);\n    },\n    maxWidth: function maxWidth() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var sizes = createSizesArray({\n            width: options.max,\n            height: 1,\n            min: options.min,\n            step: options.step,\n            sizes: _toConsumableArray(testSizes.width)\n        });\n        var settings = _objectSpread2(_objectSpread2(_objectSpread2({}, defaults), options), {}, {\n            sizes: sizes\n        });\n        return handleMethod(settings);\n    },\n    test: function test() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var settings = _objectSpread2(_objectSpread2({}, defaults), options);\n        settings.sizes = _toConsumableArray(settings.sizes);\n        if (settings.width && settings.height) {\n            settings.sizes = [ [ settings.width, settings.height ] ];\n        }\n        return handleMethod(settings);\n    }\n};\n\nexport default canvasSize;\n//# sourceMappingURL=canvas-size.esm.js.map\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\": // modified by ngx-extended-pdf-viewer #864\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// modified by ngx-extended-pdf-viewer - removed node.js support\n// import { isNodeJS } from \"./is_node.js\";\n\nconst isNodeJS = false;\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for `globalThis` in legacy browsers.\n  // Support: Firefox<65, Chrome<71, Safari<12.1, Node.js<12.0.0\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    globalThis.DOMMatrix = require(\"dommatrix/dist/dommatrix.js\");\n  })();\n\n  // Provides support for Object.fromEntries in legacy browsers.\n  // Support: Firefox<63, Chrome<73, Safari<12.1, Node.js<12.0.0\n  (function checkObjectFromEntries() {\n    if (Object.fromEntries) {\n      return;\n    }\n    require(\"core-js/es/object/from-entries.js\");\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n      // Slightly reduce the size of the Chromium-extension, given\n      // that `ReadableStream` has been supported since Chrome 43.\n      return;\n    }\n    if (globalThis.ReadableStream || !isNodeJS) {\n      return;\n    }\n    globalThis.ReadableStream =\n      require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n}\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./interfaces\").IPDFStructTreeLayerFactory} IPDFStructTreeLayerFactory */\n\nconst PDF_ROLE_TO_HTML_ROLE = {\n  // Document level structure types\n  Document: null, // There's a \"document\" role, but it doesn't make sense here.\n  DocumentFragment: null,\n  // Grouping level structure types\n  Part: \"group\",\n  Sect: \"group\", // XXX: There's a \"section\" role, but it's abstract.\n  Div: \"group\",\n  Aside: \"note\",\n  NonStruct: \"none\",\n  // Block level structure types\n  P: null,\n  // H<n>,\n  H: \"heading\",\n  Title: null,\n  FENote: \"note\",\n  // Sub-block level structure type\n  Sub: \"group\",\n  // General inline level structure types\n  Lbl: null,\n  Span: null,\n  Em: null,\n  Strong: null,\n  Link: \"link\",\n  Annot: \"note\",\n  Form: \"form\",\n  // Ruby and Warichu structure types\n  Ruby: null,\n  RB: null,\n  RT: null,\n  RP: null,\n  Warichu: null,\n  WT: null,\n  WP: null,\n  // List standard structure types\n  L: \"list\",\n  LI: \"listitem\",\n  LBody: null,\n  // Table standard structure types\n  Table: \"table\",\n  TR: \"row\",\n  TH: \"columnheader\",\n  TD: \"cell\",\n  THead: \"columnheader\",\n  TBody: null,\n  TFoot: null,\n  // Standard structure type Caption\n  Caption: null,\n  // Standard structure type Figure\n  Figure: \"figure\",\n  // Standard structure type Formula\n  Formula: null,\n  // standard structure type Artifact\n  Artifact: null,\n};\n\nconst HEADING_PATTERN = /^H(\\d+)$/;\n\n/**\n * @typedef {Object} StructTreeLayerBuilderOptions\n * @property {PDFPage} pdfPage\n */\n\nclass StructTreeLayerBuilder {\n  /**\n   * @param {StructTreeLayerBuilderOptions} options\n   */\n  constructor({ pdfPage }) {\n    this.pdfPage = pdfPage;\n  }\n\n  render(structTree) {\n    return this._walk(structTree);\n  }\n\n  _setAttributes(structElement, htmlElement) {\n    if (structElement.alt !== undefined) {\n      htmlElement.setAttribute(\"aria-label\", structElement.alt);\n    }\n    if (structElement.id !== undefined) {\n      htmlElement.setAttribute(\"aria-owns\", structElement.id);\n    }\n  }\n\n  _walk(node) {\n    if (!node) {\n      return null;\n    }\n\n    const element = document.createElement(\"span\");\n    if (\"role\" in node) {\n      const { role } = node;\n      const match = role.match(HEADING_PATTERN);\n      if (match) {\n        element.setAttribute(\"role\", \"heading\");\n        element.setAttribute(\"aria-level\", match[1]);\n      } else if (PDF_ROLE_TO_HTML_ROLE[role]) {\n        element.setAttribute(\"role\", PDF_ROLE_TO_HTML_ROLE[role]);\n      }\n    }\n\n    this._setAttributes(node, element);\n\n    if (node.children) {\n      if (node.children.length === 1 && \"id\" in node.children[0]) {\n        // Often there is only one content node so just set the values on the\n        // parent node to avoid creating an extra span.\n        this._setAttributes(node.children[0], element);\n      } else {\n        for (const kid of node.children) {\n          element.appendChild(this._walk(kid));\n        }\n      }\n    }\n    return element;\n  }\n}\n\n/**\n * @implements IPDFStructTreeLayerFactory\n */\nclass DefaultStructTreeLayerFactory {\n  /**\n   * @param {PDFPage} pdfPage\n   * @returns {StructTreeLayerBuilder}\n   */\n  createStructTreeLayerBuilder(pdfPage) {\n    return new StructTreeLayerBuilder({\n      pdfPage,\n    });\n  }\n}\n\nexport { DefaultStructTreeLayerFactory, StructTreeLayerBuilder };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} TextHighlighterOptions\n * @property {PDFFindController} findController\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} pageIndex - The page index.\n */\n\n/**\n * TextHighlighter handles highlighting matches from the FindController in\n * either the text layer or XFA layer depending on the type of document.\n */\nclass TextHighlighter {\n  /**\n   * @param {TextHighlighterOptions} options\n   */\n  constructor({ findController, eventBus, pageIndex }) {\n    this.findController = findController;\n    this.matches = [];\n    this.eventBus = eventBus;\n    this.pageIdx = pageIndex;\n    this._onUpdateTextLayerMatches = null;\n    this.textDivs = null;\n    this.textContentItemsStr = null;\n    this.enabled = false;\n  }\n\n  /**\n   * Store two arrays that will map DOM nodes to text they should contain.\n   * The arrays should be of equal length and the array element at each index\n   * should correspond to the other. e.g.\n   * `items[0] = \"<span>Item 0</span>\" and texts[0] = \"Item 0\";\n   *\n   * @param {Array<Node>} divs\n   * @param {Array<string>} texts\n   */\n  setTextMapping(divs, texts) {\n    this.textDivs = divs;\n    this.textContentItemsStr = texts;\n  }\n\n  /**\n   * Start listening for events to update the highlighter and check if there are\n   * any current matches that need be highlighted.\n   */\n  enable() {\n    if (!this.textDivs || !this.textContentItemsStr) {\n      throw new Error(\"Text divs and strings have not been set.\");\n    }\n    if (this.enabled) {\n      throw new Error(\"TextHighlighter is already enabled.\");\n    }\n    this.enabled = true;\n    if (!this._onUpdateTextLayerMatches) {\n      this._onUpdateTextLayerMatches = evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      };\n      this.eventBus._on(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n    }\n    this._updateMatches();\n  }\n\n  disable() {\n    if (!this.enabled) {\n      return;\n    }\n    this.enabled = false;\n    if (this._onUpdateTextLayerMatches) {\n      this.eventBus._off(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n      this._onUpdateTextLayerMatches = null;\n    }\n  }\n\n  _convertMatches(\n    matches,\n    matchesLength,\n    matchesColor // #201\n  ) {\n    // Early exit if there is nothing to convert.\n    if (!matches) {\n      return [];\n    }\n    const { textContentItemsStr } = this;\n\n    let i = 0,\n      iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      // Calculate the start position.\n      let matchIdx = matches[m];\n\n      // Loop over the divIdxs.\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        console.error(\"Could not find a matching mapping\");\n      }\n\n      const match = {\n        color: matchesColor ? matchesColor[m] : 0, // #201\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex,\n        },\n      };\n\n      // Calculate the end position.\n      matchIdx += matchesLength[m];\n\n      // Somewhat the same array as above, but use > instead of >= to get\n      // the end position right.\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex,\n      };\n      result.push(match);\n    }\n    return result;\n  }\n\n  _renderMatches(matches) {\n    // Early exit if there is nothing to render.\n    if (matches.length === 0) {\n      return;\n    }\n    const { findController, pageIdx } = this;\n    const { textContentItemsStr, textDivs } = this;\n\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined,\n    };\n\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = \"\";\n      return appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      let div = textDivs[divIdx];\n      if (div.nodeType === Node.TEXT_NODE) {\n        const span = document.createElement(\"span\");\n        div.parentNode.insertBefore(span, div);\n        span.appendChild(div);\n        textDivs[divIdx] = span;\n        div = span;\n      }\n      const content = textContentItemsStr[divIdx].substring(\n        fromOffset,\n        toOffset\n      );\n      const node = document.createTextNode(content);\n      if (className) {\n        const span = document.createElement(\"span\");\n        span.className = `${className} appended`;\n        span.appendChild(node);\n        div.appendChild(span);\n        return className.includes(\"selected\") ? span.offsetLeft : 0;\n      }\n      div.appendChild(node);\n      return 0;\n    }\n\n    let i0 = selectedMatchIdx,\n      i1 = i0 + 1;\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      // Not highlighting all and this isn't the selected page, so do nothing.\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = (isSelected ? \" selected\" : \"\") + \" color\" + match.color; // #201\n      let selectedLeft = 0;\n\n      // Match inside new div.\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        // If there was a previous div, then add the text at the end.\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n        // Clear the divs and set the content until the starting point.\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        selectedLeft = appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          end.offset,\n          \"highlight\" + highlightSuffix\n        );\n      } else {\n        selectedLeft = appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          infinity.offset,\n          \"highlight begin\" + highlightSuffix\n        );\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n        }\n        beginText(end, \"highlight end\" + highlightSuffix);\n      }\n      prevEnd = end;\n\n      if (isSelected) {\n        // Attempt to scroll the selected match into view.\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          selectedLeft,\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx,\n        });\n      }\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    if (!this.enabled) {\n      return;\n    }\n    const { findController, matches, pageIdx } = this;\n    const { textContentItemsStr, textDivs } = this;\n    let clearedUntilDivIdx = -1;\n\n    // Clear all current matches.\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = \"\";\n      }\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController?.highlightMatches) {\n      return;\n    }\n    // Convert the matches on the `findController` into the match format\n    // used for the textLayer.\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n    const pageMatchesColor = findController.pageMatchesColor[pageIdx] || null; // #201\n\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength, pageMatchesColor); // #201\n    this._renderMatches(this.matches);\n  }\n}\n\nexport { TextHighlighter };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./interfaces\").IPDFTextLayerFactory} IPDFTextLayerFactory */\n\nimport { renderTextLayer } from \"pdfjs-lib\";\n\nconst EXPAND_DIVS_TIMEOUT = 300; // ms\n\n/**\n * @typedef {Object} TextLayerBuilderOptions\n * @property {HTMLDivElement} textLayerDiv - The text layer container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} pageIndex - The page index.\n * @property {PageViewport} viewport - The viewport of the text layer.\n * @property {TextHighlighter} highlighter - Optional object that will handle\n *   highlighting text from the find controller.\n * @property {boolean} enhanceTextSelection - Option to turn on improved\n *   text selection.\n */\n\n/**\n * The text layer builder provides text selection functionality for the PDF.\n * It does this by creating overlay divs over the PDF's text. These divs\n * contain text that matches the PDF text they are overlaying.\n */\nclass TextLayerBuilder {\n  constructor({\n    textLayerDiv,\n    eventBus,\n    pageIndex,\n    viewport,\n    highlighter = null,\n    enhanceTextSelection = false,\n  }) {\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageNumber = pageIndex + 1;\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.textLayerRenderTask = null;\n    this.highlighter = highlighter;\n    this.enhanceTextSelection = enhanceTextSelection;\n\n    this._bindMouse();\n  }\n\n  /**\n   * @private\n   */\n  _finishRendering() {\n    this.renderingDone = true;\n\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement(\"div\");\n      endOfContent.className = \"endOfContent\";\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n\n    this.eventBus.dispatch(\"textlayerrendered\", {\n      source: this,\n      pageNumber: this.pageNumber,\n      numTextDivs: this.textDivs.length,\n    });\n  }\n\n  /**\n   * Renders the text layer.\n   *\n   * @param {number} [timeout] - Wait for a specified amount of milliseconds\n   *                             before rendering.\n   */\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n    this.cancel();\n\n    this.textDivs.length = 0;\n    this.highlighter?.setTextMapping(this.textDivs, this.textContentItemsStr);\n\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = renderTextLayer({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection,\n    });\n    this.textLayerRenderTask.promise.then(\n      () => {\n        this.textLayerDiv.appendChild(textLayerFrag);\n        this._finishRendering();\n        this.highlighter?.enable();\n      },\n      function (reason) {\n        // Cancelled or failed to render text layer; skipping errors.\n      }\n    );\n  }\n\n  /**\n   * Cancel rendering of the text layer.\n   */\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n    this.highlighter?.disable();\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  /**\n   * Improves text selection by adding an additional div where the mouse was\n   * clicked. This reduces flickering of the content if the mouse is slowly\n   * dragged up or down.\n   *\n   * @private\n   */\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    let expandDivsTimer = null;\n\n    div.addEventListener(\"mousedown\", evt => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n        if (\n          (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n          expandDivsTimer\n        ) {\n          clearTimeout(expandDivsTimer);\n          expandDivsTimer = null;\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        // On non-Firefox browsers, the selection will feel better if the height\n        // of the `endOfContent` div is adjusted to start at mouse click\n        // location. This avoids flickering when the selection moves up.\n        // However it does not work when selection is started on empty space.\n        let adjustTop = evt.target !== div;\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n          adjustTop =\n            adjustTop &&\n            window\n              .getComputedStyle(end)\n              .getPropertyValue(\"-moz-user-select\") !== \"none\";\n        }\n        if (adjustTop) {\n          const divBounds = div.getBoundingClientRect();\n          const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n          end.style.top = (r * 100).toFixed(2) + \"%\";\n        }\n      }\n      end.classList.add(\"active\");\n    });\n\n    div.addEventListener(\"mouseup\", () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n          expandDivsTimer = setTimeout(() => {\n            if (this.textLayerRenderTask) {\n              this.textLayerRenderTask.expandTextDivs(false);\n            }\n            expandDivsTimer = null;\n          }, EXPAND_DIVS_TIMEOUT);\n        } else {\n          this.textLayerRenderTask.expandTextDivs(false);\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        end.style.top = \"\";\n      }\n      end.classList.remove(\"active\");\n    });\n  }\n}\n\n/**\n * @implements IPDFTextLayerFactory\n */\nclass DefaultTextLayerFactory {\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @param {TextHighlighter} highlighter\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus,\n    highlighter\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection,\n      eventBus,\n      highlighter,\n    });\n  }\n}\n\nexport { DefaultTextLayerFactory, TextLayerBuilder };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./interfaces\").IPDFXfaLayerFactory} IPDFXfaLayerFactory */\n\nimport { XfaLayer } from \"pdfjs-lib\";\n\n/**\n * @typedef {Object} XfaLayerBuilderOptions\n * @property {HTMLDivElement} pageDiv\n * @property {PDFPage} pdfPage\n * @property {AnnotationStorage} [annotationStorage]\n * @property {Object} [xfaHtml]\n */\n\nclass XfaLayerBuilder {\n  /**\n   * @param {XfaLayerBuilderOptions} options\n   */\n  constructor({ pageDiv, pdfPage, annotationStorage, xfaHtml }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.annotationStorage = annotationStorage;\n    this.xfaHtml = xfaHtml;\n\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  /**\n   * @param {PageViewport} viewport\n   * @param {string} intent (default value is 'display')\n   * @returns {Promise<Object | void>} A promise that is resolved when rendering\n   *   of the XFA layer is complete. The first rendering will return an object\n   *   with a `textDivs` property that  can be used with the TextHighlighter.\n   */\n  render(viewport, intent = \"display\") {\n    if (intent === \"print\") {\n      const parameters = {\n        viewport: viewport.clone({ dontFlip: true }),\n        div: this.div,\n        xfa: this.xfaHtml,\n        page: null,\n        annotationStorage: this.annotationStorage,\n        intent,\n      };\n\n      // Create an xfa layer div and render the form\n      const div = document.createElement(\"div\");\n      this.pageDiv.appendChild(div);\n      parameters.div = div;\n\n      const result = XfaLayer.render(parameters);\n      return Promise.resolve(result);\n    }\n\n    // intent === \"display\"\n    return this.pdfPage\n      .getXfa()\n      .then(xfa => {\n        if (this._cancelled || !xfa) {\n          return { textDivs: [] };\n        }\n\n        const parameters = {\n          viewport: viewport.clone({ dontFlip: true }),\n          div: this.div,\n          xfa,\n          page: this.pdfPage,\n          annotationStorage: this.annotationStorage,\n          intent,\n        };\n\n        if (this.div) {\n          return XfaLayer.update(parameters);\n        }\n        // Create an xfa layer div and render the form\n        this.div = document.createElement(\"div\");\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n        return XfaLayer.render(parameters);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.hidden = true;\n  }\n}\n\n/**\n * @implements IPDFXfaLayerFactory\n */\nclass DefaultXfaLayerFactory {\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {AnnotationStorage} [annotationStorage]\n   * @param {Object} [xfaHtml]\n   */\n  createXfaLayerBuilder(\n    pageDiv,\n    pdfPage,\n    annotationStorage = null,\n    xfaHtml = null\n  ) {\n    return new XfaLayerBuilder({\n      pageDiv,\n      pdfPage,\n      annotationStorage,\n      xfaHtml,\n    });\n  }\n}\n\nexport { DefaultXfaLayerFactory, XfaLayerBuilder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SCROLLBAR_PADDING, ScrollMode, SpreadMode } from \"./ui_utils.js\";\nimport { CursorTool } from \"./pdf_cursor_tools.js\";\nimport { PDFSinglePageViewer } from \"./pdf_single_page_viewer.js\";\n\n/**\n * @typedef {Object} SecondaryToolbarOptions\n * @property {HTMLDivElement} toolbar - Container for the secondary toolbar.\n * @property {HTMLButtonElement} toggleButton - Button to toggle the visibility\n *   of the secondary toolbar.\n * @property {HTMLDivElement} toolbarButtonContainer - Container where all the\n *   toolbar buttons are placed. The maximum height of the toolbar is controlled\n *   dynamically by adjusting the 'max-height' CSS property of this DOM element.\n * @property {HTMLButtonElement} presentationModeButton - Button for entering\n *   presentation mode.\n * @property {HTMLButtonElement} openFileButton - Button to open a file.\n * @property {HTMLButtonElement} printButton - Button to print the document.\n * @property {HTMLButtonElement} downloadButton - Button to download the\n *   document.\n * @property {HTMLLinkElement} viewBookmarkButton - Button to obtain a bookmark\n *   link to the current location in the document.\n * @property {HTMLButtonElement} firstPageButton - Button to go to the first\n *   page in the document.\n * @property {HTMLButtonElement} lastPageButton - Button to go to the last page\n *   in the document.\n * @property {HTMLButtonElement} pageRotateCwButton - Button to rotate the pages\n *   clockwise.\n * @property {HTMLButtonElement} pageRotateCcwButton - Button to rotate the\n *   pages counterclockwise.\n * @property {HTMLButtonElement} cursorSelectToolButton - Button to enable the\n *   select tool.\n * @property {HTMLButtonElement} cursorHandToolButton - Button to enable the\n *   hand tool.\n * @property {HTMLButtonElement} documentPropertiesButton - Button for opening\n *   the document properties dialog.\n */\n\nclass SecondaryToolbar {\n  /**\n   * @param {SecondaryToolbarOptions} options\n   * @param {HTMLDivElement} mainContainer\n   * @param {EventBus} eventBus\n   */\n  constructor(options, mainContainer, eventBus) {\n    this.toolbar = options.toolbar;\n    this.toggleButton = options.toggleButton;\n    this.toolbarButtonContainer = options.toolbarButtonContainer;\n    this.buttons = [\n      {\n        element: options.presentationModeButton,\n        eventName: \"presentationmode\",\n        close: true,\n      },\n      { element: options.openFileButton, eventName: \"openfile\", close: true },\n      { element: options.printButton, eventName: \"print\", close: true },\n      { element: options.downloadButton, eventName: \"download\", close: true },\n      { element: options.viewBookmarkButton, eventName: null, close: true },\n      { element: options.firstPageButton, eventName: \"firstpage\", close: true },\n      { element: options.lastPageButton, eventName: \"lastpage\", close: true },\n      {\n        element: options.pageRotateCwButton,\n        eventName: \"rotatecw\",\n        close: false,\n      },\n      {\n        element: options.pageRotateCcwButton,\n        eventName: \"rotateccw\",\n        close: false,\n      },\n      {\n        element: options.cursorSelectToolButton,\n        eventName: \"switchcursortool\",\n        eventDetails: { tool: CursorTool.SELECT },\n        close: true,\n      },\n      {\n        element: options.cursorHandToolButton,\n        eventName: \"switchcursortool\",\n        eventDetails: { tool: CursorTool.HAND },\n        close: true,\n      },\n      {\n        element: options.scrollVerticalButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.VERTICAL },\n        close: true,\n      },\n      {\n        element: options.scrollHorizontalButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.HORIZONTAL },\n        close: true,\n      },\n      {\n        element: options.scrollWrappedButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.WRAPPED },\n        close: true,\n      },\n      {\n        element: options.spreadNoneButton,\n        eventName: \"switchspreadmode\",\n        eventDetails: { mode: SpreadMode.NONE },\n        close: true,\n      },\n      {\n        element: options.spreadOddButton,\n        eventName: \"switchspreadmode\",\n        eventDetails: { mode: SpreadMode.ODD },\n        close: true,\n      },\n      {\n        element: options.spreadEvenButton,\n        eventName: \"switchspreadmode\",\n        eventDetails: { mode: SpreadMode.EVEN },\n        close: true,\n      },\n      {\n        element: options.documentPropertiesButton,\n        eventName: \"documentproperties\",\n        close: true,\n      },\n    ];\n    this.items = {\n      firstPage: options.firstPageButton,\n      lastPage: options.lastPageButton,\n      pageRotateCw: options.pageRotateCwButton,\n      pageRotateCcw: options.pageRotateCcwButton,\n    };\n\n    this.mainContainer = mainContainer;\n    this.eventBus = eventBus;\n\n    this.opened = false;\n    this.containerHeight = null;\n    this.previousContainerHeight = null;\n\n    this.reset();\n\n    // Bind the event listeners for click, cursor tool, and scroll/spread mode\n    // actions.\n    this._bindClickListeners();\n    this._bindCursorToolsListener(options);\n    this._bindScrollModeListener(options);\n    this._bindSpreadModeListener(options);\n\n    // Bind the event listener for adjusting the 'max-height' of the toolbar.\n    this.eventBus._on(\"resize\", this._setMaxHeight.bind(this));\n\n    // Hide the Scroll/Spread mode buttons, when they're not applicable to the\n    // current `BaseViewer` instance (in particular `PDFSinglePageViewer`).\n    this.eventBus._on(\"baseviewerinit\", evt => {\n      if (evt.source instanceof PDFSinglePageViewer) {\n        this.toolbarButtonContainer.classList.add(\n          \"hiddenScrollModeButtons\",\n          \"hiddenSpreadModeButtons\"\n        );\n      } else {\n        this.toolbarButtonContainer.classList.remove(\n          \"hiddenScrollModeButtons\",\n          \"hiddenSpreadModeButtons\"\n        );\n      }\n    });\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get isOpen() {\n    return this.opened;\n  }\n\n  setPageNumber(pageNumber) {\n    this.pageNumber = pageNumber;\n    this._updateUIState();\n  }\n\n  setPagesCount(pagesCount) {\n    this.pagesCount = pagesCount;\n    this._updateUIState();\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pagesCount = 0;\n    this._updateUIState();\n\n    // Reset the Scroll/Spread buttons too, since they're document specific.\n    this.eventBus.dispatch(\"secondarytoolbarreset\", { source: this });\n  }\n\n  _updateUIState() {\n    this.items.firstPage.disabled = this.pageNumber <= 1;\n    if (document.getElementById(\"previousPage\")) {\n      document.getElementById(\"previousPage\").disabled = this.pageNumber <= 1;\n    }\n    this.items.lastPage.disabled = this.pageNumber >= this.pagesCount;\n    if (document.getElementById(\"nextPage\")) {\n      document.getElementById(\"nextPage\").disabled = this.pageNumber >= this.pagesCount;\n    }\n\n    this.items.pageRotateCw.disabled = this.pagesCount === 0;\n    this.items.pageRotateCcw.disabled = this.pagesCount === 0;\n\n    this.eventBus.dispatch(\"updateuistate\", {\n      source: this,\n      widget: \"SecondaryToolbar\",\n      pageNumber: this.pageNumber,\n      pagesCount: this.pagesCount,\n    });\n  }\n\n  _bindClickListeners() {\n    // Button to toggle the visibility of the secondary toolbar.\n    this.toggleButton.addEventListener(\"click\", this.toggle.bind(this));\n\n    // All items within the secondary toolbar.\n    for (const { element, eventName, close, eventDetails } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          const details = { source: this };\n          for (const property in eventDetails) {\n            details[property] = eventDetails[property];\n          }\n          this.eventBus.dispatch(eventName, details);\n        }\n        if (close) {\n          this.close();\n        }\n      });\n    }\n  }\n\n  _bindCursorToolsListener(buttons) {\n    this.eventBus._on(\"cursortoolchanged\", function ({ tool }) {\n      buttons.cursorSelectToolButton.classList.toggle(\n        \"toggled\",\n        tool === CursorTool.SELECT\n      );\n      buttons.cursorHandToolButton.classList.toggle(\n        \"toggled\",\n        tool === CursorTool.HAND\n      );\n    });\n  }\n\n  _bindScrollModeListener(buttons) {\n    function scrollModeChanged({ mode }) {\n      buttons.scrollVerticalButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.VERTICAL\n      );\n      buttons.scrollHorizontalButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.HORIZONTAL\n      );\n      buttons.scrollWrappedButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.WRAPPED\n      );\n\n      // Temporarily *disable* the Spread buttons when horizontal scrolling is\n      // enabled, since the non-default Spread modes doesn't affect the layout.\n      const isScrollModeHorizontal = mode === ScrollMode.HORIZONTAL;\n      buttons.spreadNoneButton.disabled = isScrollModeHorizontal;\n      buttons.spreadOddButton.disabled = isScrollModeHorizontal;\n      buttons.spreadEvenButton.disabled = isScrollModeHorizontal;\n    }\n    this.eventBus._on(\"scrollmodechanged\", scrollModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        scrollModeChanged({ mode: ScrollMode.VERTICAL });\n      }\n    });\n  }\n\n  _bindSpreadModeListener(buttons) {\n    function spreadModeChanged({ mode }) {\n      buttons.spreadNoneButton.classList.toggle(\n        \"toggled\",\n        mode === SpreadMode.NONE\n      );\n      buttons.spreadOddButton.classList.toggle(\n        \"toggled\",\n        mode === SpreadMode.ODD\n      );\n      buttons.spreadEvenButton.classList.toggle(\n        \"toggled\",\n        mode === SpreadMode.EVEN\n      );\n    }\n    this.eventBus._on(\"spreadmodechanged\", spreadModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        spreadModeChanged({ mode: SpreadMode.NONE });\n      }\n    });\n  }\n\n  open() {\n    if (this.opened) {\n      return;\n    }\n    this.opened = true;\n    // this._setMaxHeight();  modified by ngx-extended-pdf-viewer\n\n    this.toggleButton.classList.add(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"true\");\n    this.toolbar.classList.remove(\"hidden\");\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n    this.opened = false;\n    this.toolbar.classList.add(\"hidden\");\n    this.toggleButton.classList.remove(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"false\");\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setMaxHeight() {\n    if (!this.opened) {\n      return; // Only adjust the 'max-height' if the toolbar is visible.\n    }\n    this.containerHeight = this.mainContainer.clientHeight;\n\n    if (this.containerHeight === this.previousContainerHeight) {\n      return;\n    }\n    this.toolbarButtonContainer.style.maxHeight = `${\n      this.containerHeight - SCROLLBAR_PADDING\n    }px`;\n\n    this.previousContainerHeight = this.containerHeight;\n  }\n}\n\nexport { SecondaryToolbar };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseViewer } from \"./base_viewer.js\";\nimport { shadow } from \"pdfjs-lib\";\n\nclass PDFSinglePageViewer extends BaseViewer {\n  constructor(options) {\n    super(options);\n\n    this.eventBus._on(\"pagesinit\", evt => {\n      // Since the pages are placed in a `DocumentFragment`, make sure that\n      // the current page becomes visible upon loading of the document.\n      this._ensurePageViewVisible();\n    });\n  }\n\n  get _viewerElement() {\n    // Since we only want to display *one* page at a time when using the\n    // `PDFSinglePageViewer`, we cannot append them to the `viewer` DOM element.\n    // Instead, they are placed in a `DocumentFragment`, and only the current\n    // page is displayed in the viewer (refer to `this._ensurePageViewVisible`).\n    return shadow(this, \"_viewerElement\", this._shadowViewer);\n  }\n\n  get _pageWidthScaleFactor() {\n    return 1;\n  }\n\n  _resetView() {\n    super._resetView();\n    this._previousPageNumber = 1;\n    this._shadowViewer = document.createDocumentFragment();\n    this._updateScrollDown = null;\n  }\n\n  _ensurePageViewVisible() {\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const previousPageView = this._pages[this._previousPageNumber - 1];\n\n    const viewerNodes = this.viewer.childNodes;\n    switch (viewerNodes.length) {\n      case 0: // Should *only* occur on initial loading.\n        this.viewer.appendChild(pageView.div);\n        break;\n      case 1: // The normal page-switching case.\n        if (viewerNodes[0] !== previousPageView.div) {\n          throw new Error(\n            \"_ensurePageViewVisible: Unexpected previously visible page.\"\n          );\n        }\n        if (pageView === previousPageView) {\n          break; // The correct page is already visible.\n        }\n        // Switch visible pages, and reset the viewerContainer scroll position.\n        this._shadowViewer.appendChild(previousPageView.div);\n        this.viewer.appendChild(pageView.div);\n\n        this.container.scrollTop = 0;\n        break;\n      default:\n        throw new Error(\n          \"_ensurePageViewVisible: Only one page should be visible at a time.\"\n        );\n    }\n    this._previousPageNumber = this._currentPageNumber;\n  }\n\n  _scrollUpdate() {\n    if (this._updateScrollDown) {\n      this._updateScrollDown();\n    }\n    super._scrollUpdate();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (pageNumber) {\n      // Ensure that `this._currentPageNumber` is correct.\n      this._setCurrentPageNumber(pageNumber);\n    }\n    const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n\n    this._ensurePageViewVisible();\n    // Ensure that rendering always occurs, to avoid showing a blank page,\n    // even if the current position doesn't change when the page is scrolled.\n    this.update();\n\n    super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n\n    // Since scrolling is tracked using `requestAnimationFrame`, update the\n    // scroll direction during the next `this._scrollUpdate` invocation.\n    this._updateScrollDown = () => {\n      this.scroll.down = scrolledDown;\n      this._updateScrollDown = null;\n    };\n  }\n\n  _getVisiblePages() {\n    return this._getCurrentVisiblePage();\n  }\n\n  _updateHelper(visiblePages) {}\n\n  get _isScrollModeHorizontal() {\n    // The Scroll/Spread modes are never used in `PDFSinglePageViewer`.\n    return shadow(this, \"_isScrollModeHorizontal\", false);\n  }\n\n  _updateScrollMode() {}\n\n  _updateSpreadMode() {}\n\n  _getPageAdvance() {\n    return 1;\n  }\n}\n\nexport { PDFSinglePageViewer };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  animationStarted,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_VALUE,\n  MAX_SCALE,\n  MIN_SCALE,\n  noContextMenuHandler,\n} from \"./ui_utils.js\";\n\nconst PAGE_NUMBER_LOADING_INDICATOR = \"visiblePageIsLoading\";\n\n/**\n * @typedef {Object} ToolbarOptions\n * @property {HTMLDivElement} container - Container for the secondary toolbar.\n * @property {HTMLSpanElement} numPages - Label that contains number of pages.\n * @property {HTMLInputElement} pageNumber - Control for display and user input\n *   of the current page number.\n * @property {HTMLSelectElement} scaleSelect - Scale selection control.\n *   Its width is adjusted, when necessary, on UI localization.\n * @property {HTMLOptionElement} customScaleOption - The item used to display\n *   a non-predefined scale.\n * @property {HTMLButtonElement} previous - Button to go to the previous page.\n * @property {HTMLButtonElement} next - Button to go to the next page.\n * @property {HTMLButtonElement} zoomIn - Button to zoom in the pages.\n * @property {HTMLButtonElement} zoomOut - Button to zoom out the pages.\n * @property {HTMLButtonElement} viewFind - Button to open find bar.\n * @property {HTMLButtonElement} openFile - Button to open a new document.\n * @property {HTMLButtonElement} presentationModeButton - Button to switch to\n *   presentation mode.\n * @property {HTMLButtonElement} download - Button to download the document.\n * @property {HTMLAElement} viewBookmark - Element to link current url of\n *   the page view.\n */\n\nclass Toolbar {\n  /**\n   * @param {ToolbarOptions} options\n   * @param {EventBus} eventBus\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(options, eventBus, l10n) {\n    this.toolbar = options.container;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this.buttons = [\n      { element: options.previous, eventName: \"previouspage\" },\n      { element: options.next, eventName: \"nextpage\" },\n      { element: options.zoomIn, eventName: \"zoomin\" },\n      { element: options.zoomOut, eventName: \"zoomout\" },\n      { element: options.openFile, eventName: \"openfile\" },\n      { element: options.print, eventName: \"print\" },\n      {\n        element: options.presentationModeButton,\n        eventName: \"presentationmode\",\n      },\n      { element: options.download, eventName: \"download\" },\n      { element: options.viewBookmark, eventName: null },\n    ];\n    this.items = {\n      numPages: options.numPages,\n      pageNumber: options.pageNumber,\n      scaleSelect: options.scaleSelect,\n      customScaleOption: options.customScaleOption,\n      previous: options.previous,\n      next: options.next,\n      zoomIn: options.zoomIn,\n      zoomOut: options.zoomOut,\n    };\n\n    this._wasLocalized = false;\n    this.reset();\n\n    // Bind the event listeners for click and various other actions.\n    this._bindListeners();\n  }\n\n  setPageNumber(pageNumber, pageLabel) {\n    this.pageNumber = pageNumber;\n    this.pageLabel = pageLabel;\n    this._updateUIState(false);\n  }\n\n  setPagesCount(pagesCount, hasPageLabels) {\n    this.pagesCount = pagesCount;\n    this.hasPageLabels = hasPageLabels;\n    this._updateUIState(true);\n  }\n\n  setPageScale(pageScaleValue, pageScale) {\n    this.pageScaleValue = (pageScaleValue || pageScale).toString();\n    this.pageScale = pageScale;\n    this._updateUIState(false);\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pageLabel = null;\n    this.hasPageLabels = false;\n    this.pagesCount = 0;\n    const defaultZoomOption = PDFViewerApplicationOptions.get('defaultZoomValue');\n    // #556 #543 modified by ngx-extended-pdf-viewer\n    if (defaultZoomOption) {\n      this.pageScaleValue = defaultZoomOption;\n      if (!!Number(defaultZoomOption)) {\n        this.pageScale = Number(defaultZoomOption);\n      }\n    } else {\n      this.pageScaleValue = DEFAULT_SCALE_VALUE;\n      this.pageScale = DEFAULT_SCALE;\n    }\n    // #556 #543 end of modification\n\n    this._updateUIState(true);\n    this.updateLoadingIndicatorState();\n  }\n\n  _bindListeners() {\n    const { pageNumber, scaleSelect } = this.items;\n    const self = this;\n\n    // The buttons within the toolbar.\n    for (const { element, eventName } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          this.eventBus.dispatch(eventName, { source: this });\n        }\n      });\n    }\n    // The non-button elements within the toolbar.\n    pageNumber.addEventListener(\"click\", function () {\n      this.select();\n    });\n    pageNumber.addEventListener(\"change\", function () {\n      self.eventBus.dispatch(\"pagenumberchanged\", {\n        source: self,\n        value: this.value,\n      });\n    });\n\n    scaleSelect.addEventListener(\"change\", function () {\n      if (this.value === \"custom\") {\n        return;\n      }\n      self.eventBus.dispatch(\"scalechanged\", {\n        source: self,\n        value: this.value,\n      });\n    });\n    // Here we depend on browsers dispatching the \"click\" event *after* the\n    // \"change\" event, when the <select>-element changes.\n    scaleSelect.addEventListener(\"click\", function (evt) {\n      const target = evt.target;\n      // Remove focus when an <option>-element was *clicked*, to improve the UX\n      // for mouse users (fixes bug 1300525 and issue 4923).\n      if (\n        this.value === self.pageScaleValue &&\n        target.tagName.toUpperCase() === \"OPTION\"\n      ) {\n        this.blur();\n      }\n    });\n    // Suppress context menus for some controls.\n    scaleSelect.oncontextmenu = noContextMenuHandler;\n\n    this.eventBus._on(\"localized\", () => {\n      this._wasLocalized = true;\n      this._updateUIState(true);\n    });\n  }\n\n  _updateUIState(resetNumPages = false) {\n    if (!this._wasLocalized) {\n      // Don't update the UI state until we localize the toolbar.\n      return;\n    }\n    const { pageNumber, pagesCount, pageScaleValue, pageScale, items } = this;\n\n    if (resetNumPages) {\n      if (this.hasPageLabels) {\n        items.pageNumber.type = \"text\";\n      } else {\n        items.pageNumber.type = \"number\";\n        this.l10n.get(\"of_pages\", { pagesCount }).then(msg => {\n          items.numPages.textContent = msg;\n        });\n      }\n      items.pageNumber.max = pagesCount;\n    }\n\n    if (this.hasPageLabels) {\n      items.pageNumber.value = this.pageLabel;\n      this.l10n.get(\"page_of_pages\", { pageNumber, pagesCount }).then(msg => {\n        items.numPages.textContent = msg;\n      });\n    } else {\n      items.pageNumber.value = pageNumber;\n    }\n\n    items.previous.disabled = pageNumber <= 1;\n    items.next.disabled = pageNumber >= pagesCount;\n\n    items.zoomOut.disabled = pageScale <= MIN_SCALE;\n    items.zoomIn.disabled = pageScale >= MAX_SCALE;\n\n    this.l10n\n      .get(\"page_scale_percent\", { scale: Math.round(pageScale * 10000) / 100 })\n      .then(msg => {\n        let predefinedValueFound = false;\n        for (const option of items.scaleSelect.options) {\n          if (option.value !== pageScaleValue) {\n            option.selected = false;\n            continue;\n          }\n          option.selected = true;\n          predefinedValueFound = true;\n        }\n        if (!predefinedValueFound) {\n          items.customScaleOption.textContent = msg;\n          items.customScaleOption.selected = true;\n        }\n      });\n    this.eventBus.dispatch(\"updateuistate\", {\n      source: this,\n      widget: \"Toolbar\",\n      pageNumber,\n      pagesCount,\n      pageScaleValue,\n      pageScale,\n    });\n  }\n\n  updateLoadingIndicatorState(loading = false) {\n    const pageNumberInput = this.items.pageNumber;\n\n    pageNumberInput.classList.toggle(PAGE_NUMBER_LOADING_INDICATOR, loading);\n  }\n\n  /**\n   * Increase the width of the zoom dropdown DOM element if, and only if, it's\n   * too narrow to fit the *longest* of the localized strings.\n   * @private\n   */\n  async _adjustScaleWidth() {\n    const { items, l10n } = this;\n\n    const predefinedValuesPromise = Promise.all([\n      l10n.get(\"page_scale_auto\"),\n      l10n.get(\"page_scale_actual\"),\n      l10n.get(\"page_scale_fit\"),\n      l10n.get(\"page_scale_width\"),\n    ]);\n\n    const style = getComputedStyle(items.scaleSelect),\n      scaleSelectContainerWidth = parseInt(\n        style.getPropertyValue(\"--scale-select-container-width\"),\n        10\n      ),\n      scaleSelectOverflow = parseInt(\n        style.getPropertyValue(\"--scale-select-overflow\"),\n        10\n      );\n\n    // The temporary canvas is used to measure text length in the DOM.\n    let canvas = document.createElement(\"canvas\");\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    let ctx = canvas.getContext(\"2d\", { alpha: false });\n\n    await animationStarted;\n    ctx.font = `${style.fontSize} ${style.fontFamily}`;\n\n    let maxWidth = 0;\n    for (const predefinedValue of await predefinedValuesPromise) {\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = ctx.measureText(predefinedValue);\n        if (width > maxWidth) {\n          maxWidth = width;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    maxWidth += 2 * scaleSelectOverflow;\n\n    if (maxWidth > scaleSelectContainerWidth) {\n      const doc = document.documentElement;\n      doc.style.setProperty(\"--scale-select-container-width\", `${maxWidth}px`);\n    }\n    // Zeroing the width and height cause Firefox to release graphics resources\n    // immediately, which can greatly reduce memory consumption.\n    canvas.width = 0;\n    canvas.height = 0;\n    canvas = ctx = null;\n  }\n}\n\nexport { Toolbar };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\n\n/**\n * View History - This is a utility for saving various view parameters for\n *                recently opened files.\n *\n * The way that the view parameters are stored depends on how PDF.js is built,\n * for 'gulp <flag>' the following cases exist:\n *  - MOZCENTRAL        - uses sessionStorage.\n *  - GENERIC or CHROME - uses localStorage, if it is available.\n */\nclass ViewHistory {\n  constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) {\n    this.fingerprint = fingerprint;\n    this.cacheSize = cacheSize;\n\n    this._initializedPromise = this._readFromStorage().then(databaseStr => {\n      const database = JSON.parse(databaseStr || \"{}\");\n      let index = -1;\n      if (!Array.isArray(database.files)) {\n        database.files = [];\n      } else {\n        while (database.files.length >= this.cacheSize) {\n          database.files.shift();\n        }\n\n        for (let i = 0, ii = database.files.length; i < ii; i++) {\n          const branch = database.files[i];\n          if (branch.fingerprint === this.fingerprint) {\n            index = i;\n            break;\n          }\n        }\n      }\n      if (index === -1) {\n        index = database.files.push({ fingerprint: this.fingerprint }) - 1;\n      }\n      this.file = database.files[index];\n      this.database = database;\n    });\n  }\n\n  async _writeToStorage() {\n    const databaseStr = JSON.stringify(this.database);\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      sessionStorage.setItem(\"pdfjs.history\", databaseStr);\n      return;\n    }\n    localStorage.setItem(\"pdfjs.history\", databaseStr);\n  }\n\n  async _readFromStorage() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return sessionStorage.getItem(\"pdfjs.history\");\n    }\n    return localStorage.getItem(\"pdfjs.history\");\n  }\n\n  async set(name, val) {\n    await this._initializedPromise;\n    this.file[name] = val;\n    return this._writeToStorage();\n  }\n\n  async setMultiple(properties) {\n    await this._initializedPromise;\n    for (const name in properties) {\n      this.file[name] = properties[name];\n    }\n    return this._writeToStorage();\n  }\n\n  async get(name, defaultValue) {\n    await this._initializedPromise;\n    const val = this.file[name];\n    return val !== undefined ? val : defaultValue;\n  }\n\n  async getMultiple(properties) {\n    await this._initializedPromise;\n    const values = Object.create(null);\n\n    for (const name in properties) {\n      const val = this.file[name];\n      values[name] = val !== undefined ? val : properties[name];\n    }\n    return values;\n  }\n}\n\nexport { ViewHistory };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DefaultExternalServices, PDFViewerApplication } from \"./app.js\";\nimport { BasePreferences } from \"./preferences.js\";\nimport { DownloadManager } from \"./download_manager.js\";\nimport { GenericL10n } from \"./genericl10n.js\";\nimport { GenericScripting } from \"./generic_scripting.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n  throw new Error(\n    'Module \"pdfjs-web/genericcom\" shall not be used outside ' +\n      \"GENERIC build.\"\n  );\n}\n\nconst GenericCom = {};\n\nclass GenericPreferences extends BasePreferences {\n  async _writeToStorage(prefObj) {\n    localStorage.setItem(\"pdfjs.preferences\", JSON.stringify(prefObj));\n  }\n\n  async _readFromStorage(prefObj) {\n    return JSON.parse(localStorage.getItem(\"pdfjs.preferences\"));\n  }\n}\n\nclass GenericExternalServices extends DefaultExternalServices {\n  static createDownloadManager(options) {\n    return new DownloadManager();\n  }\n\n  static createPreferences() {\n    return new GenericPreferences();\n  }\n\n  static createL10n({ locale = \"en-US\" }) {\n    return new GenericL10n(locale);\n  }\n\n  static createScripting({ sandboxBundleSrc }) {\n    return new GenericScripting(sandboxBundleSrc);\n  }\n}\nPDFViewerApplication.externalServices = GenericExternalServices;\n\nexport { GenericCom };\n","/* Copyright 2013 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppOptions, OptionKind } from \"./app_options.js\";\n\n/**\n * BasePreferences - Abstract base class for storing persistent settings.\n *   Used for settings that should be applied to all opened documents,\n *   or every time the viewer is loaded.\n */\nclass BasePreferences {\n  constructor() {\n    if (this.constructor === BasePreferences) {\n      throw new Error(\"Cannot initialize BasePreferences.\");\n    }\n    Object.defineProperty(this, \"defaults\", {\n      value: Object.freeze(\n        typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n          ? AppOptions.getAll(OptionKind.PREFERENCE)\n          : PDFJSDev.eval(\"DEFAULT_PREFERENCES\")\n      ),\n      writable: false,\n      enumerable: true,\n      configurable: false,\n    });\n    this.prefs = Object.create(null);\n\n    this._initializedPromise = this._readFromStorage(this.defaults).then(\n      prefs => {\n        for (const name in this.defaults) {\n          const prefValue = prefs?.[name];\n          // Ignore preferences whose types don't match the default values.\n          if (typeof prefValue === typeof this.defaults[name]) {\n            this.prefs[name] = prefValue;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Stub function for writing preferences to storage.\n   * @param {Object} prefObj The preferences that should be written to storage.\n   * @returns {Promise} A promise that is resolved when the preference values\n   *                    have been written.\n   */\n  async _writeToStorage(prefObj) {\n    throw new Error(\"Not implemented: _writeToStorage\");\n  }\n\n  /**\n   * Stub function for reading preferences from storage.\n   * @param {Object} prefObj The preferences that should be read from storage.\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *                    the preferences that have been read.\n   */\n  async _readFromStorage(prefObj) {\n    throw new Error(\"Not implemented: _readFromStorage\");\n  }\n\n  /**\n   * Reset the preferences to their default values and update storage.\n   * @returns {Promise} A promise that is resolved when the preference values\n   *                    have been reset.\n   */\n  async reset() {\n    await this._initializedPromise;\n    this.prefs = Object.create(null);\n    return this._writeToStorage(this.defaults);\n  }\n\n  /**\n   * Set the value of a preference.\n   * @param {string} name The name of the preference that should be changed.\n   * @param {boolean|number|string} value The new value of the preference.\n   * @returns {Promise} A promise that is resolved when the value has been set,\n   *                    provided that the preference exists and the types match.\n   */\n  async set(name, value) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Set preference: \"${name}\" is undefined.`);\n    } else if (value === undefined) {\n      throw new Error(\"Set preference: no value is specified.\");\n    }\n    const valueType = typeof value;\n    const defaultType = typeof defaultValue;\n\n    if (valueType !== defaultType) {\n      if (valueType === \"number\" && defaultType === \"string\") {\n        value = value.toString();\n      } else {\n        throw new Error(\n          `Set preference: \"${value}\" is a ${valueType}, expected a ${defaultType}.`\n        );\n      }\n    } else {\n      if (valueType === \"number\" && !Number.isInteger(value)) {\n        throw new Error(`Set preference: \"${value}\" must be an integer.`);\n      }\n    }\n    this.prefs[name] = value;\n    return this._writeToStorage(this.prefs);\n  }\n\n  /**\n   * Get the value of a preference.\n   * @param {string} name The name of the preference whose value is requested.\n   * @returns {Promise} A promise resolved with a {boolean|number|string}\n   *                    containing the value of the preference.\n   */\n  async get(name) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name],\n      prefValue = this.prefs[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Get preference: \"${name}\" is undefined.`);\n    }\n    return prefValue !== undefined ? prefValue : defaultValue;\n  }\n\n  /**\n   * Get the values of all preferences.\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *                    the values of all preferences.\n   */\n  async getAll() {\n    await this._initializedPromise;\n    const obj = Object.create(null);\n\n    for (const name in this.defaults) {\n      const prefValue = this.prefs[name];\n      obj[name] = prefValue !== undefined ? prefValue : this.defaults[name];\n    }\n    return obj;\n  }\n}\n\nexport { BasePreferences };\n","/* Copyright 2013 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createObjectURL, createValidAbsoluteUrl, isPdfFile } from \"pdfjs-lib\";\nimport { compatibilityParams } from \"./app_options.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"CHROME || GENERIC\")) {\n  throw new Error(\n    'Module \"pdfjs-web/download_manager\" shall not be used ' +\n      \"outside CHROME and GENERIC builds.\"\n  );\n}\n\nfunction download(blobUrl, filename) {\n  const a = document.createElement(\"a\");\n  if (!a.click) {\n    throw new Error('DownloadManager: \"a.click()\" is not supported.');\n  }\n  a.href = blobUrl;\n  a.target = \"_parent\";\n  // Use a.download if available. This increases the likelihood that\n  // the file is downloaded instead of opened by another PDF plugin.\n  if (\"download\" in a) {\n    a.download = filename;\n  }\n  // <a> must be in the document for recent Firefox versions,\n  // otherwise .click() is ignored.\n  (document.body || document.documentElement).appendChild(a);\n  a.click();\n  a.remove();\n}\n\nclass DownloadManager {\n  constructor() {\n    this._openBlobUrls = new WeakMap();\n  }\n\n  downloadUrl(url, filename) {\n    if (!createValidAbsoluteUrl(url, \"http://example.com\")) {\n      console.error(`downloadUrl - not a valid URL: ${url}`);\n      return; // restricted/invalid URL\n    }\n    download(url + \"#pdfjs.action=download\", filename);\n  }\n\n  downloadData(data, filename, contentType) {\n    const blobUrl = createObjectURL(\n      data,\n      contentType,\n      compatibilityParams.disableCreateObjectURL\n    );\n    download(blobUrl, filename);\n  }\n\n  /**\n   * @returns {boolean} Indicating if the data was opened.\n   */\n  openOrDownloadData(element, data, filename) {\n    const isPdfData = isPdfFile(filename);\n    const contentType = isPdfData ? \"application/pdf\" : \"\";\n\n    if (isPdfData && !compatibilityParams.disableCreateObjectURL) {\n      let blobUrl = this._openBlobUrls.get(element);\n      if (!blobUrl) {\n        blobUrl = URL.createObjectURL(new Blob([data], { type: contentType }));\n        this._openBlobUrls.set(element, blobUrl);\n      }\n      let viewerUrl;\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        // The current URL is the viewer, let's use it and append the file.\n        viewerUrl = \"?file=\" + encodeURIComponent(blobUrl + \"#\" + filename);\n      } else if (PDFJSDev.test(\"CHROME\")) {\n        // In the Chrome extension, the URL is rewritten using the history API\n        // in viewer.js, so an absolute URL must be generated.\n        viewerUrl =\n          // eslint-disable-next-line no-undef\n          chrome.runtime.getURL(\"/content/web/viewer.html\") +\n          \"?file=\" +\n          encodeURIComponent(blobUrl + \"#\" + filename);\n      }\n\n      try {\n        window.open(viewerUrl);\n        return true;\n      } catch (ex) {\n        console.error(`openOrDownloadData: ${ex}`);\n        // Release the `blobUrl`, since opening it failed, and fallback to\n        // downloading the PDF file.\n        URL.revokeObjectURL(blobUrl);\n        this._openBlobUrls.delete(element);\n      }\n    }\n\n    this.downloadData(data, filename, contentType);\n    return false;\n  }\n\n  /**\n   * @param sourceEventType {string} Used to signal what triggered the download.\n   *   The version of PDF.js integrated with Firefox uses this to to determine\n   *   which dialog to show. \"save\" triggers \"save as\" and \"download\" triggers\n   *   the \"open with\" dialog.\n   */\n  download(blob, url, filename, sourceEventType = \"download\") {\n    if (compatibilityParams.disableCreateObjectURL && url) { // #629 modified by ngx-extended-pdf-viewer\n      // URL.createObjectURL is not supported\n        this.downloadUrl(url, filename);\n      return;\n    }\n    const blobUrl = URL.createObjectURL(blob);\n    download(blobUrl, filename);\n  }\n}\n\nexport { DownloadManager };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"../external/webL10n/l10n.js\";\nimport { fixupLangCode, getL10nFallback } from \"./l10n_utils.js\";\n\nconst webL10n = document.webL10n;\n\nclass GenericL10n {\n  constructor(lang) {\n    this._lang = lang;\n    this._ready = new Promise((resolve, reject) => {\n      webL10n.setLanguage(fixupLangCode(lang), () => {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  async getLanguage() {\n    const l10n = await this._ready;\n    return l10n.getLanguage();\n  }\n\n  async getDirection() {\n    const l10n = await this._ready;\n    return l10n.getDirection();\n  }\n\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    const l10n = await this._ready;\n    return l10n.get(key, args, fallback);\n  }\n\n  async translate(element) {\n    const l10n = await this._ready;\n    return l10n.translate(element);\n  }\n}\n\nexport { GenericL10n };\n","/**\n * Copyright (c) 2011-2013 Fabien Cazenave, Mozilla.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n/*\n  Additional modifications for PDF.js project:\n    - Disables language initialization on page loading.\n    - Disables document translation on page loading.\n    - Removes consoleWarn and consoleLog and use console.log/warn directly.\n    - Removes window._ assignment.\n    - Remove compatibility code for OldIE.\n    - Replaces `String.prototype.substr()` with `String.prototype.substring()`.\n    - Removes `fireL10nReadyEvent` since the \"localized\" event it dispatches\n      is unused and may clash with an identically named event in the viewer.\n*/\n\n/*jshint browser: true, devel: true, es5: true, globalstrict: true */\n\"use strict\";\ndocument.webL10n = (function (window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = \"\";\n  var gTextProp = \"textContent\";\n  var gLanguage = \"\";\n  var gMacros = {};\n  var gReadyState = \"loading\";\n\n  /**\n   * Synchronously loading l10n resources significantly minimizes flickering\n   * from displaying the app with non-localized strings and then updating the\n   * strings. Although this will block all script execution on this page, we\n   * expect that the l10n resources are available locally on flash-storage.\n   *\n   * As synchronous XHR is generally considered as a bad idea, we're still\n   * loading l10n resources asynchronously -- but we keep this in a setting,\n   * just in case... and applications using this library should hide their\n   * content until the `localized' event happens.\n   */\n\n  var gAsyncResourceLoading = true; // read-only\n\n  /**\n   * DOM helpers for the so-called \"HTML API\".\n   *\n   * These functions are written for modern browsers. For old versions of IE,\n   * they're overridden in the 'startup' section at the end of this file.\n   */\n\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    // TODO: support multiple and external JSON dictionaries\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll(\"*[data-l10n-id]\") : [];\n  }\n\n  function getL10nAttributes(element) {\n    if (!element) return {};\n\n    var l10nId = element.getAttribute(\"data-l10n-id\");\n    var l10nArgs = element.getAttribute(\"data-l10n-args\");\n    var args = {};\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n        if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n          console.warn(\"could not parse arguments for #\" + l10nId);\n        }\n      }\n    }\n    return { id: l10nId, args: args };\n  }\n\n  function fireL10nReadyEvent(lang) {\n    var evtObject = document.createEvent(\"Event\");\n    evtObject.initEvent(\"localized\", true, false);\n    evtObject.language = lang;\n    document.dispatchEvent(evtObject);\n  }\n\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n    onFailure = onFailure || function _onFailure() {};\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, gAsyncResourceLoading);\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType(\"text/plain; charset=utf-8\");\n    }\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n\n    // in Firefox OS with the app:// protocol, trying to XHR a non-existing\n    // URL will raise an exception here -- hence this ugly try...catch.\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n\n  /**\n   * l10n resource parser:\n   *  - reads (async XHR) the l10n resource matching `lang';\n   *  - imports linked resources (synchronously) when specified;\n   *  - parses the text data (fills `gL10nData' and `gTextData');\n   *  - triggers success/failure callbacks when done.\n   *\n   * @param {string} href\n   *    URL of the l10n resource to parse.\n   *\n   * @param {string} lang\n   *    locale (language) to parse. Must be a lowercase string.\n   *\n   * @param {Function} successCallback\n   *    triggered when the l10n resource has been successfully parsed.\n   *\n   * @param {Function} failureCallback\n   *    triggered when the an error has occurred.\n   *\n   * @return {void}\n   *    uses the following global variables: gL10nData, gTextData, gTextProp.\n   */\n\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, \"\") || \"./\";\n\n    // handle escaped characters (backslashes) in a string\n    function evalString(text) {\n      if (text.lastIndexOf(\"\\\\\") < 0) return text;\n      return text\n        .replace(/\\\\\\\\/g, \"\\\\\")\n        .replace(/\\\\n/g, \"\\n\")\n        .replace(/\\\\r/g, \"\\r\")\n        .replace(/\\\\t/g, \"\\t\")\n        .replace(/\\\\b/g, \"\\b\")\n        .replace(/\\\\f/g, \"\\f\")\n        .replace(/\\\\{/g, \"{\")\n        .replace(/\\\\}/g, \"}\")\n        .replace(/\\\\\"/g, '\"')\n        .replace(/\\\\'/g, \"'\");\n    }\n\n    // parse *.properties text data into an l10n dictionary\n    // If gAsyncResourceLoading is false, then the callback will be called\n    // synchronously. Otherwise it is called asynchronously.\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n\n      // token expressions\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/; // TODO: escape EOLs with '\\'\n\n      // parse the *.properties file into an associative array\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, \"\").split(/[\\r\\n]+/);\n        var currentLang = \"*\";\n        var genericLang = lang.split(\"-\", 1)[0];\n        var skipLang = false;\n        var match = \"\";\n\n        var languagefound = false; // #150\n        function nextEntry() {\n          var genericMatch = undefined; // #150\n\n          // Use infinite loop instead of recursion to avoid reaching the\n          // maximum recursion limit for content with many lines.\n          while (true) {\n            if (!entries.length && genericMatch) {\n              if (!languagefound) {\n                loadImport(genericMatch, nextEntry);\n              } else {\n                nextEntry();\n              } // #150\n              return; // #150\n            } // #150\n            else if (!entries.length) {\n              // #150\n              parsedRawLinesCallback();\n              return;\n            }\n            var line = entries.shift();\n\n            // comment or blank line?\n            if (reComment.test(line)) continue;\n\n            // the extended syntax supports [lang] sections and @import rules\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n              if (match) {\n                // section start?\n                // RFC 4646, section 4.4, \"All comparisons MUST be performed\n                // in a case-insensitive manner.\"\n\n                currentLang = match[1].toLowerCase();\n                skipLang =\n                  currentLang !== \"*\" &&\n                  currentLang !== lang &&\n                  currentLang !== genericLang;\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n              match = reImport.exec(line);\n              if (match) {\n                // @import rule?\n                if (currentLang === \"*\" || currentLang === lang) {\n                  // #150\n                  loadImport(baseURL + match[1], nextEntry);\n                  languagefound = true;\n                  return;\n                } else {\n                  // #150\n                  genericMatch = baseURL + match[1]; // #150\n                } // #150\n              }\n            }\n\n            // key-value pair\n            var tmp = line.match(reSplit);\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n        nextEntry();\n      }\n\n      // import another *.properties file\n      function loadImport(url, callback) {\n        xhrLoadText(\n          url,\n          function (content) {\n            parseRawLines(content, false, callback); // don't allow recursive imports\n          },\n          function () {\n            const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n            if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n              console.warn(url + \" not found.\");\n            }\n            callback();\n          }\n        );\n      }\n\n      // fill the dictionary\n      parseRawLines(text, true, function () {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n\n    // load and parse l10n data (warning: global variables are used here)\n    xhrLoadText(\n      href,\n      function (response) {\n        gTextData += response; // mostly for debug\n\n        // parse *.properties text data into an l10n dictionary\n        parseProperties(response, function (data) {\n          // find attribute descriptions, if any\n          for (var key in data) {\n            var id,\n              prop,\n              index = key.lastIndexOf(\".\");\n            if (index > 0) {\n              // an attribute has been specified\n              id = key.substring(0, index);\n              prop = key.substring(index + 1);\n            } else {\n              // no attribute: assuming text content by default\n              id = key;\n              prop = gTextProp;\n            }\n            if (!gL10nData[id]) {\n              gL10nData[id] = {};\n            }\n            gL10nData[id][prop] = data[key];\n          }\n\n          // trigger callback\n          if (successCallback) {\n            successCallback();\n          }\n        });\n      },\n      failureCallback\n    );\n  }\n\n  // load and parse all resources for the specified locale\n  function loadLocale(lang, callback) {\n    let originalCaseLang = lang;\n    // RFC 4646, section 2.1 states that language tags have to be treated as\n    // case-insensitive. Convert to lowercase for case-insensitive comparisons.\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n\n    callback = callback || function _callback() {};\n\n    clear();\n    gLanguage = lang;\n\n    // check all <link type=\"application/l10n\" href=\"...\" /> nodes\n    // and load the resource files\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n    if (langCount === 0) {\n      // we might have a pre-compiled dictionary instead\n      var dict = getL10nDictionary();\n      if (dict && dict.locales && dict.default_locale) {\n        console.log(\n          \"The PDF viewer uses the pre-compiled language bundle stored in the HTML page.\"\n        );\n        gL10nData = dict.locales[originalCaseLang]; // modified line\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n          for (var anyCaseLang in dict.locales) {\n            originalCaseLang = anyCaseLang; // added line\n            anyCaseLang = anyCaseLang.toLowerCase();\n\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[originalCaseLang]; // modified line\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[originalCaseLang]; // modified line\n            }\n          }\n        }\n        callback();\n      } else {\n        console.log(\n          \"Could not load the translation files for the PDF viewer. Check the flag useBrowserLocale, check the locales subfolder of the assets folder, or add the locale definition to the index.html\"\n        );\n      }\n      // early way out\n      fireL10nReadyEvent(lang);\n      gReadyState = \"complete\";\n      return;\n    }\n\n    // start the callback when all resources are loaded\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n    onResourceLoaded = function () {\n      gResourceCount++;\n      if (gResourceCount >= langCount) {\n        callback();\n        fireL10nReadyEvent(lang);\n        gReadyState = \"complete\";\n      }\n    };\n\n    // load all resource files\n    function L10nResourceLink(link) {\n      var href = link.href;\n      // Note: If |gAsyncResourceLoading| is false, then the following callbacks\n      // are synchronously called.\n      this.load = function (lang, callback) {\n        parseResource(href, lang, callback, function () {\n          const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n          if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n            console.warn(href + \" not found.\");\n            // lang not found, used default resource instead\n            console.warn('\"' + lang + '\" resource not found');\n          }\n          gLanguage = \"\";\n          // Resource not loaded, but we still need to call the callback.\n          callback();\n        });\n      };\n    }\n\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n\n  // clear all l10n data\n  function clear() {\n    gL10nData = {};\n    gTextData = \"\";\n    gLanguage = \"\";\n    // TODO: clear all non predefined macros.\n    // There's no such macro /yet/ but we're planning to have some...\n  }\n\n  /**\n   * Get rules for plural forms (shared with JetPack), see:\n   * http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n   * https://github.com/mozilla/addon-sdk/blob/master/python-lib/plural-rules-generator.p\n   *\n   * @param {string} lang\n   *    locale (language) used.\n   *\n   * @return {Function}\n   *    returns a function that gives the plural form name for a given integer:\n   *       var fun = getPluralRules('en');\n   *       fun(1)    -> 'one'\n   *       fun(0)    -> 'other'\n   *       fun(1000) -> 'other'.\n   */\n\n  function getPluralRules(lang) {\n    var locales2rules = {\n      af: 3,\n      ak: 4,\n      am: 4,\n      ar: 1,\n      asa: 3,\n      az: 0,\n      be: 11,\n      bem: 3,\n      bez: 3,\n      bg: 3,\n      bh: 4,\n      bm: 0,\n      bn: 3,\n      bo: 0,\n      br: 20,\n      brx: 3,\n      bs: 11,\n      ca: 3,\n      cgg: 3,\n      chr: 3,\n      cs: 12,\n      cy: 17,\n      da: 3,\n      de: 3,\n      dv: 3,\n      dz: 0,\n      ee: 3,\n      el: 3,\n      en: 3,\n      eo: 3,\n      es: 3,\n      et: 3,\n      eu: 3,\n      fa: 0,\n      ff: 5,\n      fi: 3,\n      fil: 4,\n      fo: 3,\n      fr: 5,\n      fur: 3,\n      fy: 3,\n      ga: 8,\n      gd: 24,\n      gl: 3,\n      gsw: 3,\n      gu: 3,\n      guw: 4,\n      gv: 23,\n      ha: 3,\n      haw: 3,\n      he: 2,\n      hi: 4,\n      hr: 11,\n      hu: 0,\n      id: 0,\n      ig: 0,\n      ii: 0,\n      is: 3,\n      it: 3,\n      iu: 7,\n      ja: 0,\n      jmc: 3,\n      jv: 0,\n      ka: 0,\n      kab: 5,\n      kaj: 3,\n      kcg: 3,\n      kde: 0,\n      kea: 0,\n      kk: 3,\n      kl: 3,\n      km: 0,\n      kn: 0,\n      ko: 0,\n      ksb: 3,\n      ksh: 21,\n      ku: 3,\n      kw: 7,\n      lag: 18,\n      lb: 3,\n      lg: 3,\n      ln: 4,\n      lo: 0,\n      lt: 10,\n      lv: 6,\n      mas: 3,\n      mg: 4,\n      mk: 16,\n      ml: 3,\n      mn: 3,\n      mo: 9,\n      mr: 3,\n      ms: 0,\n      mt: 15,\n      my: 0,\n      nah: 3,\n      naq: 7,\n      nb: 3,\n      nd: 3,\n      ne: 3,\n      nl: 3,\n      nn: 3,\n      no: 3,\n      nr: 3,\n      nso: 4,\n      ny: 3,\n      nyn: 3,\n      om: 3,\n      or: 3,\n      pa: 3,\n      pap: 3,\n      pl: 13,\n      ps: 3,\n      pt: 3,\n      rm: 3,\n      ro: 9,\n      rof: 3,\n      ru: 11,\n      rwk: 3,\n      sah: 0,\n      saq: 3,\n      se: 7,\n      seh: 3,\n      ses: 0,\n      sg: 0,\n      sh: 11,\n      shi: 19,\n      sk: 12,\n      sl: 14,\n      sma: 7,\n      smi: 7,\n      smj: 7,\n      smn: 7,\n      sms: 7,\n      sn: 3,\n      so: 3,\n      sq: 3,\n      sr: 11,\n      ss: 3,\n      ssy: 3,\n      st: 3,\n      sv: 3,\n      sw: 3,\n      syr: 3,\n      ta: 3,\n      te: 3,\n      teo: 3,\n      th: 0,\n      ti: 4,\n      tig: 3,\n      tk: 3,\n      tl: 4,\n      tn: 3,\n      to: 0,\n      tr: 0,\n      ts: 3,\n      tzm: 22,\n      uk: 11,\n      ur: 3,\n      ve: 3,\n      vi: 0,\n      vun: 3,\n      wa: 4,\n      wae: 3,\n      wo: 0,\n      xh: 3,\n      xog: 3,\n      yo: 0,\n      zh: 0,\n      zu: 3,\n    };\n\n    // utility functions for plural rules methods\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n\n    // list of all plural rules methods:\n    // map an integer to the plural form name to use\n    var pluralRules = {\n      \"0\": function (n) {\n        return \"other\";\n      },\n      \"1\": function (n) {\n        if (isBetween(n % 100, 3, 10)) return \"few\";\n        if (n === 0) return \"zero\";\n        if (isBetween(n % 100, 11, 99)) return \"many\";\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"2\": function (n) {\n        if (n !== 0 && n % 10 === 0) return \"many\";\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"3\": function (n) {\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"4\": function (n) {\n        if (isBetween(n, 0, 1)) return \"one\";\n        return \"other\";\n      },\n      \"5\": function (n) {\n        if (isBetween(n, 0, 2) && n != 2) return \"one\";\n        return \"other\";\n      },\n      \"6\": function (n) {\n        if (n === 0) return \"zero\";\n        if (n % 10 == 1 && n % 100 != 11) return \"one\";\n        return \"other\";\n      },\n      \"7\": function (n) {\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"8\": function (n) {\n        if (isBetween(n, 3, 6)) return \"few\";\n        if (isBetween(n, 7, 10)) return \"many\";\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"9\": function (n) {\n        if (n === 0 || (n != 1 && isBetween(n % 100, 1, 19))) return \"few\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"10\": function (n) {\n        if (isBetween(n % 10, 2, 9) && !isBetween(n % 100, 11, 19))\n          return \"few\";\n        if (n % 10 == 1 && !isBetween(n % 100, 11, 19)) return \"one\";\n        return \"other\";\n      },\n      \"11\": function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14))\n          return \"few\";\n        if (\n          n % 10 === 0 ||\n          isBetween(n % 10, 5, 9) ||\n          isBetween(n % 100, 11, 14)\n        )\n          return \"many\";\n        if (n % 10 == 1 && n % 100 != 11) return \"one\";\n        return \"other\";\n      },\n      \"12\": function (n) {\n        if (isBetween(n, 2, 4)) return \"few\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"13\": function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14))\n          return \"few\";\n        if (\n          (n != 1 && isBetween(n % 10, 0, 1)) ||\n          isBetween(n % 10, 5, 9) ||\n          isBetween(n % 100, 12, 14)\n        )\n          return \"many\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"14\": function (n) {\n        if (isBetween(n % 100, 3, 4)) return \"few\";\n        if (n % 100 == 2) return \"two\";\n        if (n % 100 == 1) return \"one\";\n        return \"other\";\n      },\n      \"15\": function (n) {\n        if (n === 0 || isBetween(n % 100, 2, 10)) return \"few\";\n        if (isBetween(n % 100, 11, 19)) return \"many\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"16\": function (n) {\n        if (n % 10 == 1 && n != 11) return \"one\";\n        return \"other\";\n      },\n      \"17\": function (n) {\n        if (n == 3) return \"few\";\n        if (n === 0) return \"zero\";\n        if (n == 6) return \"many\";\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"18\": function (n) {\n        if (n === 0) return \"zero\";\n        if (isBetween(n, 0, 2) && n !== 0 && n != 2) return \"one\";\n        return \"other\";\n      },\n      \"19\": function (n) {\n        if (isBetween(n, 2, 10)) return \"few\";\n        if (isBetween(n, 0, 1)) return \"one\";\n        return \"other\";\n      },\n      \"20\": function (n) {\n        if (\n          (isBetween(n % 10, 3, 4) || n % 10 == 9) &&\n          !(\n            isBetween(n % 100, 10, 19) ||\n            isBetween(n % 100, 70, 79) ||\n            isBetween(n % 100, 90, 99)\n          )\n        )\n          return \"few\";\n        if (n % 1000000 === 0 && n !== 0) return \"many\";\n        if (n % 10 == 2 && !isIn(n % 100, [12, 72, 92])) return \"two\";\n        if (n % 10 == 1 && !isIn(n % 100, [11, 71, 91])) return \"one\";\n        return \"other\";\n      },\n      \"21\": function (n) {\n        if (n === 0) return \"zero\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"22\": function (n) {\n        if (isBetween(n, 0, 1) || isBetween(n, 11, 99)) return \"one\";\n        return \"other\";\n      },\n      \"23\": function (n) {\n        if (isBetween(n % 10, 1, 2) || n % 20 === 0) return \"one\";\n        return \"other\";\n      },\n      \"24\": function (n) {\n        if (isBetween(n, 3, 10) || isBetween(n, 13, 19)) return \"few\";\n        if (isIn(n, [2, 12])) return \"two\";\n        if (isIn(n, [1, 11])) return \"one\";\n        return \"other\";\n      },\n    };\n\n    // return a function that gives the plural form name for a given integer\n    var index = locales2rules[lang.replace(/-.*$/, \"\")];\n    if (!(index in pluralRules)) {\n      const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n      if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n        console.warn(\"plural form unknown for [\" + lang + \"]\");\n      }\n      return function () {\n        return \"other\";\n      };\n    }\n    return pluralRules[index];\n  }\n\n  // pre-defined 'plural' macro\n  gMacros.plural = function (str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n)) return str;\n\n    // TODO: support other properties (l20n still doesn't...)\n    if (prop != gTextProp) return str;\n\n    // initialize _pluralRules\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n    var index = \"[\" + gMacros._pluralRules(n) + \"]\";\n\n    // try to find a [zero|one|two] key if it's defined\n    if (n === 0 && key + \"[zero]\" in gL10nData) {\n      str = gL10nData[key + \"[zero]\"][prop];\n    } else if (n == 1 && key + \"[one]\" in gL10nData) {\n      str = gL10nData[key + \"[one]\"][prop];\n    } else if (n == 2 && key + \"[two]\" in gL10nData) {\n      str = gL10nData[key + \"[two]\"][prop];\n    } else if (key + index in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if (key + \"[other]\" in gL10nData) {\n      str = gL10nData[key + \"[other]\"][prop];\n    }\n\n    return str;\n  };\n\n  /**\n   * l10n dictionary functions\n   */\n\n  // fetch an l10n object, warn if not found, apply `args' if possible\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n    if (!data) {\n      const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n      if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n        console.warn(\"Translation for the key #\" + key + \" is missing.\");\n      }\n      if (!fallback) {\n        return null;\n      }\n      data = fallback;\n    }\n\n    /** This is where l10n expressions should be processed.\n     * The plan is to support C-style expressions from the l20n project;\n     * until then, only two kinds of simple expressions are supported:\n     *   {[ index ]} and {{ arguments }}.\n     */\n    var rv = {};\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n    return rv;\n  }\n\n  // replace {[macros]} with their values\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length) return str;\n\n    // an index/macro has been found\n    // Note: at the moment, only one parameter is supported\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n\n    // there's no macro parser yet: it has to be defined in gMacros\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n    return str;\n  }\n\n  // replace {{arguments}} with their values\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function (matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n      console.log(\"argument {{\" + arg + \"}} for #\" + key + \" is undefined.\");\n      return matched_text;\n    });\n  }\n\n  // translate an HTML element\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id) return;\n\n    // get the related l10n object\n    var data = getL10nData(l10n.id, l10n.args);\n    if (!data) {\n      const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n      if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n        console.warn(\"#\" + l10n.id + \" is undefined.\");\n      }\n      return;\n    }\n\n    // translate element (TODO: security checks?)\n    if (data[gTextProp]) {\n      // XXX\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        // this element has element children: replace the content of the first\n        // (non-empty) child textNode and clear other child textNodes\n        var children = element.childNodes;\n        var found = false;\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = \"\";\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n        // if no (non-empty) textNode is found, insert a textNode before the\n        // first element child.\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n      delete data[gTextProp];\n    }\n\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n\n  // webkit browsers don't currently support 'children' on SVG elements...\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n    if (typeof element.childElementCount !== \"undefined\") {\n      return element.childElementCount;\n    }\n    var count = 0;\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n    return count;\n  }\n\n  // translate an HTML subtree\n  function translateFragment(element) {\n    element = element || document.documentElement;\n\n    // check all translatable children (= w/ a `data-l10n-id' attribute)\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n\n    // translate element itself if necessary\n    translateElement(element);\n  }\n\n  return {\n    // get a localized string\n    get: function (key, args, fallbackString) {\n      var index = key.lastIndexOf(\".\");\n      var prop = gTextProp;\n      if (index > 0) {\n        // An attribute has been specified\n        prop = key.substring(index + 1);\n        key = key.substring(0, index);\n      }\n      var fallback;\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n      var data = getL10nData(key, args, fallback);\n      if (data && prop in data) {\n        return data[prop];\n      }\n      return \"{{\" + key + \"}}\";\n    },\n\n    // debug\n    getData: function () {\n      return gL10nData;\n    },\n    getText: function () {\n      return gTextData;\n    },\n\n    // get|set the document language\n    getLanguage: function () {\n      return gLanguage;\n    },\n    setLanguage: function (lang, callback) {\n      loadLocale(lang, function () {\n        if (callback) callback();\n      });\n    },\n\n    // get the direction (ltr|rtl) of the current language\n    getDirection: function () {\n      // http://www.w3.org/International/questions/qa-scripts\n      // Arabic, Hebrew, Farsi, Pashto, Urdu\n      var rtlList = [\"ar\", \"he\", \"fa\", \"ps\", \"ur\"];\n      var shortCode = gLanguage.split(\"-\", 1)[0];\n      return rtlList.indexOf(shortCode) >= 0 ? \"rtl\" : \"ltr\";\n    },\n\n    // translate an element or document fragment\n    translate: translateFragment,\n\n    // this can be used to prevent race conditions\n    getReadyState: function () {\n      return gReadyState;\n    },\n    ready: function (callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == \"complete\" || gReadyState == \"interactive\") {\n        window.setTimeout(function () {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener(\"localized\", function once() {\n          document.removeEventListener(\"localized\", once);\n          callback();\n        });\n      }\n    },\n  };\n})(window, document);\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getPdfFilenameFromUrl, loadScript } from \"pdfjs-lib\";\n\nasync function docPropertiesLookup(pdfDocument) {\n  const url = \"\",\n    baseUrl = url.split(\"#\")[0];\n  // eslint-disable-next-line prefer-const\n  let { info, metadata, contentDispositionFilename, contentLength } =\n    await pdfDocument.getMetadata();\n\n  if (!contentLength) {\n    const { length } = await pdfDocument.getDownloadInfo();\n    contentLength = length;\n  }\n\n  return {\n    ...info,\n    baseURL: baseUrl,\n    filesize: contentLength,\n    filename: contentDispositionFilename || getPdfFilenameFromUrl(url),\n    metadata: metadata?.getRaw(),\n    authors: metadata?.get(\"dc:creator\"),\n    numPages: pdfDocument.numPages,\n    URL: url,\n  };\n}\n\nclass GenericScripting {\n  constructor(sandboxBundleSrc) {\n    this._ready = loadScript(\n      sandboxBundleSrc,\n      /* removeScriptElement = */ true\n    ).then(() => {\n      return window.pdfjsSandbox.QuickJSSandbox();\n    });\n  }\n\n  async createSandbox(data) {\n    const sandbox = await this._ready;\n    sandbox.create(data);\n  }\n\n  async dispatchEventInSandbox(event) {\n    const sandbox = await this._ready;\n    sandbox.dispatchEvent(event);\n  }\n\n  async destroySandbox() {\n    const sandbox = await this._ready;\n    sandbox.nukeSandbox();\n  }\n}\n\nexport { docPropertiesLookup, GenericScripting };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationMode, PixelsPerInch } from \"pdfjs-lib\";\nimport { PDFPrintServiceFactory, PDFViewerApplication } from \"./app.js\";\nimport canvasSize from \"canvas-size\";\nimport { compatibilityParams } from \"./app_options.js\";\nimport { getXfaHtmlForPrinting } from \"./print_utils.js\";\n\nlet activeService = null;\nlet overlayManager = null;\n\n// Renders the page to the canvas of the given print service, and returns\n// the suggested dimensions of the output page.\nfunction renderPage(\n  activeServiceOnEntry,\n  pdfDocument,\n  pageNumber,\n  size,\n  printResolution,\n  optionalContentConfigPromise\n) {\n  const scratchCanvas = activeService.scratchCanvas;\n\n  // The size of the canvas in pixels for printing.\n  let PRINT_UNITS = printResolution / PixelsPerInch.PDF;\n\n  // modified by ngx-extended-pdf-viewer #530\n  let scale = 1;\n\n  const canvasWidth = Math.floor(size.width * PRINT_UNITS);\n  const canvasHeight = Math.floor(size.height * PRINT_UNITS);\n  if (canvasWidth >= 4096 || canvasHeight >= 4096) {\n    if (!canvasSize.test({ width: canvasWidth, height: canvasHeight })) {\n      const max = determineMaxDimensions();\n      scale = Math.min(max / canvasWidth, max / canvasHeight) * 0.95;\n    }\n    warn(\"Page \" + pageNumber + \": Reduced the [printResolution] to \" + Math.floor(printResolution * scale) + \" because the browser can't render larger canvases. If you see blank page in the print preview, reduce [printResolution] manually to a lower value.\");\n  }\n\n  PRINT_UNITS *= scale;\n  scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n  scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n\n  const ctx = scratchCanvas.getContext(\"2d\");\n  ctx.save();\n  ctx.fillStyle = \"rgb(255, 255, 255)\";\n  ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n  ctx.restore();\n\n  return pdfDocument.getPage(pageNumber).then(function (pdfPage) {\n    const renderContext = {\n      canvasContext: ctx,\n      transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n      viewport: pdfPage.getViewport({ scale: 1, rotation: size.rotation }),\n      intent: \"print\",\n      annotationMode: AnnotationMode.ENABLE_STORAGE,\n      optionalContentConfigPromise,\n    };\n    return pdfPage.render(renderContext).promise;\n  });\n}\n\n // modified (added) by ngx-extended-pdf-viewer #530\n function determineMaxDimensions() {\n  const checklist = [4096, // iOS\n    8192, // IE 9-10\n    10836, // Android\n    11180, // Firefox\n    11402, // Android,\n    14188,\n    16384\n  ];\n  for (let width of checklist) {\n    if (!canvasSize.test({width: width+1, height: width+1})) {\n      return width;\n    }\n  }\n  return 16384;\n}\n// end of modification\n\nfunction PDFPrintService(\n  pdfDocument,\n  pagesOverview,\n  printContainer,\n  printResolution,\n  optionalContentConfigPromise = null,\n  l10n,\n  eventBus // #588 modified by ngx-extended-pdf-viewer\n) {\n  this.pdfDocument = pdfDocument;\n  this.pagesOverview = pagesOverview;\n  this.printContainer = printContainer;\n  this._printResolution = printResolution || 150;\n  this._optionalContentConfigPromise =\n    optionalContentConfigPromise || pdfDocument.getOptionalContentConfig();\n  this.l10n = l10n;\n  this.currentPage = -1;\n  // The temporary canvas where renderPage paints one page at a time.\n  this.scratchCanvas = document.createElement(\"canvas\");\n\n  // #588 modified by ngx-extended-pdf-viewer\n  this.eventBus = eventBus;\n  // #588 end of modification\n}\n\nPDFPrintService.prototype = {\n  layout() {\n    this.throwIfInactive();\n\n    const body = document.querySelector(\"body\");\n    body.setAttribute(\"data-pdfjsprinting\", true);\n\n    const hasEqualPageSizes = this.pagesOverview.every(function (size) {\n      return (\n        size.width === this.pagesOverview[0].width &&\n        size.height === this.pagesOverview[0].height\n      );\n    }, this);\n    if (!hasEqualPageSizes) {\n      console.warn(\n        \"Not all pages have the same size. The printed \" +\n          \"result may be incorrect!\"\n      );\n    }\n\n    // Insert a @page + size rule to make sure that the page size is correctly\n    // set. Note that we assume that all pages have the same size, because\n    // variable-size pages are not supported yet (e.g. in Chrome & Firefox).\n    // TODO(robwu): Use named pages when size calculation bugs get resolved\n    // (e.g. https://crbug.com/355116) AND when support for named pages is\n    // added (http://www.w3.org/TR/css3-page/#using-named-pages).\n    // In browsers where @page + size is not supported (such as Firefox,\n    // https://bugzil.la/851441), the next stylesheet will be ignored and the\n    // user has to select the correct paper size in the UI if wanted.\n    this.pageStyleSheet = document.createElement(\"style\");\n    const pageSize = this.pagesOverview[0];\n    this.pageStyleSheet.textContent =\n      \"@page { size: \" + pageSize.width + \"pt \" + pageSize.height + \"pt;}\";\n    body.appendChild(this.pageStyleSheet);\n  },\n\n  destroy() {\n    if (activeService !== this) {\n      // |activeService| cannot be replaced without calling destroy() first,\n      // so if it differs then an external consumer has a stale reference to\n      // us.\n      return;\n    }\n    this.printContainer.textContent = \"\";\n\n    const body = document.querySelector(\"body\");\n    body.removeAttribute(\"data-pdfjsprinting\");\n\n    if (this.pageStyleSheet) {\n      this.pageStyleSheet.remove();\n      this.pageStyleSheet = null;\n    }\n    this.scratchCanvas.width = this.scratchCanvas.height = 0;\n    this.scratchCanvas = null;\n    activeService = null;\n    ensureOverlay().then(function () {\n      if (overlayManager.active !== \"printServiceOverlay\") {\n        return; // overlay was already closed\n      }\n      overlayManager.close(\"printServiceOverlay\");\n      overlayManager.unregister(\"printServiceOverlay\"); // #104\n    });\n    overlayPromise = undefined; // #104\n  },\n\n  renderPages() {\n    if (this.pdfDocument.isPureXfa) {\n      getXfaHtmlForPrinting(this.printContainer, this.pdfDocument);\n      return Promise.resolve();\n    }\n\n    const pageCount = this.pagesOverview.length;\n    const renderNextPage = (resolve, reject) => {\n      this.throwIfInactive();\n      while (true) {\n        // #243\n        ++this.currentPage; // #243\n        if (this.currentPage >= pageCount) {\n          // #243\n          break; // #243\n        } // #243\n        if (\n          !window.isInPDFPrintRange ||\n          window.isInPDFPrintRange(this.currentPage)\n        ) {\n          // #243\n          break; // #243\n        } // #243\n      } // #243\n\n      if (this.currentPage >= pageCount) {\n        renderProgress(\n          window.filteredPageCount | pageCount,\n          window.filteredPageCount | pageCount,\n          this.l10n,\n          this.eventBus // #588 modified by ngx-extended-pdf-viewer\n        ); // #243\n        resolve();\n        return;\n      }\n\n      const index = this.currentPage;\n      renderProgress(index, window.filteredPageCount | pageCount, this.l10n, this.eventBus); // #243 and #588 modified by ngx-extended-pdf-viewer\n      renderPage(\n        this,\n        this.pdfDocument,\n        /* pageNumber = */ index + 1,\n        this.pagesOverview[index],\n        this._printResolution,\n        this._optionalContentConfigPromise\n      )\n        .then(this.useRenderedPage.bind(this))\n        .then(function () {\n          renderNextPage(resolve, reject);\n        }, reject);\n    };\n    return new Promise(renderNextPage);\n  },\n\n  useRenderedPage() {\n    this.throwIfInactive();\n    const img = document.createElement(\"img\");\n    const scratchCanvas = this.scratchCanvas;\n    if (\n      \"toBlob\" in scratchCanvas &&\n      !compatibilityParams.disableCreateObjectURL\n    ) {\n      scratchCanvas.toBlob(function (blob) {\n        img.src = URL.createObjectURL(blob);\n      });\n    } else {\n      img.src = scratchCanvas.toDataURL();\n    }\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"printedPage\";\n    wrapper.appendChild(img);\n    this.printContainer.appendChild(wrapper);\n\n    return new Promise(function (resolve, reject) {\n      img.onload = resolve;\n      img.onerror = reject;\n    });\n  },\n\n  performPrint() {\n    this.throwIfInactive();\n    return new Promise(resolve => {\n      // Push window.print in the macrotask queue to avoid being affected by\n      // the deprecation of running print() code in a microtask, see\n      // https://github.com/mozilla/pdf.js/issues/7547.\n      setTimeout(() => {\n        if (!this.active) {\n          resolve();\n          return;\n        }\n        print.call(window);\n        // Delay promise resolution in case print() was not synchronous.\n        setTimeout(resolve, 20); // Tidy-up.\n      }, 0);\n    });\n  },\n\n  get active() {\n    return this === activeService;\n  },\n\n  throwIfInactive() {\n    if (!this.active) {\n      throw new Error(\"This print request was cancelled or completed.\");\n    }\n  },\n};\n\nconst print = window.print;\nwindow.printPDF = function () {\n  if (!PDFViewerApplication.enablePrint) {\n    return;\n  }\n  if (activeService) {\n    console.warn(\"Ignored window.printPDF() because of a pending print job.\");\n    return;\n  }\n  ensureOverlay().then(function () {\n    if (activeService) {\n      overlayManager.open(\"printServiceOverlay\");\n    }\n  });\n\n  try {\n    dispatchEvent(\"beforeprint\");\n  } finally {\n    if (!activeService) {\n      console.error(\"Expected print service to be initialized.\");\n      ensureOverlay().then(function () {\n        if (overlayManager.active === \"printServiceOverlay\") {\n          overlayManager.close(\"printServiceOverlay\");\n        }\n      });\n      return; // eslint-disable-line no-unsafe-finally\n    }\n    const activeServiceOnEntry = activeService;\n    activeService\n      .renderPages()\n      .then(function () {\n        // #643 modified by ngx-extended-pdf-viewer\n        const progressIndicator = document.getElementById(\n          \"printServiceOverlay\"\n        );\n        if (progressIndicator) {\n          progressIndicator.classList.add(\"hidden\");\n        }\n        // #643 end of modification\n        return activeServiceOnEntry.performPrint();\n      })\n      .catch(function () {\n        // Ignore any error messages.\n      })\n      .then(function () {\n        // aborts acts on the \"active\" print request, so we need to check\n        // whether the print request (activeServiceOnEntry) is still active.\n        // Without the check, an unrelated print request (created after aborting\n        // this print request while the pages were being generated) would be\n        // aborted.\n        if (activeServiceOnEntry.active) {\n          abort();\n        }\n      });\n  }\n};\n\nfunction dispatchEvent(eventType) {\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(eventType, false, false, \"custom\");\n  window.dispatchEvent(event);\n}\n\nfunction abort() {\n  if (activeService) {\n    activeService.destroy();\n    dispatchEvent(\"afterprint\");\n  }\n}\n\nfunction renderProgress(index, total, l10n, eventBus) { // #588 modified by ngx-extended-pdf-viewer\n  const progressContainer = document.getElementById(\"printServiceOverlay\");\n  const progress = Math.round((100 * index) / total);\n  const progressBar = progressContainer.querySelector(\"progress\");\n  const progressPerc = progressContainer.querySelector(\".relative-progress\");\n  progressBar.value = progress;\n  l10n.get(\"print_progress_percent\", { progress }).then(msg => {\n    progressPerc.textContent = msg;\n  });\n  // #588 modified by ngx-extended-pdf-viewer\n  eventBus.dispatch(\"progress\", {\n    source: this,\n    type: \"print\",\n    total,\n    page: index,\n    percent: (100 * index) / total,\n  });\n  // #588 end of modification\n}\n\nPDFViewerApplication.printKeyDownListener = function (event) {\n  // Intercept Cmd/Ctrl + P in all browsers.\n  // Also intercept Cmd/Ctrl + Shift + P in Chrome and Opera\n  if (\n    event.keyCode === /* P= */ 80 &&\n    (event.ctrlKey || event.metaKey) &&\n    !event.altKey &&\n    (!event.shiftKey || window.chrome || window.opera)\n  ) {\n    window.printPDF();\n\n    // The (browser) print dialog cannot be prevented from being shown in\n    // IE11.\n    event.preventDefault();\n    if (event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    } else {\n      event.stopPropagation();\n    }\n  }\n};\n\nif (\"onbeforeprint\" in window) {\n  // Do not propagate before/afterprint events when they are not triggered\n  // from within this polyfill. (FF / Chrome 63+).\n  const stopPropagationIfNeeded = function (event) {\n    if (event.detail !== \"custom\" && event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    }\n  };\n  window.addEventListener(\"beforeprint\", stopPropagationIfNeeded);\n  window.addEventListener(\"afterprint\", stopPropagationIfNeeded);\n}\n\nlet overlayPromise;\nfunction ensureOverlay() {\n  if (!overlayPromise) {\n    overlayManager = PDFViewerApplication.overlayManager;\n    if (!overlayManager) {\n      throw new Error(\"The overlay manager has not yet been initialized.\");\n    }\n\n    overlayPromise = overlayManager.register(\n      \"printServiceOverlay\",\n      document.getElementById(\"printServiceOverlay\"),\n      abort,\n      true\n    );\n    document.getElementById(\"printCancel\").onclick = abort;\n  }\n  return overlayPromise;\n}\n\nPDFPrintServiceFactory.instance = {\n  supportsPrinting: true,\n\n  createPrintService(\n    pdfDocument,\n    pagesOverview,\n    printContainer,\n    printResolution,\n    optionalContentConfigPromise,\n    l10n,\n    eventBus // #588 modified by ngx-extended-pdf-viewer\n  ) {\n    if (activeService) {\n      throw new Error(\"The print service is created and active.\");\n    }\n    activeService = new PDFPrintService(\n      pdfDocument,\n      pagesOverview,\n      printContainer,\n      printResolution,\n      optionalContentConfigPromise,\n      l10n,\n      eventBus // #588 modified by ngx-extended-pdf-viewer\n    );\n    return activeService;\n  },\n};\n\nexport { PDFPrintService };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CSS_UNITS } from \"./ui_utils.js\";\nimport { DefaultXfaLayerFactory } from \"./xfa_layer_builder.js\";\nimport { getXfaPageViewport } from \"pdfjs-lib\";\n\nfunction getXfaHtmlForPrinting(printContainer, pdfDocument) {\n  const xfaHtml = pdfDocument.allXfaHtml;\n  const factory = new DefaultXfaLayerFactory();\n  const scale = Math.round(CSS_UNITS * 100) / 100;\n\n  for (const xfaPage of xfaHtml.children) {\n    const page = document.createElement(\"div\");\n    page.className = \"xfaPrintedPage\";\n    printContainer.appendChild(page);\n\n    const builder = factory.createXfaLayerBuilder(\n      /* pageDiv = */ page,\n      /* pdfPage = */ null,\n      /* annotationStorage = */ pdfDocument.annotationStorage,\n      /* xfaHtml = */ xfaPage\n    );\n    const viewport = getXfaPageViewport(xfaPage, { scale });\n\n    builder.render(viewport, \"print\");\n  }\n}\n\nexport { getXfaHtmlForPrinting };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppOptions } from \"./app_options.js\";\nimport { PDFViewerApplication } from \"./app.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nwindow.PDFViewerApplication = PDFViewerApplication;\nwindow.PDFViewerApplicationOptions = AppOptions;\n\n// modified by ngx-extended-pdf-viewer\nif (!HTMLCollection.prototype[Symbol.iterator]) {\n  HTMLCollection.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n}\n(function () {\n  if (typeof window.CustomEvent === \"function\") {\n    return;\n  }\n\n  function CustomEvent(event, params) {\n    params = params || { bubbles: false, cancelable: false, detail: null };\n    const evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(\n      event,\n      params.bubbles,\n      params.cancelable,\n      params.detail\n    );\n    return evt;\n  }\n\n  window.CustomEvent = CustomEvent;\n})();\n// end of modification\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n  var defaultUrl; // eslint-disable-line no-var\n\n  (function rewriteUrlClosure() {\n    // Run this code outside DOMContentLoaded to make sure that the URL\n    // is rewritten as soon as possible.\n    const queryString = document.location.search.slice(1);\n    const m = /(^|&)file=([^&]*)/.exec(queryString);\n    defaultUrl = m ? decodeURIComponent(m[2]) : \"\";\n\n    // Example: chrome-extension://.../http://example.com/file.pdf\n    const humanReadableUrl = \"/\" + defaultUrl + location.hash;\n    history.replaceState(history.state, \"\", humanReadableUrl);\n    if (top === window) {\n      // eslint-disable-next-line no-undef\n      chrome.runtime.sendMessage(\"showPageAction\");\n    }\n  })();\n}\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  require(\"./firefoxcom.js\");\n  require(\"./firefox_print_service.js\");\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  require(\"./genericcom.js\");\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n  require(\"./chromecom.js\");\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME || GENERIC\")) {\n  require(\"./pdf_print_service.js\");\n}\n\nfunction getViewerConfiguration() {\n  let errorWrapper = null;\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n    errorWrapper = {\n      container: document.getElementById(\"errorWrapper\"),\n      errorMessage: document.getElementById(\"errorMessage\"),\n      closeButton: document.getElementById(\"errorClose\"),\n      errorMoreInfo: document.getElementById(\"errorMoreInfo\"),\n      moreInfoButton: document.getElementById(\"errorShowMore\"),\n      lessInfoButton: document.getElementById(\"errorShowLess\"),\n    };\n  }\n\n  return {\n    appContainer: document.body,\n    mainContainer: document.getElementById(\"viewerContainer\"),\n    viewerContainer: document.getElementById(\"viewer\"),\n    eventBus: null,\n    toolbar: {\n      container: document.getElementById(\"toolbarViewer\"),\n      numPages: document.getElementById(\"numPages\"),\n      pageNumber: document.getElementById(\"pageNumber\"),\n      scaleSelect: document.getElementById(\"scaleSelect\"),\n      customScaleOption: document.getElementById(\"customScaleOption\"),\n      previous: document.getElementById(\"previous\"),\n      next: document.getElementById(\"next\"),\n      zoomIn: document.getElementById(\"zoomIn\"),\n      zoomOut: document.getElementById(\"zoomOut\"),\n      viewFind: document.getElementById(\"viewFind\"),\n      openFile: document.getElementById(\"openFile\"),\n      print: document.getElementById(\"print\"),\n      presentationModeButton: document.getElementById(\"presentationMode\"),\n      download: document.getElementById(\"download\"),\n      viewBookmark: document.getElementById(\"viewBookmark\"),\n    },\n    secondaryToolbar: {\n      toolbar: document.getElementById(\"secondaryToolbar\"),\n      toggleButton: document.getElementById(\"secondaryToolbarToggle\"),\n      toolbarButtonContainer: document.getElementById(\n        \"secondaryToolbarButtonContainer\"\n      ),\n      presentationModeButton: document.getElementById(\n        \"secondaryPresentationMode\"\n      ),\n      openFileButton: document.getElementById(\"secondaryOpenFile\"),\n      printButton: document.getElementById(\"secondaryPrint\"),\n      downloadButton: document.getElementById(\"secondaryDownload\"),\n      viewBookmarkButton: document.getElementById(\"secondaryViewBookmark\"),\n      firstPageButton: document.getElementById(\"firstPage\"),\n      lastPageButton: document.getElementById(\"lastPage\"),\n      pageRotateCwButton: document.getElementById(\"pageRotateCw\"),\n      pageRotateCcwButton: document.getElementById(\"pageRotateCcw\"),\n      cursorSelectToolButton: document.getElementById(\"cursorSelectTool\"),\n      cursorHandToolButton: document.getElementById(\"cursorHandTool\"),\n      scrollVerticalButton: document.getElementById(\"scrollVertical\"),\n      scrollHorizontalButton: document.getElementById(\"scrollHorizontal\"),\n      scrollWrappedButton: document.getElementById(\"scrollWrapped\"),\n      spreadNoneButton: document.getElementById(\"spreadNone\"),\n      spreadOddButton: document.getElementById(\"spreadOdd\"),\n      spreadEvenButton: document.getElementById(\"spreadEven\"),\n      documentPropertiesButton: document.getElementById(\"documentProperties\"),\n    },\n    sidebar: {\n      // Divs (and sidebar button)\n      outerContainer: document.getElementById(\"outerContainer\"),\n      viewerContainer: document.getElementById(\"viewerContainer\"),\n      toggleButton: document.getElementById(\"sidebarToggle\"),\n      // Buttons\n      thumbnailButton: document.getElementById(\"viewThumbnail\"),\n      outlineButton: document.getElementById(\"viewOutline\"),\n      attachmentsButton: document.getElementById(\"viewAttachments\"),\n      layersButton: document.getElementById(\"viewLayers\"),\n      // Views\n      thumbnailView: document.getElementById(\"thumbnailView\"),\n      outlineView: document.getElementById(\"outlineView\"),\n      attachmentsView: document.getElementById(\"attachmentsView\"),\n      layersView: document.getElementById(\"layersView\"),\n      // View-specific options\n      outlineOptionsContainer: document.getElementById(\n        \"outlineOptionsContainer\"\n      ),\n      currentOutlineItemButton: document.getElementById(\"currentOutlineItem\"),\n    },\n    sidebarResizer: {\n      outerContainer: document.getElementById(\"outerContainer\"),\n      resizer: document.getElementById(\"sidebarResizer\"),\n    },\n    findBar: {\n      bar: document.getElementById(\"findbar\"),\n      toggleButton: document.getElementById(\"viewFind\"),\n      findField: document.getElementById(\"findInput\"),\n      findFieldMultiline: document.getElementById(\"findInputMultiline\"), // #201\n      highlightAllCheckbox: document.getElementById(\"findHighlightAll\"),\n      caseSensitiveCheckbox: document.getElementById(\"findMatchCase\"),\n      entireWordCheckbox: document.getElementById(\"findEntireWord\"),\n      findMultipleSearchTextsCheckbox: document.getElementById(\n        \"findMultipleSearchTexts\"\n      ), // #201\n      ignoreAccentsCheckbox: document.getElementById(\"findIgnoreAccents\"), // #177\n      fuzzyCheckbox: document.getElementById(\"findFuzzy\"), // #304\n      findMsg: document.getElementById(\"findMsg\"),\n      findResultsCount: document.getElementById(\"findResultsCount\"),\n      findPreviousButton: document.getElementById(\"findPrevious\"),\n      findNextButton: document.getElementById(\"findNext\"),\n    },\n    passwordOverlay: {\n      overlayName: \"passwordOverlay\",\n      container: document.getElementById(\"passwordOverlay\"),\n      label: document.getElementById(\"passwordText\"),\n      input: document.getElementById(\"password\"),\n      submitButton: document.getElementById(\"passwordSubmit\"),\n      cancelButton: document.getElementById(\"passwordCancel\"),\n    },\n    documentProperties: {\n      overlayName: \"documentPropertiesOverlay\",\n      container: document.getElementById(\"documentPropertiesOverlay\"),\n      closeButton: document.getElementById(\"documentPropertiesClose\"),\n      fields: {\n        fileName: document.getElementById(\"fileNameField\"),\n        fileSize: document.getElementById(\"fileSizeField\"),\n        title: document.getElementById(\"titleField\"),\n        author: document.getElementById(\"authorField\"),\n        subject: document.getElementById(\"subjectField\"),\n        keywords: document.getElementById(\"keywordsField\"),\n        creationDate: document.getElementById(\"creationDateField\"),\n        modificationDate: document.getElementById(\"modificationDateField\"),\n        creator: document.getElementById(\"creatorField\"),\n        producer: document.getElementById(\"producerField\"),\n        version: document.getElementById(\"versionField\"),\n        pageCount: document.getElementById(\"pageCountField\"),\n        pageSize: document.getElementById(\"pageSizeField\"),\n        linearized: document.getElementById(\"linearizedField\"),\n      },\n    },\n    errorWrapper,\n    printContainer: document.getElementById(\"printContainer\"),\n    openFileInputName: \"fileInput\",\n    debuggerScriptPath: \"./debugger.js\",\n  };\n}\n\nfunction webViewerLoad() {\n  const config = getViewerConfiguration();\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n    Promise.all([\n      import(\"pdfjs-web/genericcom.js\"),\n      import(\"pdfjs-web/pdf_print_service.js\"),\n    ]).then(function ([genericCom, pdfPrintService]) {\n      PDFViewerApplication.run(config);\n    });\n  } else {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n      AppOptions.set(\"defaultUrl\", defaultUrl);\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      // Give custom implementations of the default viewer a simpler way to\n      // set various `AppOptions`, by dispatching an event once all viewer\n      // files are loaded but *before* the viewer initialization has run.\n      const event = document.createEvent(\"CustomEvent\");\n      event.initCustomEvent(\"webviewerloaded\", true, true, {\n        source: window,\n      });\n      try {\n        // Attempt to dispatch the event at the embedding `document`,\n        // in order to support cases where the viewer is embedded in\n        // a *dynamically* created <iframe> element.\n        parent.document.dispatchEvent(event);\n      } catch (ex) {\n        // The viewer could be in e.g. a cross-origin <iframe> element,\n        // fallback to dispatching the event at the current `document`.\n        console.error(`webviewerloaded: ${ex}`);\n        document.dispatchEvent(event);\n      }\n    }\n\n    PDFViewerApplication.run(config);\n  }\n}\n\n// Block the \"load\" event until all pages are loaded, to ensure that printing\n// works in Firefox; see https://bugzilla.mozilla.org/show_bug.cgi?id=1618553\nif (document.blockUnblockOnload) {\n  document.blockUnblockOnload(true);\n}\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  if (\n    document.readyState === \"interactive\" ||\n    document.readyState === \"complete\"\n  ) {\n    webViewerLoad();\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", webViewerLoad, true);\n  }\n} else {\n  window.webViewerLoad = webViewerLoad;\n}\n\nexport { PDFViewerApplication, AppOptions as PDFViewerApplicationOptions };\n"],"names":["compatibilityParams","Object","userAgent","navigator","platform","maxTouchPoints","isAndroid","isIOS","isIOSChrome","OptionKind","VIEWER","API","WORKER","PREFERENCE","defaultOptions","annotationMode","value","kind","cursorToolOnLoad","defaultUrl","defaultZoomValue","disableHistory","disablePageLabels","enablePermissions","enablePrintAutoRotate","enableScripting","externalLinkRel","externalLinkTarget","historyUpdateUrl","ignoreDestinationZoom","imageResourcesPath","maxCanvasPixels","compatibility","pdfBugEnabled","printResolution","removePageBorders","renderer","sidebarViewOnLoad","scrollModeOnLoad","spreadModeOnLoad","textLayerMode","useOnlyCssZoom","viewerCssTheme","viewOnLoad","cMapPacked","cMapUrl","disableAutoFetch","disableFontFace","disableRange","disableStream","docBaseUrl","enableXfa","fontExtraProperties","isEvalSupported","maxImageSize","pdfBug","standardFontDataUrl","verbosity","workerPort","workerSrc","userOptions","constructor","get","userOption","defaultOption","getAll","options","valueType","Number","set","setAll","remove","DEFAULT_SCALE_DELTA","DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT","FORCE_PAGES_LOADED_TIMEOUT","WHEEL_ZOOM_DISABLED_TIMEOUT","ENABLE_PERMISSIONS_CLASS","ViewOnLoad","UNKNOWN","PREVIOUS","INITIAL","ViewerCssTheme","AUTOMATIC","LIGHT","DARK","KNOWN_VERSIONS","KNOWN_GENERATORS","updateFindControlState","updateFindMatchesCount","initPassiveLoading","fallback","reportTelemetry","createDownloadManager","createPreferences","createL10n","createScripting","supportsIntegratedFind","shadow","supportsDocumentFonts","supportedMouseWheelZoomModifierKeys","ctrlKey","metaKey","isInAutomation","PDFViewerApplication","initialBookmark","document","_initializedCapability","_fellback","appConfig","pdfDocument","pdfLoadingTask","printService","pdfViewer","pdfThumbnailViewer","pdfRenderingQueue","pdfPresentationMode","pdfDocumentProperties","pdfLinkService","pdfHistory","pdfSidebar","pdfSidebarResizer","pdfOutlineViewer","pdfAttachmentViewer","pdfLayerViewer","pdfCursorTools","pdfScriptingManager","store","downloadManager","overlayManager","preferences","toolbar","secondaryToolbar","eventBus","l10n","isInitialViewSet","downloadComplete","isViewerEmbedded","window","url","baseUrl","_downloadUrl","externalServices","_boundEvents","documentInfo","metadata","_contentDispositionFilename","_contentLength","_saveInProgress","_wheelUnusedTicks","_idleCallbacks","AppOptions","LinkTarget","appContainer","source","console","reason","hash","params","parseQueryString","waitOn","loadFakeWorker","TextLayerMode","viewer","enabled","initPDFBug","Promise","locale","dir","_forceCssTheme","cssTheme","styleSheet","cssRules","mediaMatcher","mediaRule","mediaRegex","i","ii","rule","darkRules","findController","linkService","pageViewMode","sandboxBundleSrc","scriptingFactory","docPropertiesLookup","container","renderingQueue","scriptingManager","renderInteractiveForms","elements","run","zoomIn","newScale","maxScale","Math","zoomOut","minScale","zoomReset","PDFPrintServiceFactory","initializeLoadingBar","bar","setTitleUsingUrl","downloadUrl","title","getPdfFilenameFromUrl","decodeURIComponent","getFilenameFromUrl","setTitle","_hideViewBookmark","_cancelIdleCallbacks","sourceEventType","promises","webViewerResetPermissions","PDFBug","workerParameters","GlobalWorkerOptions","parameters","file","apiParameters","key","args","loadingTask","getDocument","loaded","type","percent","exception","msg","message","_ensureDownloadComplete","filename","data","blob","downloadOrSave","download","_documentError","moreInfo","_otherError","moreInfoText","version","build","stack","line","errorWrapperConfig","errorWrapper","errorMessage","closeButton","errorMoreInfo","moreInfoButton","lessInfoButton","parts","progress","level","isNaN","clearTimeout","load","firstPagePromise","pageLayoutPromise","pageModePromise","openActionPromise","baseDocumentUrl","storedPromise","page","zoom","scrollLeft","scrollTop","rotation","sidebarView","SidebarView","scrollMode","ScrollMode","spreadMode","SpreadMode","pdfPage","fingerprint","initialDest","openAction","stored","parseInt","pageMode","apiPageModeToSidebarView","pageLayout","apiPageLayoutToSpreadMode","resolve","setTimeout","pagesPromise","onePageRendered","outline","attachments","optionalContentConfig","callback","timeout","once","baseURL","filesize","authors","numPages","URL","markInfo","tagged","triggerAutoPrint","javaScript","js","UNSUPPORTED_FEATURES","AutoPrintRegExp","PDFViewerApplicationOptions","info","pdfTitle","metadataTitle","contentDispositionFilename","versionId","generatorId","producer","generator","formType","labels","numLabels","_initializePdfHistory","resetHistory","updateUrl","JSON","explicitDest","pageNumber","permissions","PermissionFlag","_initializeAnnotationStorageCallbacks","annotationStorage","setInitialView","setRotation","angle","isValidRotation","setViewerModes","isValidScrollMode","isValidSpreadMode","defaultZoomOption","_cleanup","RendererType","forceRendering","beforePrint","pagesOverview","printContainer","optionalContentConfigPromise","afterPrint","rotatePages","requestPresentationMode","triggerPrinting","bindEvents","bindWindowEvents","event","detail","passive","unbindEvents","unbindWindowEvents","accumulateWheelTicks","ticks","wholeTicks","_unblockDocumentLoadEvent","HOSTED_VIEWER_ORIGINS","validateFileURL","viewerOrigin","origin","protocol","ex","loadScript","PDFWorker","OPS","Stats","pageView","pageStats","fileInput","files","evt","webViewerOpenFileViaURL","thumbnailView","view","webViewerSave","location","settings","href","currentPage","loading","RenderingStates","currentScaleValue","webViewerFileInputChange","originalUrl","fileReader","buffer","webViewerOpenFile","openFileInputName","query","phraseSearch","caseSensitive","entireWord","ignoreAccents","fuzzySearch","highlightAll","findPrevious","result","pageNumberInput","pageScrollEvent","setZoomDisabledTimeout","zoomDisabledTimeout","cmd","previousScale","delta","normalizeWheelEventDirection","WheelEvent","PIXELS_PER_LINE_SCALE","currentScale","scaleCorrectionFactor","rect","dx","dy","handled","ensureViewerFocused","isViewerInPresentationMode","findState","curElement","curElementTagName","turnPage","turnOnlyIfPageFit","CursorTool","instance","supportsPrinting","createPrintService","CSS_UNITS","PixelsPerInch","DEFAULT_SCALE_VALUE","DEFAULT_SCALE","MIN_SCALE","MAX_SCALE","UNKNOWN_SCALE","MAX_AUTO_SCALE","SCROLLBAR_PADDING","VERTICAL_PADDING","LOADINGBAR_END_OFFSET_VAR","PresentationModeState","NORMAL","CHANGING","FULLSCREEN","NONE","THUMBS","OUTLINE","ATTACHMENTS","LAYERS","CANVAS","SVG","DISABLE","ENABLE","ENABLE_ENHANCE","VERTICAL","HORIZONTAL","WRAPPED","ODD","EVEN","devicePixelRatio","backingStoreRatio","ctx","pixelRatio","sx","sy","scaled","scrollMatches","infiniteScroll","element","parent","offsetY","offsetX","getComputedStyle","spot","debounceScroll","rAF","currentX","viewAreaElement","lastX","state","currentY","lastY","right","down","_eventHandler","param","part","minIndex","maxIndex","items","condition","currentIndex","currentItem","xinv","limit","x_","x","a","b","c","d","p","q","r","changeOrientation","rotate","width","height","index","elt","views","pageTop","sortByVisibility","horizontal","rtl","top","scrollEl","bottom","left","elementBottom","elementLeft","elementRight","visible","numViews","firstVisibleElementInd","binarySearchFirstItem","backtrackBeforeAllVisibleElements","lastEdge","currentWidth","currentHeight","viewWidth","viewHeight","viewRight","viewBottom","hiddenHeight","hiddenWidth","fractionHeight","fractionWidth","id","y","widthPercent","first","last","pc","MOUSE_DOM_DELTA_PIXEL_MODE","MOUSE_DOM_DELTA_LINE_MODE","MOUSE_PIXELS_PER_LINE","MOUSE_LINES_PER_PAGE","mode","size","WaitOnType","EVENT","TIMEOUT","delay","target","eventHandler","handler","timeoutHandler","animationStarted","on","external","off","dispatch","eventListeners","Array","listener","externalListeners","_on","_off","units","_updateBar","progressSize","clamp","setWidth","scrollbarWidth","doc","hide","show","moved","len","arr","write","read","curRoot","curActiveOrFocused","module","SELECT","HAND","ZOOM","activeTool","switchTool","tool","disableActiveTool","_dispatchEvent","_addEventListeners","previouslyActive","overlay","GrabToPan","CSS_CLASS_GRAB","activate","deactivate","toggle","ignoreTarget","node","_onmousedown","isOverPerfectScrollbar","focusedElement","_onmousemove","isLeftMouseReleased","xDiff","yDiff","behavior","_endPan","chrome","isChrome15OrOpera15plus","isSafari6plus","perfectScrollbar","CLEANUP_TIMEOUT","RUNNING","PAUSED","FINISHED","setViewer","setThumbnailViewer","isHighestPriority","hasViewer","renderHighestPriority","getHighestPriority","visibleViews","numVisible","nextPageIndex","previousPageIndex","isViewFinished","renderView","active","register","callerCloseMethod","canForceClose","unregister","open","close","_keyDown","_closeThroughCaller","e","passwordIncorrect","PasswordResponses","verify","password","setUpdateCallback","reset","keepRenderedCapability","attachmentsCount","_bindLink","render","names","fragment","item","content","div","_appendAttachment","renderedPromise","TREEITEM_OFFSET_TOP","TREEITEM_SELECTED_CLASS","_normalizeTextContent","removeNullCharacters","_addToggleButton","hidden","toggler","shouldShowAll","_toggleTreeItem","root","_toggleAllTreeItems","_finishRendering","hasAnyNesting","_updateCurrentTreeItem","treeItem","_scrollToCurrentTreeItem","currentNode","DEFAULT_FIELD_CONTENT","NON_METRIC_LOCALES","US_PAGE_NAMES","METRIC_PAGE_NAMES","isPortrait","pageNames","freezeFieldData","writable","enumerable","configurable","currentPageNumber","pagesRotation","getPageSizeInches","author","subject","keywords","creator","pageCount","linearized","_currentPageNumber","_pagesRotation","contentLength","setDocument","_reset","_updateUI","_parseFileSize","fileSize","kb","mb","size_mb","size_kb","size_b","_parsePageSize","pageSizeInches","isPortraitOrientation","sizeInches","sizeMillimeters","rawName","getPageName","exactMillimeters","intMillimeters","name","_parseDate","dateObject","PDFDateString","date","time","_parseLinearization","isLinearized","MATCHES_COUNT_LIMIT","dispatchEvent","updateUIState","findMsg","status","FindState","previous","updateResultsCount","current","total","matchCountMsg","_adjustWidth","findbarHeight","inputContainerHeight","FOUND","NOT_FOUND","PENDING","FIND_TIMEOUT","MATCH_SCROLL_OFFSET_TOP","MATCH_SCROLL_OFFSET_LEFT","CHARACTERS_TO_NORMALIZE","normalizationRegex","replace","diffs","normalizedText","normalizedCh","diff","ch","totalDiff","matchIndex","highlightMatches","pageMatches","pageMatchesColor","pageMatchesLength","selected","executeCommand","findbarClosed","pendingTimeout","scrollMatchIntoView","selectedLeft","pageIndex","scrollIntoView","pageIdx","matchIdx","wrapped","_query","normalize","_shouldDirtyMatch","_prepareMatches","currentElem","matchesWithLength","nextElem","prevElem","isSubTerm","matches","matchesLength","matchesColor","_isEntireWord","startIdx","getCharacterType","endIdx","_calculateFuzzyMatch","queryLen","shortLen","maxDistance","shortQuery","useCollator","pageContent","shortCurrentContent","Levenshtein","currentContent","distance","nextCurrentContent","nextDistance","originalMatchIdx","getOriginalIndex","matchEnd","originalQueryLen","_calculatePhraseMatch","deburr","_calculateWordMatch","queryArray","subquery","subqueryLen","match","matchLength","skipped","color","_calculateMatch","pageDiffs","pageMatchesCount","_extractText","promise","extractTextCapability","normalizeWhitespace","textContent","textItems","strBuf","j","jj","_updatePage","_updateAllPages","_nextMatch","currentPageIndex","offset","numPageMatches","_matchesReady","numMatches","_nextPageMatch","_advanceOffsetPage","_updateMatch","found","previousPage","_onFindBarClose","_requestMatchesCount","_updateUIResultsCount","matchesCount","_updateUIState","rawQuery","INFINITY","symbolTag","reLatin","rsComboMarksRange","rsComboSymbolsRange","rsCombo","reComboMark","RegExp","deburredLetters","freeGlobal","global","freeSelf","self","Function","object","deburrLetter","basePropertyOf","objectProto","objectToString","Symbol","symbolProto","symbolToString","isSymbol","isObjectLike","baseToString","string","toString","CharacterType","SPACE","ALPHA_LETTER","PUNCT","HAN_LETTER","KATAKANA_LETTER","HIRAGANA_LETTER","HALFWIDTH_KATAKANA_LETTER","THAI_LETTER","charCode","isAlphabeticalScript","isAscii","isAsciiSpace","isAsciiAlpha","isAsciiDigit","isThai","isHan","isKatakana","isHiragana","isHalfwidthKatakana","levenshtein_collator","Intl","sensitivity","levenshtein_prevRow","levenshtein_str2Char","str1Len","str1","str2Len","str2","nextCol","curCol","strCmp","String","tmp","HASH_CHANGE_TIMEOUT","POSITION_UPDATED_THRESHOLD","UPDATE_VIEWAREA_TIMEOUT","initialize","reInitialized","getCurrentHash","destination","push","namedDest","forceReplace","isDestArraysEqual","dest","pushPage","pushCurrentPosition","back","forward","popStateInProgress","initialRotation","_pushOrReplaceState","shouldReplace","newState","uid","newUrl","_tryPushCurrentPosition","temporary","position","_isValidPage","val","_isValidState","checkReload","performance","perfEntry","_updateInternalState","removeTemporary","_parseCurrentHash","checkNameddest","unescape","nameddest","_updateViewarea","_popState","newHash","hashChanged","waitOnEventOrTimeout","_pageHide","_bindEvents","updateViewarea","popState","pageHide","_unbindEvents","destHash","second","isEntryEqual","firstDest","secondDest","setVisibility","input","_setNestedName","groups","queue","layersCount","levelData","itemsDiv","groupId","group","label","_resetLayers","setHistory","pagesCount","_goToDestinationHelper","destRef","destArray","goToDestination","goToPage","getDestinationHash","escape","str","getAnchorUrl","setHash","zoomArgs","zoomArg","zoomArgNumber","parseFloat","allowNegativeOffset","isValidExplicitDestination","executeNamedAction","cachePageRef","refStr","pageRef","_cachedPageNumber","isPageVisible","isPageCached","destLength","allowNull","outlineCount","currentOutlineItemPromise","addLinkAttributes","newWindow","rel","_setStyles","count","totalCount","nestedCount","nestedItems","_currentOutlineItem","pageNumberToDestHash","linkElement","_getPageNumberToDestHash","pageNumberNesting","nesting","currentNesting","DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS","DELAY_BEFORE_HIDING_CONTROLS","ACTIVE_SELECTOR","CONTROLS_SELECTOR","MOUSE_SCROLL_COOLDOWN_TIME","PAGE_SWITCH_THRESHOLD","SWIPE_MIN_DISTANCE_THRESHOLD","SWIPE_ANGLE_THRESHOLD","request","Element","_mouseWheel","normalizeWheelEventDelta","currentTime","Date","storedTime","totalDelta","success","isFullscreen","_notifyStateChange","_setSwitchInProgress","_resetSwitchInProgress","_enter","_exit","_prepareFullscreenMode","domElement","siblings","s","_tidyUpFullscreenMode","_mouseDown","isInternalLink","_contextMenu","_showControls","_hideControls","_resetMouseScrollState","_touchSwipe","startX","startY","endX","endY","absAngle","_addWindowListeners","_removeWindowListeners","_fullscreenChange","_addFullscreenChangeListeners","_removeFullscreenChangeListeners","error","docProperties","appInfo","language","docInfo","actions","dispatchWillSave","dispatchDidSave","dispatchWillPrint","dispatchDidPrint","mouseState","destroyPromise","ready","_internalEvents","_domEvents","_pageOpenPending","_visitedPages","_updateFromSandbox","isInPresentationMode","ids","_dispatchPageOpen","visitedPages","actionsPromise","_dispatchPageClose","_getDocProperties","_createScripting","_destroyScripting","UI_NOTIFICATION_CLASS","visibleView","isThumbnailViewVisible","isOutlineViewVisible","isAttachmentsViewVisible","isLayersViewVisible","switchView","forceOpen","_switchView","isViewChanged","shouldForceRendering","_forceRendering","_updateThumbnailViewer","_showUINotification","_hideUINotification","onTreeLoaded","button","SIDEBAR_WIDTH_VAR","SIDEBAR_MIN_WIDTH","SIDEBAR_RESIZING_CLASS","outerContainerWidth","_updateWidth","maxWidth","_mouseMove","_mouseUp","updated","THUMBNAIL_SCROLL_MARGIN","THUMBNAIL_SELECTED_CLASS","watchScroll","_scrollUpdated","getThumbnail","_getVisibleThumbs","scrollThumbnailIntoView","prevThumbnailView","visibleThumbs","numVisibleThumbs","shouldScroll","updateArgs","thumbnail","cleanup","TempImageFactory","_resetView","firstPdfPage","viewport","scale","checkSetImageDisabled","pageNum","defaultViewport","firstThumbnailView","_cancelRendering","setPageLabels","_ensurePdfPageLoaded","thumbView","DRAW_UPSCALE_FACTOR","MAX_NUM_SCALING_STEPS","THUMBNAIL_CANVAS_BORDER_WIDTH","THUMBNAIL_WIDTH","tempCanvasCache","getCanvas","tempCanvas","alpha","destroyCanvas","pageWidth","pageHeight","pageRatio","createThumbnail","anchor","thumbPageTitlePromise","pdfThumbnailView","ring","borderAdjustment","setPdfPage","totalRotation","update","cancelRendering","_getPageDrawContext","upscaleFactor","canvas","outputScale","getOutputScale","transform","_convertCanvasToImage","reducedCanvas","image","draw","finishRenderTask","renderTask","drawViewport","renderContinueCallback","cont","renderContext","canvasContext","resultPromise","pageCached","setImage","_reduceImage","img","reducedWidth","reducedHeight","reducedImageCtx","_thumbPageTitle","_thumbPageCanvas","setPageLabel","_viewerElement","_scrollIntoView","pageSpot","pageDiv","_getVisiblePages","_updateHelper","currentId","stillFullyVisible","currentPageIsVisible","visiblePages","DEFAULT_CACHE_SIZE","pageIdsToKeep","iMax","pagesToKeep","moveToEndOfArray","viewerVersion","AnnotationMode","getPageView","pageViewsReady","renderForms","flip","hidePagesDependingOnpageViewMode","showIt","page1","htmlParentElement","showCover","_setCurrentPageNumber","resetCurrentPageView","pv","pageLabel","ensureAdjecentPagesAreLoaded","nextPage","currentPageLabel","_onePageRenderedOrForceFetch","isPureXfa","textLayerFactory","annotationLayerFactory","xfaLayerFactory","textHighlighterFactory","structTreeLayerFactory","firstPageView","getPagesLeft","_scrollUpdate","_setScaleUpdatePages","noScroll","preset","newValue","isSameScale","presetValue","_pageWidthScaleFactor","_setScale","noPadding","verticalPadding","hPadding","vPadding","pageWidthScale","pageHeightScale","horizontalScale","_resetCurrentPageView","pageLabelToPageNumber","scrollPageIntoView","widthScale","heightScale","boundingRect","_updateLocation","normalizedScaleValue","firstPage","pdfOpenParams","currentPageView","topLeft","intLeft","intTop","numVisiblePages","newCacheSize","containsElement","focus","_isScrollModeHorizontal","_isContainerRtl","isChangingPresentationMode","isHorizontalScrollbarEnabled","isVerticalScrollbarEnabled","_getCurrentVisiblePage","pageViews","currentlyVisiblePages","scrollAhead","createTextLayerBuilder","enhanceTextSelection","createTextHighlighter","createAnnotationLayerBuilder","hasJSActionsPromise","createXfaLayerBuilder","createStructTreeLayerBuilder","hasEqualPageSizes","getPagesOverview","_updateScrollMode","_updateSpreadMode","pages","parity","spread","_getPageAdvance","yArray","expectedId","firstId","lastId","advance","intent","hasJSActions","annotations","dontFlip","AnnotationLayer","cancel","DEFAULT_L10N_STRINGS","of_pages","page_of_pages","document_properties_kb","document_properties_mb","document_properties_date_string","document_properties_page_size_unit_inches","document_properties_page_size_unit_millimeters","document_properties_page_size_orientation_portrait","document_properties_page_size_orientation_landscape","document_properties_page_size_name_a3","document_properties_page_size_name_a4","document_properties_page_size_name_letter","document_properties_page_size_name_legal","document_properties_page_size_dimension_string","document_properties_page_size_dimension_name_string","document_properties_linearized_yes","document_properties_linearized_no","print_progress_percent","additional_layers","page_landmark","thumb_page_title","thumb_page_canvas","find_reached_top","find_reached_bottom","find_not_found","error_version_info","error_message","error_stack","error_file","error_line","rendering_error","page_scale_width","page_scale_fit","page_scale_auto","page_scale_actual","page_scale_percent","loading_error","invalid_file_error","missing_file_error","unexpected_response_error","printing_not_supported","printing_not_ready","web_fonts_disabled","PARTIAL_LANG_CODES","en","es","fy","ga","gu","hi","hy","nb","ne","nn","pa","pt","sv","zh","langCode","NullL10n","getL10nFallback","formatL10nValue","area","hardAngle","hardDrawingAngle","setDensity","setDrawingDensity","setPosition","setAngle","setArea","setHardDrawingAngle","setHardAngle","setOrientation","getDrawingDensity","getDensity","getHardAngle","pagePos","simpleDraw","orient","drawLoader","shiftPos","middlePoint","newTemporaryCopy","getTemporaryCopy","hideTemporaryCopy","destroy","createSpread","start","getSpread","getSpreadIndexByPage","getPageCount","getPages","getPage","nextBy","idx","prevBy","getFlippingPage","direction","getBottomPage","showNext","showPrev","getCurrentPageIndex","spreadIndex","getCurrentSpreadIndex","setCurrentSpreadIndex","newIndex","showSpread","GetDistanceBetweenTwoPoint","point1","point2","GetSegmentLength","Helper","segment","GetAngleBetweenTwoLine","A1","line1","A2","line2","B1","B2","PointInRect","pos","GetRotatedPoint","transformedPoint","startPoint","LimitPointToCircle","n","limitedPoint","m","GetIntersectBetweenTwoSegment","GetIntersectBeetwenTwoLine","one","two","C1","C2","det1","det2","isFinite","GetCordsFromTwoPoint","sizeX","pointOne","pointTwo","sizeY","lengthLine","c2","c1","getCord","density","tempDensity","commonStyle","drawHard","newStyle","drawSoft","polygon","g","getElement","orientation","pageElement","calc","getFlippingClipArea","clipBottom","getBottomClipArea","getAngle","getRect","getPosition","getActiveCorner","getDirection","getFlippingProgress","getCorner","getBottomPagePosition","getShadowStartPoint","getShadowAngle","calcAngleAndPosition","updateAngleAndGeometry","calculateAngle","da","getPageRect","getRectFromBasePoint","points","topRight","bottomLeft","bottomRight","getRotatedPoint","calculateIntersectPoint","boundRect","checkPositionAtCenterLine","rad","checkPointOne","checkPointTwo","bottomPoint","getSegmentToShadowLine","fold","topMargins","yStart","yDest","bookPos","flipCorner","prevPage","do","flipToPage","next","flipNext","corner","flipPrev","stopMove","showCorner","fixedCornerSize","animateFlippingTo","needReset","frames","duration","getCalculation","getState","setState","getDirectionByPoint","touchPos","getAnimationDuration","defaultTime","checkDirection","getBoundsRect","checkState","isPointOnCorners","operatingDistance","regex","frameIndex","loop","timer","requestAnimationFrame","startAnimation","durationFrame","startedAt","finishAnimation","calculateBoundsRect","blockWidth","ratio","setShadowData","maxShadowOpacity","opacity","clearShadow","getBlockWidth","getBlockHeight","getSettings","getOrientation","setPageRect","setDirection","setRightPage","setLeftPage","setBottomPage","setFlippingPage","convertToBook","isSafari","convertToPage","convertToGlobal","convertRectToGlobal","inCanvas","getContext","reload","drawFrame","drawBookShadow","shadowSize","shadowPos","outerGradient","drawOuterShadow","drawInnerShadow","pageRect","isw","innerGradient","clear","t","point","isSwipe","distY","inBlock","k","setting","getDistElement","getWrapper","setOrientationStyle","removeHandlers","setHandlers","getMousePos","checkTarget","targer","updateItems","resizeCanvas","cs","trigger","createShadows","testShadow","drawHardInnerShadow","innerShadowSize","drawHardOuterShadow","shadowTranslate","shadowDirection","clip","drawLeftPage","drawRightPage","drawBottomPage","startPage","minWidth","minHeight","maxHeight","drawShadow","flippingTime","usePortrait","startZIndex","autoSize","mobileScrollSupport","swipeDistance","clickEventForward","useMouseEvents","showPageCorners","disableFlipByClick","ref","insertAt","head","style","css_248z","styleInject","loadFromImages","loadFromHTML","updateFromImages","updateFromHtml","turnToPrevPage","turnToNextPage","turnToPage","updateState","updatePageIndex","updateOrientation","getRender","getFlipController","getUI","getPageCollection","startUserTouch","userMove","userStop","MAX_CANVAS_PIXELS","_renderAnnotationLayer","_renderXfaLayer","_buildXfaTextContentItems","text","_resetZoomLayer","removeFromDOM","zoomLayerCanvas","keepZoomLayer","keepAnnotationLayer","keepXfaLayer","childNodes","zoomLayerNode","annotationLayerNode","xfaLayerNode","arguments","redrawAnnotationLayer","redrawXfaLayer","cssTransform","timestamp","isScalingRestricted","relativeRotation","absRotation","scaleX","scaleY","textLayerViewport","textRelativeRotation","textAbsRotation","textLayerDiv","transX","transY","getPagePoint","canvasWrapper","textLayer","finishPaintTask","paintTask","readableStream","includeMarkedContent","tree","treeDom","paintOnCanvas","renderCapability","onRenderContinue","isCanvasHidden","showCanvas","actualSizeViewport","pixelsInViewport","sfx","approximateFraction","sfy","roundToDivide","max","divisor","warn","paintOnSvg","cancelled","ensureNotCancelled","opList","svgGfx","svg","wrapper","determineMaxDimensions","checklist","obj","keys","symbols","ownKeys","_defineProperty","sourceKeys","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","iter","_i","_arr","_n","_d","_s","_e","o","arr2","fill","job","isWorker","cropCvs","testCvs","cropCtx","testCtx","isTestPass","benchmark","postMessage","canvasTest","testSizes","defaults","min","sizes","step","usePromise","useWorker","onError","onSuccess","workerJobs","isArea","isWidth","isHeight","testMin","testStep","testSize","hasCanvasSupport","hasOffscreenCanvasSupport","jobID","_onError","_onSuccess","settingsWithoutCallbacks","worker","blobURL","_e$data","promiseSettings","_objectSpread2","isLastTest","_settings$sizes$slice","_settings$sizes$slice2","_slicedToArray","_settings$sizes$slice3","lastWidth","lastHeight","reject","canvasSize","maxArea","_toConsumableArray","handleMethod","test","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","RenderingIntentFlag","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","ENABLE_FORMS","ENABLE_STORAGE","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","StreamType","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","base","other","absoluteUrl","_isValidProtocol","BaseException","NullCharactersRegExp","assert","bytes","length","MAX_ARGUMENT_COUNT","chunkEnd","chunk","resultLength","arrayByteLength","stringToBytes","itemLength","buffer8","view32","IsLittleEndianCached","isLittleEndian","IsEvalSupportedCached","hexNumbers","makeHexColor","m1","m2","applyTransform","xt","yt","applyInverseTransform","getAxialAlignedBoundingBox","p1","Util","p2","p3","p4","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","normalizeRect","intersect","orderedX","rect1","rect2","orderedY","PDFStringTranslateTable","code","buf","char","encodeURIComponent","arr1","capability","isSettled","contentType","forceDataSchema","digits","b1","b2","b3","d1","d2","d3","d4","isNodeJS","PDF_ROLE_TO_HTML_ROLE","Document","DocumentFragment","Part","Sect","Div","Aside","NonStruct","P","H","Title","FENote","Sub","Lbl","Span","Em","Strong","Link","Annot","Form","Ruby","RB","RT","RP","Warichu","WT","L","LI","LBody","Table","TR","TH","TD","THead","TBody","TFoot","Caption","Figure","Formula","Artifact","HEADING_PATTERN","_setAttributes","structElement","htmlElement","_walk","role","setTextMapping","enable","disable","_convertMatches","iIndex","end","textContentItemsStr","mm","begin","divIdx","_renderMatches","isSelectedPage","selectedMatchIdx","prevEnd","infinity","textDivs","appendTextToDiv","Node","span","className","i0","i1","isSelected","highlightSuffix","n0","n1","_updateMatches","clearedUntilDivIdx","EXPAND_DIVS_TIMEOUT","highlighter","endOfContent","numTextDivs","textLayerFrag","textContentStream","setTextContentStream","setTextContent","_bindMouse","expandDivsTimer","adjustTop","divBounds","xfa","XfaLayer","xfaHtml","eventName","eventDetails","lastPage","pageRotateCw","pageRotateCcw","isOpen","setPageNumber","setPagesCount","widget","_bindClickListeners","details","_bindCursorToolsListener","buttons","_bindScrollModeListener","isScrollModeHorizontal","scrollModeChanged","_bindSpreadModeListener","spreadModeChanged","_setMaxHeight","_ensurePageViewVisible","previousPageView","viewerNodes","scrolledDown","PAGE_NUMBER_LOADING_INDICATOR","scaleSelect","customScaleOption","setPageScale","_bindListeners","resetNumPages","pageScale","predefinedValueFound","option","updateLoadingIndicatorState","_adjustScaleWidth","predefinedValuesPromise","scaleSelectContainerWidth","scaleSelectOverflow","DEFAULT_VIEW_HISTORY_CACHE_SIZE","cacheSize","databaseStr","database","branch","_writeToStorage","localStorage","_readFromStorage","setMultiple","properties","getMultiple","values","GenericCom","prefs","prefValue","defaultValue","defaultType","createValidAbsoluteUrl","downloadData","blobUrl","createObjectURL","openOrDownloadData","isPdfData","isPdfFile","viewerUrl","webL10n","fixupLangCode","getLanguage","translate","gL10nData","gTextData","gTextProp","gLanguage","gMacros","gReadyState","gAsyncResourceLoading","script","l10nId","l10nArgs","evtObject","onFailure","xhr","dictionary","reBlank","reComment","reSection","reImport","reSplit","entries","rawText","currentLang","genericLang","lang","skipLang","languagefound","genericMatch","loadImport","nextEntry","parsedRawLinesCallback","evalString","xhrLoadText","parseRawLines","parsedPropertiesCallback","parseProperties","prop","successCallback","originalCaseLang","langLinks","getL10nResourceLinks","langCount","dict","getL10nDictionary","defaultLocale","anyCaseLang","fireL10nReadyEvent","onResourceLoaded","gResourceCount","link","parseResource","resource","locales2rules","af","ak","am","ar","asa","az","be","bem","bez","bg","bh","bm","bn","bo","br","brx","bs","ca","cgg","chr","cy","de","dv","dz","ee","el","eo","et","eu","fa","ff","fi","fil","fo","fr","fur","gd","gl","gsw","guw","gv","ha","haw","he","hr","hu","ig","is","it","iu","ja","jmc","jv","ka","kab","kaj","kcg","kde","kea","kk","kl","km","kn","ko","ksb","ksh","ku","kw","lag","lb","lg","ln","lo","lt","lv","mas","mg","mk","ml","mn","mo","mr","ms","mt","my","nah","naq","nd","nl","no","nr","nso","ny","nyn","om","or","pap","pl","ps","rm","ro","rof","ru","rwk","sah","saq","se","seh","ses","sg","sh","shi","sk","sl","sma","smi","smj","smn","sms","sn","so","sq","sr","ss","ssy","st","sw","syr","ta","te","teo","th","ti","tig","tk","tl","tn","to","tr","ts","tzm","uk","ur","ve","vi","vun","wa","wae","wo","xh","xog","yo","zu","list","pluralRules","isBetween","getPluralRules","rv","substIndexes","substArguments","reIndex","reMatch","macroName","paramName","macro","reArgs","arg","getL10nAttributes","getL10nData","getChildElementCount","children","l","textNode","getTranslatableChildren","elementCount","translateElement","getData","getText","setLanguage","loadLocale","rtlList","shortCode","getReadyState","createSandbox","sandbox","dispatchEventInSandbox","destroySandbox","activeService","scratchCanvas","PRINT_UNITS","canvasWidth","canvasHeight","PDFPrintService","layout","body","pageSize","ensureOverlay","overlayPromise","renderPages","getXfaHtmlForPrinting","renderNextPage","renderProgress","renderPage","useRenderedPage","performPrint","print","throwIfInactive","activeServiceOnEntry","progressIndicator","abort","progressContainer","progressBar","progressPerc","stopPropagationIfNeeded","factory","builder","getXfaPageViewport","pdfjsVersion","pdfjsBuild","HTMLCollection","bubbles","cancelable","require","mainContainer","viewerContainer","viewFind","openFile","presentationModeButton","viewBookmark","toggleButton","toolbarButtonContainer","openFileButton","printButton","downloadButton","viewBookmarkButton","firstPageButton","lastPageButton","pageRotateCwButton","pageRotateCcwButton","cursorSelectToolButton","cursorHandToolButton","scrollVerticalButton","scrollHorizontalButton","scrollWrappedButton","spreadNoneButton","spreadOddButton","spreadEvenButton","documentPropertiesButton","sidebar","outerContainer","thumbnailButton","outlineButton","attachmentsButton","layersButton","outlineView","attachmentsView","layersView","outlineOptionsContainer","currentOutlineItemButton","sidebarResizer","resizer","findBar","findField","findFieldMultiline","highlightAllCheckbox","caseSensitiveCheckbox","entireWordCheckbox","findMultipleSearchTextsCheckbox","ignoreAccentsCheckbox","fuzzyCheckbox","findResultsCount","findPreviousButton","findNextButton","passwordOverlay","overlayName","submitButton","cancelButton","documentProperties","fields","fileName","creationDate","modificationDate","debuggerScriptPath","config","getViewerConfiguration"],"sourceRoot":""}