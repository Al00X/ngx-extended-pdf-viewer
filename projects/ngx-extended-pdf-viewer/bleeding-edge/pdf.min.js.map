{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","deprecated","details","Window","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","window","filenameForDownload","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","getXfaPageViewport","xfaPage","scale","rotation","width","height","style","viewBox","parseInt","PageViewport","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","error","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","_base_factory","PixelsPerInch","CSS","PDF","PDF_TO_CSS_UNITS","shadow","DOMCanvasFactory","BaseCanvasFactory","constructor","ownerDocument","globalThis","super","_document","_createCanvas","canvas","createElement","async","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","fetch","ok","statusText","Uint8Array","stringToBytes","text","request","XMLHttpRequest","DONE","data","responseText","DOMCMapReaderFactory","BaseCMapReaderFactory","_fetchData","isCompressed","then","cMapData","compressionType","DOMStandardFontDataFactory","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","type","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","name","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","baseUrl","protocol","URL","pdfDateStringRegex","PDFDateString","static","input","isString","RegExp","matches","year","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","reason","createValidAbsoluteUrl","options","dots","tryConvertEncoding","stringToUTF8String","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","console","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","replaceInvisible","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","utf8StringToString","unescape","encodeURIComponent","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","cond","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","InvisibleCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","r","g","b","m1","m2","p","m","d","p1","p2","p3","p4","transpose","a","c","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","mt","j","jlen","escape","create","context","reset","canvasAndContext","destroy","CMapCompressionType","catch","svg","_display_utils","_font_loader","_node_utils","_annotation_storage","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","baseHref","params","rangeTransport","worker","href","location","Buffer","isNaN","docBaseUrl","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","cMapUrl","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","standardFontDataUrl","idCounters","doc","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","fingerprints","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","getAnnotations","intent","intentArgs","getRenderingIntent","cacheKey","renderingIntent","set","annotations","annotation","_jsActionsPromise","getPageJSActions","children","render","canvasContext","viewport","annotationMode","AnnotationMode","imageLayer","canvasFactory","background","optionalContentConfigPromise","annotationCanvasMap","arguments","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","intentPrint","RenderingIntentFlag","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","sendWithStream","combineTextItems","highWaterMark","textContent","getTextContent","getXfa","xfa","XfaText","readableStream","reader","getReader","items","styles","pump","done","getStructTree","_structTreePromise","_destroy","pageCache","waitOn","values","force","completed","cancel","clear","resetStats","_startRenderPage","_renderPageChunk","operatorListChunk","streamReader","setTimeout","curCacheKey","curIntentState","delete","stats","LoopbackPort","_listeners","_deferred","postMessage","event","cloneValue","object","structuredClone","transfers","cloned","WeakMap","fallbackCloneValue","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","require","pdfjsFilePath","wrapper","_workerPorts","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","WorkerMessageHandler","workerHandler","has","_setupFakeWorkerGlobal","loader","mainWorkerMessageHandler","eval","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","CMapReaderFactory","cMapPacked","StandardFontDataFactory","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","AnnotationStorage","isOpList","lastModified","page","hasOwnProperty","resetModified","terminated","_getFieldObjectsPromise","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","featureId","serializable","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","compiledGlyphs","translatedData","cssFontInfo","css","weight","fontWeight","italicAngle","FontFace","fontFamily","mimetype","getPathGenerator","character","cmds","jsBuf","current","args","__non_webpack_require__","fs","Canvas","process","nw","versions","electron","_storage","_timeStamp","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","modified","entry","_setModified","setFormValue","radioValue","getAll","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","canvasEntry","trackTransform","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","intersect","Infinity","getClippedPathBoundingBox","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","layerBox","layerOffsetX","layerOffsetY","layerWidth","layerHeight","genericComposeSMask","maskCtx","subtype","backdrop","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","chunkSize","row","chunkHeight","getImageSmoothingEnabled","interpolate","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","markedContentStack","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","_cachedGetSinglePixelWidth","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","executionStartIdx","argsArrayLen","chunkOperations","continueCallback","endTime","steps","fnId","OPS","depObjId","objsPool","drawImage","endLayout","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","inverseTransform","heightScale","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","normalizeRect","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","inverse","lineCap","lineJoin","miterLimit","limit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","checkSMaskState","inSMaskMode","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","mirrorContextOperations","_removeMirroring","bezierCurveTo","beginPath","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","__originalTransform","__originalSetTransform","__originalResetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","cp1x","cp1y","cp2x","cp2y","compose","dirtyBox","clearRect","startX","startY","ops","xw","yh","consumePath","getPattern","getSinglePixelWidth","needRestore","paths","pendingTextPaths","path","spacing","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","showType3Text","glyphs","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","operatorListId","transformed","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","strokeStyle","matrix","getShadingPattern","SHADING","inv","bl","br","ul","ur","bbox","currentCtx","group","isolated","knockout","currentTransform","canvasBounds","scaleX","scaleY","groupCtx","startTransformInverse","imageSmoothingEnabled","currentMtx","getAxialAlignedBoundingBox","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","savedCtx","COMPILE_TYPE3_GLYPHS","compileType3Glyph","POINT_TYPES","width1","j0","points","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","position","getCanvasPosition","appendImage","left","top","visible","tag","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","RadialAxialShadingPattern","MeshShadingPattern","DummyShadingPattern","applyBoundingBox","Path2D","region","BaseShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","colorStop","ownerBBox","owner","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","boundsWidth","boundsHeight","combinedScale","paddedWidth","BORDER_SIZE","paddedHeight","backgroundColor","matrixScale","temporaryPatternCanvas","PaintType","MAX_PATTERN_SIZE","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","maxSize","realOutputSize","bboxWidth","bboxHeight","cssColor","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","streamController","_deleteStreamController","allSettled","metadataMap","parsedData","rawData","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","output","walk","node","child","_scripting_utils","_xfa_layer","DEFAULT_TAB_INDEX","GetElementsByNameSet","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","_fieldObjects","fieldObjects","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","titleObj","modificationDate","contentsObj","richText","hideWrapper","_renderQuadrilaterals","quadrilateral","className","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","platform","isWin","isMac","isTooltipOnly","resetForm","actions","Action","newWindow","_bindNamedAction","_bindLink","hasClickAction","_bindJSAction","_bindResetFormAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","onclick","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","storage","allIds","valueAsString","Event","hasPopup","toLowerCase","JSON","alternativeText","title","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_setBackgroundColor","_dispatchEventFromSandbox","setColor","styleName","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","storedData","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","readOnly","defaultFieldValue","blurListener","activeElement","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","checkbox","curChecked","buttonValue","radio","emitMessage","pdfButtonValue","fieldvalue","fontSizeStyle","selectElement","combo","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","prototype","call","multipleSelection","selected","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dir","dateObject","stringify","toLocaleDateString","toLocaleTimeString","contents","_formatContents","XfaLayer","html","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","registerAcroformAnnotations","rendered","renderedElement","setAnnotationCanvasMap","ownMatrix","elements","ownTransform","firstChild","makeColorComp","G","components","RGB_HTML","CMYK_RGB","xfaOn","xfaOff","attributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","setupStorage","rootHtml","setAttributes","stack","rootDiv","textDivs","parent","childHtml","xmlns","el","renderTextLayer","renderParameters","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","timeout","DEFAULT_FONT_SIZE","ascentCache","AllWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","_enhanceTextSelection","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","_textDivs","textDivsLength","findPositiveMin","ts","expand","_viewport","expanded","expandBounds","boxes","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","jj","boxScale","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","classList","setAttribute","parentNode","_layoutText","measureText","fingerprintIsBlockedException","_render","styleCache","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","http","https","fileUriRegex","PDFNodeStream","parseUrl","sourceUrl","parsedUrl","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","stat","createReadStream","createResponseStatusError","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","err","quotindex","extvalue","encodingend","langvalue","charset","hex","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_requestId","onClosed","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  isString,\n  removeNullCharacters,\n  shadow,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nconst PixelsPerInch = {\n  CSS: 96.0,\n  PDF: 72.0,\n\n  /** @type {number} */\n  get PDF_TO_CSS_UNITS() {\n    return shadow(this, \"PDF_TO_CSS_UNITS\", this.CSS / this.PDF);\n  },\n};\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLAnchorElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    // modified by ngx-extended-pdf-viewer #864\n    return protocol === \"http:\" || protocol === \"https:\" || protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function (error) {\n      Window['ngxConsole'].log(error);\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  Window['ngxConsole'].log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  addLinkAttributes,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    if (Window && Window['ngxConsole']) {\n      Window['ngxConsole'].log(`Info: ${msg}`);\n    } else {\n      console.log(`Info: ${msg}`);\n    }\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    if (Window && Window['ngxConsole']) {\n      Window['ngxConsole'].log(`Warning: ${msg}`);\n    } else {\n      console.log(`Warning: ${msg}`);\n    }\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\": // modified by ngx-extended-pdf-viewer #864\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nconst NullCharactersRegExp = /\\x00+/g;\nconst InvisibleCharactersRegExp = /[\\x01-\\x1F]/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str, replaceInvisible = false) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  if (replaceInvisible) {\n    str = str.replace(InvisibleCharactersRegExp, \" \");\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const baseHref = src.baseHref;\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            // #929/#813 modified by ngx-extended-pdf-viewer\n            // to restore the drag'n'drop functionality\n            if (baseHref) {\n              params[key] = new URL(value, window.location.origin + baseHref).href;\n            } else {\n              params[key] = new URL(value, window.location).href;\n            }\n            // #929/#813 end of modification\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  // #376 modified by ngx-extended-pdf-viewer\n  let cMapUrl = source.cMapUrl;\n  if (cMapUrl.constructor.name === \"Function\") {\n    cMapUrl = cMapUrl();\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, Canvas>} [annotationCanvasMap] - Map some annotation\n *   ids with canvases used to render them.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        promise = promise.then(annotations => {\n          for (const annotation of annotations) {\n            if (annotation.titleObj !== undefined) {\n              Object.defineProperty(annotation, \"title\", {\n                get() {\n                  deprecated(\n                    \"`title`-property on annotation, please use `titleObj` instead.\"\n                  );\n                  return annotation.titleObj.str;\n                },\n              });\n            }\n            if (annotation.contentsObj !== undefined) {\n              Object.defineProperty(annotation, \"contents\", {\n                get() {\n                  deprecated(\n                    \"`contents`-property on annotation, please use `contentsObj` instead.\"\n                  );\n                  return annotation.contentsObj.str;\n                },\n              });\n            }\n          }\n          return annotations;\n        });\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the Window['ngxConsole'].\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve();\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(object) {\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        globalThis.structuredClone\n      ) {\n        return globalThis.structuredClone(object, transfers);\n      }\n\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      function fallbackCloneValue(value) {\n        if (\n          typeof value === \"function\" ||\n          typeof value === \"symbol\" ||\n          value instanceof URL\n        ) {\n          throw new Error(\n            `LoopbackPort.postMessage - cannot clone: ${value?.toString()}`\n          );\n        }\n\n        if (typeof value !== \"object\" || value === null) {\n          return value;\n        }\n        if (cloned.has(value)) {\n          // already cloned the object\n          return cloned.get(value);\n        }\n        let buffer, result;\n        if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n          // We found object with ArrayBuffer (typed array).\n          if (transfers?.includes(buffer)) {\n            result = new value.constructor(\n              buffer,\n              value.byteOffset,\n              value.byteLength\n            );\n          } else {\n            result = new value.constructor(value);\n          }\n          cloned.set(value, result);\n          return result;\n        }\n        if (value instanceof Map) {\n          result = new Map();\n          cloned.set(value, result); // Adding to cache now for cyclic references.\n          for (const [key, val] of value) {\n            result.set(key, fallbackCloneValue(val));\n          }\n          return result;\n        }\n        if (value instanceof Set) {\n          result = new Set();\n          cloned.set(value, result); // Adding to cache now for cyclic references.\n          for (const val of value) {\n            result.add(fallbackCloneValue(val));\n          }\n          return result;\n        }\n        result = Array.isArray(value) ? [] : Object.create(null);\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        // Cloning all value and object properties, however ignoring properties\n        // defined via getter.\n        for (const i in value) {\n          let desc,\n            p = value;\n          while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n            p = Object.getPrototypeOf(p);\n          }\n          if (typeof desc.value === \"undefined\") {\n            continue;\n          }\n          if (typeof desc.value === \"function\") {\n            if (i === 'cMapUrl') {\n              result[i] = cloneValue(desc.value());\n            } else if (!value.hasOwnProperty?.(i)) {\n              continue;\n            }\n          }\n          result[i] = fallbackCloneValue(desc.value);\n        }\n        return result;\n      }\n\n      const cloned = new WeakMap();\n      return fallbackCloneValue(object);\n    }\n\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.postMessageTransfers = true;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            // supportTypedArray\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n            if (!data.supportTransfers) {\n              this.postMessageTransfers = false;\n            }\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      // modified by ngx-extended-pdf-viewer #376\n\t  let cMapUrl = params.cMapUrl;\n\t  if (cMapUrl.constructor.name === \"Function\") {\n\t    cMapUrl = cMapUrl();\n\t  }\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let lastModified = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        lastModified = this.annotationStorage.lastModified;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${lastModified}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    this.loadingTask.onUnsupportedFeature?.(featureId);\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      ref,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return (this._getFieldObjectsPromise ||=\n      this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig,\n      this.annotationCanvasMap\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    window.ngxZone.runOutsideAngular(() => {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    });\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  RenderTask,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        div.remove();\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._timeStamp = Date.now();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          this.setValue(key, undefined, obj); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    if (obj === undefined) {\n      return defaultValue;\n    }\n    return Object.assign(defaultValue, obj);\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._timeStamp = Date.now();\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get lastModified() {\n    return this._timeStamp.toString();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = null;\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    this.updatePathMinMax(transform, box[0], box[1]);\n    this.updatePathMinMax(transform, box[2], box[3]);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig,\n    annotationCanvasMap\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.current.activeSMask !== null) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = !!this.suspendedCtx;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.suspendedCtx) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.suspendedCtx) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.current.activeSMask = null;\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    this.ctx.save();\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.current.activeSMask) {\n      this.endSMaskMode();\n    }\n\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      this.ctx.restore();\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, xw, yh);\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse,\n          PathType.STROKE\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (isNum(glyph)) {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (isNum(glyph)) {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      PathType.SHADING\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[0],\n        bbox[1]\n      );\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[2],\n        bbox[3]\n      );\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    const suspendedCtx = this.suspendedCtx;\n    if (this.current.activeSMask) {\n      this.suspendedCtx = null;\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push({\n      ctx: currentCtx,\n      suspendedCtx,\n    });\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const { ctx, suspendedCtx } = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (suspendedCtx) {\n      this.suspendedCtx = suspendedCtx;\n    }\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = this.ctx.mozCurrentTransform;\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform.apply(this.ctx, currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.save();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          this.ctx.mozCurrentTransform\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        canvas.style.width = `calc(${width}px * var(--viewport-scale-factor))`;\n        canvas.style.height = `calc(${height}px * var(--viewport-scale-factor))`;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        addContextCurrentTransform(this.ctx);\n\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        ctx.mozCurrentTransform\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform.apply(tmpCtx, this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  warn,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      throw new Error(\n        'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n      );\n    }\n    warn('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n    return reason;\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(\n            streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason))\n          );\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall && streamController.startCall.promise,\n      streamController.pullCall && streamController.pullCall.promise,\n      streamController.cancelCall && streamController.cancelCall.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (data.hasOwnCanvas) {\n      const transform = viewport.transform.slice();\n      const [scaleX, scaleY] = Util.singularValueDecompose2dScale(transform);\n      width = Math.ceil(width * scaleX);\n      height = Math.ceil(height * scaleY);\n      rect[0] *= scaleX;\n      rect[1] *= scaleY;\n      // Reset the scale part of the transform matrix (which must be diagonal\n      // or anti-diagonal) in order to avoid to rescale the canvas.\n      // The canvas for the annotation is correctly scaled when it is drawn\n      // (see `beginAnnotation` in canvas.js).\n      for (let i = 0; i < 4; i++) {\n        transform[i] = Math.sign(transform[i]);\n      }\n      container.style.transform = `matrix(${transform.join(\",\")})`;\n    } else {\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    }\n\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n      if (borderColor) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n\n    if (data.hasOwnCanvas) {\n      container.style.width = container.style.height = \"auto\";\n    } else {\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n    }\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      richText: data.richText,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.getElementById(id);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { id, exportValue } = domElement;\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      parameters.data.resetForm ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"LinkAnnotationElement.render - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(link, data.url, data.newWindow);\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      let hasClickAction = false;\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        hasClickAction = true;\n        this._bindJSAction(link, data);\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n      } else if (!hasClickAction) {\n        this._bindLink(link, \"\");\n      }\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    link.className = \"internalLink\";\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    link.className = \"internalLink\";\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      if (otherClickAction) {\n        otherClickAction();\n      }\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value, valueAsString: value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n        const domElement = document.getElementById(id);\n        if (!domElement || !GetElementsByNameSet.has(domElement)) {\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id,  this.data.fieldName, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue || \"\";\n        element.value = elementData.userValue = defaultValue;\n        delete elementData.formattedValue;\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, `${this.data.fieldName}/${this.data.exportValue}`, { // #718 modified by ngx-extended-pdf-viewer\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, this.data.fieldName, { value }); // #868 modified by ngx-extended-pdf-viewer\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id,\n          this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n          { value: curChecked });\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: checked\n      });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: event.target.checked\n            });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, this.data.fieldName, { value }, this.data.buttonValue);  // #718 modified by ngx-extended-pdf-viewer\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, this.data.fieldName, {\n          value: false,\n          emitMessage: false, // #718 modified by ngx-extended-pdf-viewer\n        });\n      }\n      storage.setValue(id, this.data.fieldName, {\n        value: checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(\n                radio.id,\n                fieldName, // #718 / #868 modified by ngx-extended-pdf-viewer\n                { value: curChecked }\n              );\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const fieldvalue = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = fieldvalue; // #718 modified by ngx-extended-pdf-viewer\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value(event) {\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.richText = parameters.richText;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    if (\n      this.richText?.str &&\n      (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)\n    ) {\n      XfaLayer.render({\n        xfa: this.richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.className = \"richText popupContent\";\n    } else {\n      const contents = this._formatContents(this.contentsObj);\n      popup.appendChild(contents);\n    }\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.className = \"popupContent\";\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (\n      !this.data.hasPopup &&\n      (this.data.titleObj?.str ||\n        this.data.contentsObj?.str ||\n        this.data.richText)\n    ) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    // #958 modified by ngx-extended-pdf-viewer\n    if (window.registerAcroformAnnotations) {\n      window.registerAcroformAnnotations(sortedAnnotations);\n    }\n    // #958 end of modification by ngx-extended-pdf-viewer\n\n    const div = parameters.div;\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            div.prepend(rendered);\n          } else {\n            div.appendChild(rendered);\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const { page, viewport, annotations, annotationCanvasMap, div } =\n      parameters;\n    const transform = viewport.transform;\n    const matrix = `matrix(${transform.join(\",\")})`;\n\n    let scale, ownMatrix;\n    for (const data of annotations) {\n      const elements = div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          if (data.hasOwnCanvas) {\n            const rect = Util.normalizeRect([\n              data.rect[0],\n              page.view[3] - data.rect[1] + page.view[1],\n              data.rect[2],\n              page.view[3] - data.rect[3] + page.view[1],\n            ]);\n\n            if (!ownMatrix) {\n              // When an annotation has its own canvas, then\n              // the scale has been already applied to the canvas,\n              // so we musn't scale it twice.\n              scale = Math.abs(transform[0] || transform[1]);\n              const ownTransform = transform.slice();\n              for (let i = 0; i < 4; i++) {\n                ownTransform[i] = Math.sign(ownTransform[i]);\n              }\n              ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n            }\n\n            const left = rect[0] * scale;\n            const top = rect[1] * scale;\n            element.style.left = `${left}px`;\n            element.style.top = `${top}px`;\n            element.style.transformOrigin = `${-left}px ${-top}px`;\n            element.style.transform = ownMatrix;\n          } else {\n            element.style.transform = matrix;\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n    div.hidden = false;\n  }\n\n  static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n    if (!annotationCanvasMap) {\n      return;\n    }\n    for (const [id, canvas] of annotationCanvasMap) {\n      const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (firstChild.nodeName === \"CANVAS\") {\n        element.replaceChild(canvas, firstChild);\n      } else {\n        element.insertBefore(canvas, firstChild);\n      }\n    }\n    annotationCanvasMap.clear();\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { warn } from \"../shared/util.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n        } else {\n          if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n            continue; // Handled below.\n          }\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"XfaLayer.setAttribute - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfa;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the Window['ngxConsole'].\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the Window['ngxConsole'].\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          const scale = textDivProperties.canvasWidth / width;\n          if (this._enhanceTextSelection) {\n            textDivProperties.scale = scale;\n          }\n          transform = `scaleX(${scale})`;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      if (typeof args === \"string\") {\n        args = this.objs.get(args);\n      }\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      // modified by ngx-extended-pdf-viewer #864\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\" || this.url.protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  getXfaPageViewport,\n  // From \"./shared/util.js\":\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}