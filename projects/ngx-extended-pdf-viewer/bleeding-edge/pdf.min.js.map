{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","window","filenameForDownload","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","getXfaPageViewport","xfaPage","scale","rotation","width","height","style","viewBox","parseInt","PageViewport","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","_base_factory","DOMCanvasFactory","BaseCanvasFactory","constructor","ownerDocument","globalThis","super","_document","_createCanvas","canvas","createElement","async","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","fetch","ok","statusText","Uint8Array","stringToBytes","text","request","XMLHttpRequest","DONE","data","responseText","DOMCMapReaderFactory","BaseCMapReaderFactory","_fetchData","isCompressed","then","cMapData","compressionType","DOMStandardFontDataFactory","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","type","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","name","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","baseUrl","protocol","URL","pdfDateStringRegex","PDFDateString","toDateObject","input","isString","RegExp","matches","year","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","reason","createValidAbsoluteUrl","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","stringToUTF8String","escape","utf8StringToString","unescape","encodeURIComponent","ANY","DISPLAY","PRINT","ANNOTATION_FORMS","OPLIST","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","cond","shadow","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","makeHexColor","r","g","b","m1","m2","p","m","d","getAxialAlignedBoundingBox","p1","p2","p3","p4","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","a","c","first","sx","sy","normalizeRect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","create","context","reset","canvasAndContext","destroy","CMapCompressionType","catch","svg","_display_utils","_font_loader","_node_utils","_annotation_storage","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","params","rangeTransport","worker","location","href","Buffer","isNaN","docBaseUrl","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","cMapUrl","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","standardFontDataUrl","getRenderingIntent","intent","renderForms","isOpList","renderingIntent","RenderingIntentFlag","idCounters","doc","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","fingerprints","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","getAnnotations","set","_jsActionsPromise","getPageJSActions","getXfa","children","render","canvasContext","viewport","renderInteractiveForms","imageLayer","canvasFactory","background","includeAnnotationStorage","optionalContentConfigPromise","_intentState","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","_intentState2","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","sendWithStream","combineTextItems","highWaterMark","textContent","getTextContent","readableStream","reader","getReader","items","styles","pump","done","getStructTree","_structTreePromise","_destroy","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","curIntentState","delete","stats","LoopbackPort","_listeners","_deferred","postMessage","cloned","WeakMap","event","cloneValue","transfers","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","require","pdfjsFilePath","wrapper","_workerPorts","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","WorkerMessageHandler","workerHandler","fromPort","has","_setupFakeWorkerGlobal","loader","mainWorkerMessageHandler","eval","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","CMapReaderFactory","cMapPacked","StandardFontDataFactory","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","AnnotationStorage","page","hasOwnProperty","resetModified","terminated","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","featureId","serializable","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","cssFontInfo","css","weight","fontWeight","italicAngle","FontFace","fontFamily","mimetype","getPathGenerator","character","cmds","jsBuf","current","__non_webpack_require__","fs","Canvas","process","nw","versions","electron","_storage","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","modified","entry","_setModified","setFormValue","radioValue","getAll","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","canvasEntry","trackTransform","LRUCache","maxSize","_cache","_maxSize","next","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","setCurrentPoint","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","genericComposeSMask","subtype","backdrop","hasBackdrop","composeFn","chunkSize","row","chunkHeight","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","cachedCanvasPatterns","cachedPatterns","_cachedGetSinglePixelWidth","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","executionStartIdx","argsArrayLen","chunkOperations","continueCallback","endTime","steps","fnId","OPS","depObjId","objsPool","drawImage","endLayout","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","inverse","lineCap","lineJoin","miterLimit","limit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","deltaTransform","resumeSMaskGroup","ops","xw","yh","consumePath","getPattern","getSinglePixelWidth","needRestore","paths","pendingTextPaths","beginPath","path","spacing","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","showType3Text","glyphs","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","operatorListId","transformed","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","arguments","strokeStyle","matrix","getShadingPattern","inv","bl","br","ul","ur","x0","y0","x1","y1","bbox","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","imageSmoothingEnabled","mozImageSmoothingEnabled","COMPILE_TYPE3_GLYPHS","compileType3Glyph","POINT_TYPES","width1","j0","points","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","position","getCanvasPosition","appendImage","left","top","visible","tag","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","RadialAxialShadingPattern","MeshShadingPattern","DummyShadingPattern","applyBoundingBox","Path2D","region","BaseShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","colorStop","owner","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","boundsWidth","boundsHeight","combinedScale","paddedWidth","BORDER_SIZE","paddedHeight","backgroundColor","matrixScale","temporaryPatternCanvas","PaintType","MAX_PATTERN_SIZE","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","bboxWidth","bboxHeight","cssColor","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","parsedData","rawData","_metadataMap","_data","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","_scripting_utils","DEFAULT_TAB_INDEX","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","svgFactory","enableScripting","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","_renderQuadrilaterals","quadrilateral","className","platform","isWin","isMac","isTooltipOnly","actions","Action","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","hasPopup","toLowerCase","JSON","alternativeText","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_dispatchEventFromSandbox","setColor","styleName","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","hasAppearance","fieldValue","setPropertyOnSiblings","storage","storedData","fieldName","valueAsString","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","blurListener","activeElement","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","readOnly","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","exportValue","checkbox","buttonValue","radio","emitMessage","pdfButtonValue","radioId","fontSizeStyle","selectElement","combo","options","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","prototype","call","multipleSelection","selected","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dateObject","stringify","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","rendered","renderedElement","update","elements","makeColorComp","CMYK_G","G_CMYK","G_RGB","G_HTML","G","RGB_G","RGB_HTML","T_HTML","CMYK_RGB","CMYK_HTML","components","RGB_CMYK","renderTextLayer","renderParameters","TextLayerRenderTask","textContentStream","textDivs","textContentItemsStr","enhanceTextSelection","timeout","DEFAULT_FONT_SIZE","ascentCache","AllWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","dir","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","_textDivs","textDivsLength","findPositiveMin","ts","t","expand","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","jj","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","_textContent","_container","_textContentItemsStr","_enhanceTextSelection","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","parent","classList","setAttribute","parentNode","_layoutText","measureText","fingerprintIsBlockedException","_render","styleCache","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","XfaLayer","setupStorage","html","xfaOn","setAttributes","attributes","dataId","xfa","rootHtml","stack","rootDiv","child","childHtml","xmlns","el","_network_utils","http","https","fileUriRegex","PDFNodeStream","parseUrl","sourceUrl","parsedUrl","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","stat","createReadStream","createResponseStatusError","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","err","quotindex","extvalue","encodingend","langvalue","charset","hex","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_requestId","onClosed","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg","_xfa_layer"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\" || protocol === \"ftp:\" || protocol === \"capacitor:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  addLinkAttributes,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATION_FORMS: 0x20,\n  OPLIST: 0x100,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  // #376 modified by ngx-extended-pdf-viewer\n  let cMapUrl = source.cMapUrl;\n  if (cMapUrl.constructor.name === \"Function\") {\n    cMapUrl = cMapUrl();\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nfunction getRenderingIntent(intent, { renderForms = false, isOpList = false }) {\n  let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n  switch (intent) {\n    case \"any\":\n      renderingIntent = RenderingIntentFlag.ANY;\n      break;\n    case \"display\":\n      break;\n    case \"print\":\n      renderingIntent = RenderingIntentFlag.PRINT;\n      break;\n    default:\n      warn(`getRenderingIntent - invalid intent: ${intent}`);\n  }\n  if (renderForms) {\n    renderingIntent += RenderingIntentFlag.ANNOTATION_FORMS;\n  }\n  if (isOpList) {\n    renderingIntent += RenderingIntentFlag.OPLIST;\n  }\n  return renderingIntent;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  destroy() {\n    this.destroyed = true;\n\n    const transportDestroyed = !this._transport\n      ? Promise.resolve()\n      : this._transport.destroy();\n    return transportDestroyed.then(() => {\n      this._transport = null;\n      if (this._worker) {\n        this._worker.destroy();\n        this._worker = null;\n      }\n    });\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well. The default value is `false`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {boolean} [includeAnnotationStorage] - Render stored interactive\n *   form element data, from the {@link AnnotationStorage}-instance, onto the\n *   canvas itself; useful e.g. for printing. The default value is `false`.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const renderingIntent = getRenderingIntent(intent, {});\n\n    let promise = this._annotationPromises.get(renderingIntent);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        renderingIntent\n      );\n      this._annotationPromises.set(renderingIntent, promise);\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    includeAnnotationStorage = false,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = getRenderingIntent(intent, {\n      renderForms: renderInteractiveForms === true,\n    });\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const annotationStorage = includeAnnotationStorage\n      ? this._transport.annotationStorage.serializable\n      : null;\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        annotationStorage,\n      });\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (\n        this.cleanupAfterRender ||\n        renderingIntent & RenderingIntentFlag.PRINT\n      ) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !(renderingIntent & RenderingIntentFlag.PRINT),\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({ intent = \"display\" } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const renderingIntent = getRenderingIntent(intent, { isOpList: true });\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent & RenderingIntentFlag.OPLIST) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason?.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (\n        typeof value === \"function\" ||\n        typeof value === \"symbol\" ||\n        value instanceof URL\n      ) {\n        throw new Error(\n          `LoopbackPort.postMessage - cannot clone: ${value?.toString()}`\n        );\n      }\n\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      result = Array.isArray(value) ? [] : Object.create(null);\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (i === 'cMapUrl') {\n            result[i] = cloneValue(desc.value());\n          } else if (!value.hasOwnProperty?.(i)) {\n            continue;\n          }\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.postMessageTransfers = true;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            // supportTypedArray\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n            if (!data.supportTransfers) {\n              this.postMessageTransfers = false;\n            }\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      // modified by ngx-extended-pdf-viewer #376\n\t  let cMapUrl = params.cMapUrl;\n\t  if (cMapUrl.constructor.name === \"Function\") {\n\t    cMapUrl = cMapUrl();\n\t  }\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          this.setValue(key, undefined, obj); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    return obj !== undefined ? obj : defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      this._storage.set(key, value);\n      modified = true;\n    }\n    if (modified) {\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPattern, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// This value comes from sampling a few PDFs that re-use patterns, there doesn't\n// seem to be any that benefit from caching more than 2 patterns.\nconst MAX_CACHED_CANVAS_PATTERNS = 2;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\n/**\n * Least recently used cache implemented with a JS Map. JS Map keys are ordered\n * by last insertion.\n */\nclass LRUCache {\n  constructor(maxSize = 0) {\n    this._cache = new Map();\n    this._maxSize = maxSize;\n  }\n\n  has(key) {\n    return this._cache.has(key);\n  }\n\n  get(key) {\n    if (this._cache.has(key)) {\n      // Delete and set the value so it's moved to the end of the map iteration.\n      const value = this._cache.get(key);\n      this._cache.delete(key);\n      this._cache.set(key, value);\n    }\n    return this._cache.get(key);\n  }\n\n  set(key, value) {\n    if (this._maxSize <= 0) {\n      return;\n    }\n    if (this._cache.size + 1 > this._maxSize) {\n      // Delete the least recently used.\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  clear() {\n    this._cache.clear();\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n    const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    maskCtx.putImageData(layerData, 0, row);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx) {\n  const mask = smask.canvas;\n  const maskCtx = smask.context;\n\n  ctx.setTransform(\n    smask.scaleX,\n    0,\n    0,\n    smask.scaleY,\n    smask.offsetX,\n    smask.offsetY\n  );\n\n  genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    mask.width,\n    mask.height,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap\n  );\n  ctx.drawImage(mask, 0, 0);\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedCanvasPatterns = new LRUCache(MAX_CACHED_CANVAS_PATTERNS);\n    this.cachedPatterns = new Map();\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.current.activeSMask !== null) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedCanvasPatterns.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, false)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          if (this.current.activeSMask) {\n            // If SMask is currrenly used, it needs to be suspended or\n            // finished. Suspend only makes sense when at least one save()\n            // was performed and state needs to be reverted on restore().\n            if (\n              this.stateStack.length > 0 &&\n              this.stateStack[this.stateStack.length - 1].activeSMask ===\n                this.current.activeSMask\n            ) {\n              this.suspendSMaskGroup();\n            } else {\n              this.endSMaskGroup();\n            }\n          }\n          this.current.activeSMask = value ? this.tempSMask : null;\n          if (this.current.activeSMask) {\n            this.beginSMaskGroup();\n          }\n          this.tempSMask = null;\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  beginSMaskGroup() {\n    const activeSMask = this.current.activeSMask;\n    const drawnWidth = activeSMask.canvas.width;\n    const drawnHeight = activeSMask.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n\n    const currentCtx = this.ctx;\n    const currentTransform = currentCtx.mozCurrentTransform;\n    this.ctx.save();\n\n    const groupCtx = scratchCanvas.context;\n    groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n    groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  suspendSMaskGroup() {\n    // Similar to endSMaskGroup, the intermediate canvas has to be composed\n    // and future ctx state restored.\n    const groupCtx = this.ctx;\n    this.groupLevel--;\n    this.ctx = this.groupStack.pop();\n\n    composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n    this.ctx.restore();\n    this.ctx.save(); // save is needed since SMask will be resumed.\n    copyCtxState(groupCtx, this.ctx);\n\n    // Saving state for resuming.\n    this.current.resumeSMaskCtx = groupCtx;\n    // Transform was changed in the SMask canvas, reflecting this change on\n    // this.ctx.\n    const deltaTransform = Util.transform(\n      this.current.activeSMask.startTransformInverse,\n      groupCtx.mozCurrentTransform\n    );\n    this.ctx.transform.apply(this.ctx, deltaTransform);\n\n    // SMask was composed, the results at the groupCtx can be cleared.\n    groupCtx.save();\n    groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n    groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n    groupCtx.restore();\n  }\n\n  resumeSMaskGroup() {\n    // Resuming state saved by suspendSMaskGroup. We don't need to restore\n    // any groupCtx state since restore() command (the only caller) will do\n    // that for us. See also beginSMaskGroup.\n    const groupCtx = this.current.resumeSMaskCtx;\n    const currentCtx = this.ctx;\n    this.ctx = groupCtx;\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endSMaskGroup() {\n    const groupCtx = this.ctx;\n    this.groupLevel--;\n    this.ctx = this.groupStack.pop();\n\n    composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n    this.ctx.restore();\n    copyCtxState(groupCtx, this.ctx);\n    // Transform was changed in the SMask canvas, reflecting this change on\n    // this.ctx.\n    const deltaTransform = Util.transform(\n      this.current.activeSMask.startTransformInverse,\n      groupCtx.mozCurrentTransform\n    );\n    this.ctx.transform.apply(this.ctx, deltaTransform);\n  }\n\n  save() {\n    this.ctx.save();\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n    this.current.resumeSMaskCtx = null;\n  }\n\n  restore() {\n    // SMask was suspended, we just need to resume it.\n    if (this.current.resumeSMaskCtx) {\n      this.resumeSMaskGroup();\n    }\n    // SMask has to be finished once there is no states that are using the\n    // same SMask.\n    if (\n      this.current.activeSMask !== null &&\n      (this.stateStack.length === 0 ||\n        this.stateStack[this.stateStack.length - 1].activeSMask !==\n          this.current.activeSMask)\n    ) {\n      this.endSMaskGroup();\n    }\n\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      this.ctx.restore();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    } else {\n      // We've finished all the SMask groups, reflect that in our state.\n      this.current.activeSMask = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          break;\n        case OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath();\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse\n      );\n      needRestore = true;\n    }\n\n    if (this.contentVisible) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath();\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    let patternTransform;\n    if (current.patternFill) {\n      // TODO: Patterns are not applied correctly to text if a non-embedded\n      // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (isNum(glyph)) {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (isNum(glyph)) {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(\n        this.objs.get(objId),\n        this.cachedCanvasPatterns\n      );\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      true\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n\n    // Resetting mask state, masks will be applied on restore of the group.\n    this.current.activeSMask = null;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    this.ctx = this.groupStack.pop();\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    if (this.ctx.imageSmoothingEnabled !== undefined) {\n      this.ctx.imageSmoothingEnabled = false;\n    } else {\n      this.ctx.mozImageSmoothingEnabled = false;\n    }\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n    } else {\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n    }\n    this.restore();\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix) {\n    this.save();\n    resetCtxToDefault(this.ctx);\n    this.current = new CanvasExtraState();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n      this.ctx.rect(rect[0], rect[1], width, height);\n      this.clip();\n      this.endPath();\n    }\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            false\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath() {\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR, cachedCanvasPatterns) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n    this.cachedCanvasPatterns = cachedCanvasPatterns;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    let pattern;\n    if (!shadingFill) {\n      if (this.cachedCanvasPatterns.has(this)) {\n        pattern = this.cachedCanvasPatterns.get(this);\n      } else {\n        const tmpCanvas = owner.cachedCanvases.getCanvas(\n          \"pattern\",\n          owner.ctx.canvas.width,\n          owner.ctx.canvas.height,\n          true\n        );\n\n        const tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n        tmpCtx.beginPath();\n        tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n\n        tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\n        if (this.matrix) {\n          tmpCtx.transform.apply(tmpCtx, this.matrix);\n        }\n        applyBoundingBox(tmpCtx, this._bbox);\n\n        tmpCtx.fillStyle = this._createGradient(tmpCtx);\n        tmpCtx.fill();\n\n        pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\n        this.cachedCanvasPatterns.set(this, pattern);\n      }\n    } else {\n      // Don't bother caching gradients, they are quick to rebuild.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    if (!shadingFill) {\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (shadingFill) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      shadingFill ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (!shadingFill) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR, cachedCanvasPatterns) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR, cachedCanvasPatterns);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (!shadingFill) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        ).catch((reason) => {\n          console.log(\"Caught an error of the worker thread: \" + reason);\n        });\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of document.getElementsByName(base.name)) {\n      if (element !== base) {\n        element[key] = value;\n        const data = Object.create(null);\n        data[keyInStorage] = value;\n        storage.setValue(element.getAttribute(\"id\"), data);\n      }\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value:\n        data.fieldValue &&\n        ((data.exportValue && data.exportValue === data.fieldValue) ||\n          (!data.exportValue && data.fieldValue !== \"Off\")),\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: event.target.checked,\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: event.target.checked\n            });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, this.data.fieldName, { value }, this.data.buttonValue);  // #718 modified by ngx-extended-pdf-viewer\n    }\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          if (window.setFormValue) { // #718 modified by ngx-extended-pdf-viewer\n            window.setFormValue(radio.getAttribute(\"id\"), false); // #718 modified by ngx-extended-pdf-viewer\n          } // #718 modified by ngx-extended-pdf-viewer\n          storage.setValue(radio.getAttribute(\"id\"), this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n            value: false,\n            emitMessage: false, // #718 modified by ngx-extended-pdf-viewer\n          });\n        }\n      }\n      storage.setValue(id, this.data.fieldName, {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: target.checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              radio.checked = radioId === id && checked;\n              storage.setValue(radioId, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                value: radio.checked,\n              });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = value; // #718 modified by ngx-extended-pdf-viewer\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const options = selectElement.options;\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          element.style.transform = transform;\n        }\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    originalTransform: null,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    scale: 1,\n  };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, { value: event.target.getAttribute(\"xfaOn\") });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes(html, element, storage, intent) {\n    const { attributes } = element;\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          html.setAttribute(key, value.join(\" \"));\n        } else {\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const root = parameters.xfa;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes(rootHtml, root);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    rootDiv.style.transform = transform;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        html.appendChild(document.createTextNode(child.value));\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes(childHtml, child, storage, intent);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        childHtml.appendChild(document.createTextNode(child.value));\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\" || this.url.protocol === \"ftp:\" || this.url.protocol === \"capacitor:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(exception);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason?.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  getXfaPageViewport,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}