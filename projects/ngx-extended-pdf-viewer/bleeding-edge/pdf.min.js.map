{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","window","filenameForDownload","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","getXfaPageViewport","xfaPage","scale","rotation","width","height","style","viewBox","parseInt","PageViewport","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","_base_factory","CSS","PDF","DOMCanvasFactory","BaseCanvasFactory","constructor","ownerDocument","globalThis","super","_document","_createCanvas","canvas","createElement","async","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","fetch","ok","statusText","Uint8Array","stringToBytes","text","request","XMLHttpRequest","DONE","data","responseText","DOMCMapReaderFactory","BaseCMapReaderFactory","_fetchData","isCompressed","then","cMapData","compressionType","DOMStandardFontDataFactory","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","type","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","name","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","baseUrl","protocol","URL","pdfDateStringRegex","PDFDateString","toDateObject","input","isString","RegExp","matches","year","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","reason","createValidAbsoluteUrl","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","stringToUTF8String","escape","utf8StringToString","unescape","encodeURIComponent","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","cond","shadow","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","makeHexColor","r","g","b","m1","m2","p","m","d","getAxialAlignedBoundingBox","p1","p2","p3","p4","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","a","c","first","sx","sy","normalizeRect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","create","context","reset","canvasAndContext","destroy","CMapCompressionType","catch","svg","_display_utils","_font_loader","_node_utils","_annotation_storage","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","baseHref","params","rangeTransport","worker","href","Buffer","isNaN","docBaseUrl","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","cMapUrl","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","standardFontDataUrl","idCounters","doc","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","fingerprints","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","getAnnotations","intent","intentArgs","getRenderingIntent","cacheKey","renderingIntent","set","_jsActionsPromise","getPageJSActions","getXfa","children","render","canvasContext","viewport","annotationMode","AnnotationMode","imageLayer","canvasFactory","background","optionalContentConfigPromise","arguments","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","intentPrint","RenderingIntentFlag","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","sendWithStream","combineTextItems","highWaterMark","textContent","getTextContent","xfa","XfaText","readableStream","reader","getReader","items","styles","pump","done","getStructTree","_structTreePromise","_destroy","pageCache","waitOn","values","force","completed","cancel","clear","resetStats","_startRenderPage","_renderPageChunk","operatorListChunk","streamReader","setTimeout","curCacheKey","curIntentState","delete","stats","LoopbackPort","_listeners","_deferred","postMessage","cloned","WeakMap","event","cloneValue","transfers","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","require","pdfjsFilePath","wrapper","_workerPorts","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","location","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","WorkerMessageHandler","workerHandler","fromPort","has","_setupFakeWorkerGlobal","loader","mainWorkerMessageHandler","eval","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","CMapReaderFactory","cMapPacked","StandardFontDataFactory","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","AnnotationStorage","isOpList","lastModified","page","hasOwnProperty","resetModified","terminated","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","featureId","serializable","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","cssFontInfo","css","weight","fontWeight","italicAngle","FontFace","fontFamily","mimetype","getPathGenerator","character","cmds","jsBuf","current","args","__non_webpack_require__","fs","Canvas","process","nw","versions","electron","_storage","_timeStamp","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","modified","entry","_setModified","setFormValue","radioValue","getAll","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","canvasEntry","trackTransform","LRUCache","maxSize","_cache","_maxSize","next","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","setCurrentPoint","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","genericComposeSMask","subtype","backdrop","hasBackdrop","composeFn","chunkSize","row","chunkHeight","getImageSmoothingEnabled","interpolate","actualScale","devicePixelRatio","PixelsPerInch","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","cachedCanvasPatterns","cachedPatterns","_cachedGetSinglePixelWidth","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","executionStartIdx","argsArrayLen","chunkOperations","continueCallback","endTime","steps","fnId","OPS","depObjId","objsPool","drawImage","endLayout","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","inverse","lineCap","lineJoin","miterLimit","limit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","deltaTransform","resumeSMaskGroup","ops","xw","yh","consumePath","getPattern","getSinglePixelWidth","needRestore","paths","pendingTextPaths","beginPath","path","spacing","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","showType3Text","glyphs","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","operatorListId","transformed","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","strokeStyle","matrix","getShadingPattern","inv","bl","br","ul","ur","x0","y0","x1","y1","bbox","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","imageSmoothingEnabled","COMPILE_TYPE3_GLYPHS","compileType3Glyph","POINT_TYPES","width1","j0","points","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","position","getCanvasPosition","appendImage","left","top","visible","tag","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","RadialAxialShadingPattern","MeshShadingPattern","DummyShadingPattern","applyBoundingBox","Path2D","region","BaseShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","colorStop","owner","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","boundsWidth","boundsHeight","combinedScale","paddedWidth","BORDER_SIZE","paddedHeight","backgroundColor","matrixScale","temporaryPatternCanvas","PaintType","MAX_PATTERN_SIZE","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","bboxWidth","bboxHeight","cssColor","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","parsedData","rawData","_metadataMap","_data","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","output","walk","node","child","shouldBuildText","_scripting_utils","DEFAULT_TAB_INDEX","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","_renderQuadrilaterals","quadrilateral","className","platform","isWin","isMac","isTooltipOnly","actions","Action","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","hasPopup","toLowerCase","JSON","alternativeText","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_dispatchEventFromSandbox","setColor","styleName","ColorConverters","commonActions","display","hidden","fieldName","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","hasAppearance","fieldValue","setPropertyOnSiblings","storage","storedData","valueAsString","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","blurListener","activeElement","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","readOnly","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","exportValue","checkbox","buttonValue","radio","emitMessage","pdfButtonValue","radioId","fontSizeStyle","selectElement","combo","options","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","prototype","call","multipleSelection","selected","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dateObject","stringify","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","rendered","renderedElement","update","elements","makeColorComp","CMYK_G","G_CMYK","G_RGB","G_HTML","G","RGB_G","RGB_HTML","T_HTML","CMYK_RGB","CMYK_HTML","components","RGB_CMYK","renderTextLayer","renderParameters","TextLayerRenderTask","textContentStream","textDivs","textContentItemsStr","enhanceTextSelection","timeout","DEFAULT_FONT_SIZE","ascentCache","AllWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","_enhanceTextSelection","canvasWidth","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","dir","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","_textDivs","textDivsLength","findPositiveMin","ts","t","expand","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","jj","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","parent","classList","setAttribute","parentNode","_layoutText","measureText","fingerprintIsBlockedException","_render","styleCache","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","XfaLayer","setupStorage","html","xfaOn","xfaOff","setAttributes","attributes","dataId","rootHtml","stack","rootDiv","childHtml","xmlns","el","_network_utils","http","https","fileUriRegex","PDFNodeStream","parseUrl","sourceUrl","parsedUrl","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","stat","createReadStream","createResponseStatusError","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","err","quotindex","extvalue","encodingend","langvalue","charset","hex","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_requestId","onClosed","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg","_xfa_layer"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nconst PixelsPerInch = {\n  CSS: 96.0,\n  PDF: 72.0,\n};\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    // modified by ngx-extended-pdf-viewer #864\n    return protocol === \"http:\" || protocol === \"https:\" || protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  addLinkAttributes,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\": // modified by ngx-extended-pdf-viewer #864\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const baseHref = src.baseHref;\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location.origin + baseHref).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  // #376 modified by ngx-extended-pdf-viewer\n  let cMapUrl = source.cMapUrl;\n  if (cMapUrl.constructor.name === \"Function\") {\n    cMapUrl = cMapUrl();\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (\n        typeof value === \"function\" ||\n        typeof value === \"symbol\" ||\n        value instanceof URL\n      ) {\n        throw new Error(\n          `LoopbackPort.postMessage - cannot clone: ${value?.toString()}`\n        );\n      }\n\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      result = Array.isArray(value) ? [] : Object.create(null);\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (i === 'cMapUrl') {\n            result[i] = cloneValue(desc.value());\n          } else if (!value.hasOwnProperty?.(i)) {\n            continue;\n          }\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.postMessageTransfers = true;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            // supportTypedArray\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n            if (!data.supportTransfers) {\n              this.postMessageTransfers = false;\n            }\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      // modified by ngx-extended-pdf-viewer #376\n\t  let cMapUrl = params.cMapUrl;\n\t  if (cMapUrl.constructor.name === \"Function\") {\n\t    cMapUrl = cMapUrl();\n\t  }\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let lastModified = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        lastModified = this.annotationStorage.lastModified;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${lastModified}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      ref,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._timeStamp = Date.now();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          this.setValue(key, undefined, obj); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    return obj !== undefined ? obj : defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._timeStamp = Date.now();\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get lastModified() {\n    return this._timeStamp.toString();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPattern, TilingPattern } from \"./pattern_helper.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// This value comes from sampling a few PDFs that re-use patterns, there doesn't\n// seem to be any that benefit from caching more than 2 patterns.\nconst MAX_CACHED_CANVAS_PATTERNS = 2;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\n/**\n * Least recently used cache implemented with a JS Map. JS Map keys are ordered\n * by last insertion.\n */\nclass LRUCache {\n  constructor(maxSize = 0) {\n    this._cache = new Map();\n    this._maxSize = maxSize;\n  }\n\n  has(key) {\n    return this._cache.has(key);\n  }\n\n  get(key) {\n    if (this._cache.has(key)) {\n      // Delete and set the value so it's moved to the end of the map iteration.\n      const value = this._cache.get(key);\n      this._cache.delete(key);\n      this._cache.set(key, value);\n    }\n    return this._cache.get(key);\n  }\n\n  set(key, value) {\n    if (this._maxSize <= 0) {\n      return;\n    }\n    if (this._cache.size + 1 > this._maxSize) {\n      // Delete the least recently used.\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  clear() {\n    this._cache.clear();\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n    const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    maskCtx.putImageData(layerData, 0, row);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx) {\n  const mask = smask.canvas;\n  const maskCtx = smask.context;\n\n  ctx.setTransform(\n    smask.scaleX,\n    0,\n    0,\n    smask.scaleY,\n    smask.offsetX,\n    smask.offsetY\n  );\n\n  genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    mask.width,\n    mask.height,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap\n  );\n  ctx.drawImage(mask, 0, 0);\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    ((globalThis.devicePixelRatio || 1) * PixelsPerInch.CSS) / PixelsPerInch.PDF\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedCanvasPatterns = new LRUCache(MAX_CACHED_CANVAS_PATTERNS);\n    this.cachedPatterns = new Map();\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.current.activeSMask !== null) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedCanvasPatterns.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, false)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          if (this.current.activeSMask) {\n            // If SMask is currrenly used, it needs to be suspended or\n            // finished. Suspend only makes sense when at least one save()\n            // was performed and state needs to be reverted on restore().\n            if (\n              this.stateStack.length > 0 &&\n              this.stateStack[this.stateStack.length - 1].activeSMask ===\n                this.current.activeSMask\n            ) {\n              this.suspendSMaskGroup();\n            } else {\n              this.endSMaskGroup();\n            }\n          }\n          this.current.activeSMask = value ? this.tempSMask : null;\n          if (this.current.activeSMask) {\n            this.beginSMaskGroup();\n          }\n          this.tempSMask = null;\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  beginSMaskGroup() {\n    const activeSMask = this.current.activeSMask;\n    const drawnWidth = activeSMask.canvas.width;\n    const drawnHeight = activeSMask.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n\n    const currentCtx = this.ctx;\n    const currentTransform = currentCtx.mozCurrentTransform;\n    this.ctx.save();\n\n    const groupCtx = scratchCanvas.context;\n    groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n    groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  suspendSMaskGroup() {\n    // Similar to endSMaskGroup, the intermediate canvas has to be composed\n    // and future ctx state restored.\n    const groupCtx = this.ctx;\n    this.groupLevel--;\n    this.ctx = this.groupStack.pop();\n\n    composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n    this.ctx.restore();\n    this.ctx.save(); // save is needed since SMask will be resumed.\n    copyCtxState(groupCtx, this.ctx);\n\n    // Saving state for resuming.\n    this.current.resumeSMaskCtx = groupCtx;\n    // Transform was changed in the SMask canvas, reflecting this change on\n    // this.ctx.\n    const deltaTransform = Util.transform(\n      this.current.activeSMask.startTransformInverse,\n      groupCtx.mozCurrentTransform\n    );\n    this.ctx.transform.apply(this.ctx, deltaTransform);\n\n    // SMask was composed, the results at the groupCtx can be cleared.\n    groupCtx.save();\n    groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n    groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n    groupCtx.restore();\n  }\n\n  resumeSMaskGroup() {\n    // Resuming state saved by suspendSMaskGroup. We don't need to restore\n    // any groupCtx state since restore() command (the only caller) will do\n    // that for us. See also beginSMaskGroup.\n    const groupCtx = this.current.resumeSMaskCtx;\n    const currentCtx = this.ctx;\n    this.ctx = groupCtx;\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endSMaskGroup() {\n    const groupCtx = this.ctx;\n    this.groupLevel--;\n    this.ctx = this.groupStack.pop();\n\n    composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n    this.ctx.restore();\n    copyCtxState(groupCtx, this.ctx);\n    // Transform was changed in the SMask canvas, reflecting this change on\n    // this.ctx.\n    const deltaTransform = Util.transform(\n      this.current.activeSMask.startTransformInverse,\n      groupCtx.mozCurrentTransform\n    );\n    this.ctx.transform.apply(this.ctx, deltaTransform);\n  }\n\n  save() {\n    this.ctx.save();\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n    this.current.resumeSMaskCtx = null;\n  }\n\n  restore() {\n    // SMask was suspended, we just need to resume it.\n    if (this.current.resumeSMaskCtx) {\n      this.resumeSMaskGroup();\n    }\n    // SMask has to be finished once there is no states that are using the\n    // same SMask.\n    if (\n      this.current.activeSMask !== null &&\n      (this.stateStack.length === 0 ||\n        this.stateStack[this.stateStack.length - 1].activeSMask !==\n          this.current.activeSMask)\n    ) {\n      this.endSMaskGroup();\n    }\n\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      this.ctx.restore();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    } else {\n      // We've finished all the SMask groups, reflect that in our state.\n      this.current.activeSMask = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          break;\n        case OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath();\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse\n      );\n      needRestore = true;\n    }\n\n    if (this.contentVisible) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath();\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    let patternTransform;\n    if (current.patternFill) {\n      // TODO: Patterns are not applied correctly to text if a non-embedded\n      // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (isNum(glyph)) {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (isNum(glyph)) {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(\n        this.objs.get(objId),\n        this.cachedCanvasPatterns\n      );\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      true\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n\n    // Resetting mask state, masks will be applied on restore of the group.\n    this.current.activeSMask = null;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    this.ctx = this.groupStack.pop();\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n    } else {\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n    }\n    this.restore();\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix) {\n    this.save();\n    resetCtxToDefault(this.ctx);\n    this.current = new CanvasExtraState();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n      this.ctx.rect(rect[0], rect[1], width, height);\n      this.clip();\n      this.endPath();\n    }\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            false\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath() {\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR, cachedCanvasPatterns) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n    this.cachedCanvasPatterns = cachedCanvasPatterns;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    let pattern;\n    if (!shadingFill) {\n      if (this.cachedCanvasPatterns.has(this)) {\n        pattern = this.cachedCanvasPatterns.get(this);\n      } else {\n        const tmpCanvas = owner.cachedCanvases.getCanvas(\n          \"pattern\",\n          owner.ctx.canvas.width,\n          owner.ctx.canvas.height,\n          true\n        );\n\n        const tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n        tmpCtx.beginPath();\n        tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n\n        tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\n        if (this.matrix) {\n          tmpCtx.transform.apply(tmpCtx, this.matrix);\n        }\n        applyBoundingBox(tmpCtx, this._bbox);\n\n        tmpCtx.fillStyle = this._createGradient(tmpCtx);\n        tmpCtx.fill();\n\n        pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\n        this.cachedCanvasPatterns.set(this, pattern);\n      }\n    } else {\n      // Don't bother caching gradients, they are quick to rebuild.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    if (!shadingFill) {\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (shadingFill) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      shadingFill ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (!shadingFill) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR, cachedCanvasPatterns) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR, cachedCanvasPatterns);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (!shadingFill) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  warn,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      throw new Error(\n        'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n      );\n    }\n    warn('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n    return reason;\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        ).catch((reason) => {\n          console.log(\"Caught an error of the worker thread: \" + reason);\n        });\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of document.getElementsByName(base.name)) {\n      if (element !== base) {\n        element[key] = value;\n        const data = Object.create(null);\n        data[keyInStorage] = value;\n        storage.setValue(element.getAttribute(\"id\"), this.data.fieldName, data); // #868 modified by ngx-extended-pdf-viewer\n      }\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value:\n        data.fieldValue &&\n        ((data.exportValue && data.exportValue === data.fieldValue) ||\n          (!data.exportValue && data.fieldValue !== \"Off\")),\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, this.data.fieldName, { value }); // #868 modified by ngx-extended-pdf-viewer\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const name = event.target.name;\n      const checked = event.target.checked;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked =\n            checked &&\n            checkbox.getAttribute(\"exportValue\") === data.exportValue;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: checked\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: event.target.checked\n            });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, this.data.fieldName, { value }, this.data.buttonValue);  // #718 modified by ngx-extended-pdf-viewer\n    }\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          if (window.setFormValue) { // #718 modified by ngx-extended-pdf-viewer\n            window.setFormValue(radio.getAttribute(\"id\"), false); // #718 modified by ngx-extended-pdf-viewer\n          } // #718 modified by ngx-extended-pdf-viewer\n          storage.setValue(radio.getAttribute(\"id\"), this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n            value: false,\n            emitMessage: false, // #718 modified by ngx-extended-pdf-viewer\n          });\n        }\n      }\n      storage.setValue(id, this.data.fieldName, {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: target.checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value(event) {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              radio.checked = radioId === id && checked;\n              storage.setValue(radioId, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                value: radio.checked,\n              });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = value; // #718 modified by ngx-extended-pdf-viewer\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value(event) {\n            const options = selectElement.options;\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          element.style.transform = transform;\n        }\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          const scale = textDivProperties.canvasWidth / width;\n          if (this._enhanceTextSelection) {\n            textDivProperties.scale = scale;\n          }\n          transform = `scaleX(${scale})`;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { XfaText } from \"./xfa_text.js\";\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes(html, element, storage, intent) {\n    const { attributes } = element;\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          html.setAttribute(key, value.join(\" \"));\n        } else {\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const root = parameters.xfa;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes(rootHtml, root);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    rootDiv.style.transform = transform;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes(childHtml, child, storage, intent);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      // modified by ngx-extended-pdf-viewer #864\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\" || this.url.protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  getXfaPageViewport,\n  // From \"./shared/util.js\":\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}