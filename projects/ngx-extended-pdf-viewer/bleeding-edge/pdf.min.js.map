{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","window","filenameForDownload","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","SVG_NS","BaseCanvasFactory","constructor","unreachable","create","reset","canvasAndContext","canvas","width","height","destroy","DOMCanvasFactory","ownerDocument","globalThis","super","_document","createElement","context","fetchData","asTypedArray","isFetchSupported","isValidFetchUrl","baseURI","fetch","then","async","response","ok","statusText","data","Uint8Array","arrayBuffer","stringToBytes","text","request","XMLHttpRequest","DONE","responseText","BaseCMapReaderFactory","baseUrl","isCompressed","[object Object]","name","compressionType","CMapCompressionType","BINARY","_fetchData","catch","reason","DOMCMapReaderFactory","cMapData","BaseStandardFontDataFactory","DOMStandardFontDataFactory","DOMSVGFactory","svg","type","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","Response","prototype","ReadableStream","protocol","URL","pdfDateStringRegex","PDFDateString","input","isString","RegExp","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","createValidAbsoluteUrl","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","stringToUTF8String","escape","utf8StringToString","unescape","encodeURIComponent","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","NEED_PASSWORD","INCORRECT_PASSWORD","cond","shadow","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","r","g","b","m1","m2","p","m","d","p1","p2","p3","p4","transpose","a","c","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","_display_utils","_font_loader","_node_utils","_annotation_storage","_api_compatibility","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","params","rangeTransport","worker","location","href","Buffer","isNaN","docBaseUrl","maxImageSize","useSystemFonts","useWorkerFetch","disableFontFace","apiCompatibilityParams","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","standardFontDataUrl","PDFDocumentLoadingTaskClosure","nextDocumentId","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","annotationStorage","numPages","fingerprint","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","rotate","userUnit","view","getViewport","getAnnotations","intent","_annotationsPromise","_annotationsIntent","_jsActionsPromise","getPageJSActions","children","render","canvasContext","viewport","renderInteractiveForms","imageLayer","canvasFactory","background","includeAnnotationStorage","optionalContentConfigPromise","_intentState","renderingIntent","intentState","set","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","_intentState2","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","sendWithStream","combineTextItems","highWaterMark","textContent","getTextContent","readableStream","reader","getReader","items","styles","pump","done","getStructTree","_structTreePromise","_destroy","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","curIntentState","delete","stats","LoopbackPort","_listeners","_deferred","postMessage","cloned","WeakMap","event","cloneValue","transfers","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","pdfjsFilePath","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","workerHandler","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","cMapUrl","CMapReaderFactory","cMapPacked","StandardFontDataFactory","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","AnnotationStorage","page","hasOwnProperty","resetModified","terminated","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","htmlForXfa","exception","updatePassword","exportedData","has","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","serializable","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","cssFontInfo","css","weight","fontWeight","italicAngle","FontFace","fontFamily","mimetype","getPathGenerator","character","cmds","jsBuf","current","__non_webpack_require__","fs","Canvas","process","nw","versions","electron","_storage","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","modified","entry","_setModified","setFormValue","radioValue","getAll","compatibilityParams","checkFontFace","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","canvasEntry","trackTransform","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","setCurrentPoint","CanvasGraphicsClosure","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","genericComposeSMask","subtype","backdrop","hasBackdrop","composeFn","chunkSize","row","chunkHeight","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","_cachedGetSinglePixelWidth","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","executionStartIdx","argsArrayLen","chunkOperations","continueCallback","endTime","steps","fnId","OPS","depObjId","objsPool","drawImage","endLayout","lineCap","style","lineJoin","miterLimit","limit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","mozCurrentTransformInverse","deltaTransform","resumeSMaskGroup","ops","xw","yh","consumePath","getPattern","getSinglePixelWidth","needRestore","paths","pendingTextPaths","beginPath","path","spacing","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","showType3Text","glyphs","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measurement","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","operatorListId","transformed","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPattern","arguments","strokeStyle","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","imageSmoothingEnabled","mozImageSmoothingEnabled","img","isPatternFill","COMPILE_TYPE3_GLYPHS","compileType3Glyph","POINT_TYPES","width1","j0","points","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","maskCanvas","skewX","skewY","positions","images","image","w","h","imgToPaint","tmpCanvas","tmpCtx","widthScale","heightScale","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","getCanvasPosition","appendImage","left","top","visible","tag","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","RadialAxialShadingPattern","MeshShadingPattern","DummyShadingPattern","svgElement","createMatrix","DOMMatrix","svgFactory","applyBoundingBox","Path2D","region","BaseShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_matrix","owner","grad","colorStop","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","boundsWidth","boundsHeight","combinedScale","paddedWidth","BORDER_SIZE","paddedHeight","backgroundColor","matrixScale","temporaryPatternCanvas","PaintType","MAX_PATTERN_SIZE","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","maxSize","realOutputSize","bboxWidth","bboxHeight","cssColor","domMatrix","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","parsedData","rawData","_metadataMap","_data","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","_scripting_utils","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","enableScripting","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","normalizeRect","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","_renderQuadrilaterals","quadrilateral","className","isTooltipOnly","actions","Action","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","hasPopup","toLowerCase","JSON","alternativeText","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_dispatchEventFromSandbox","setColor","styleName","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","hasAppearance","fieldValue","setPropertyOnSiblings","storage","storedData","fieldName","valueAsString","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","blurListener","activeElement","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","readOnly","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","exportValue","checkbox","buttonValue","radio","emitMessage","pdfButtonValue","radioId","selectElement","combo","options","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","call","multipleSelection","selected","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dateObject","stringify","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","rendered","renderedElement","elements","makeColorComp","G","components","RGB_HTML","CMYK_RGB","renderTextLayer","renderParameters","TextLayerRenderTask","textContentStream","textDivs","textContentItemsStr","enhanceTextSelection","timeout","DEFAULT_FONT_SIZE","ascentCache","AllWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","dir","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","angleCos","angleSin","divWidth","divHeight","getAxialAlignedBoundingBox","right","bottom","_canceled","_textDivs","textDivsLength","findPositiveMin","ts","t","expand","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","jj","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","_textContent","_container","_textContentItemsStr","_enhanceTextSelection","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","parent","classList","setAttribute","parentNode","_layoutText","measureText","fingerprintIsBlockedException","_render","styleCache","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","convertOpList","operatorIdMapping","opList","fn","opListToTree","opTree","opListElement","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","XfaLayer","html","fieldId","attributes","setupStorage","xfa","rootHtml","setAttributes","stack","rootDiv","coeffs","child","childHtml","_network_utils","NetworkManager","isHttp","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_rangeChunkSize","_rangeRequestReaders","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","createResponseStatusError","_requestId","onClosed","_close","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","err","quotindex","extvalue","encodingend","langvalue","charset","hex","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","_headersCapability","AbortController","_abortController","_headers","_readCapability","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg","_xfa_layer"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nfunction fetchData(url, asTypedArray) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n  ) {\n    return fetch(url).then(async response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (asTypedArray) {\n        data = new Uint8Array(await response.arrayBuffer());\n      } else {\n        data = stringToBytes(await response.text());\n      }\n      return data;\n    });\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = this.baseUrl + filename + \".pfb\";\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  addLinkAttributes,\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isDataScheme,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When true, fonts that aren't embedded\n *   in the PDF will fallback to a system font. Defaults to true for web\n *   environments and false for node.\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {boolean} [useWorkerFetch] - Enable using fetch in the worker for\n *   resources. This currently only used for fetching the font data from the\n *   worker thread. When `true`, StandardFontDataFactory will be ignored. The\n *   default value is `true` in web environment and `false` for Node.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts = !isNodeJS;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * @type {Object | null} An object representing a HTML tree structure\n   * to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @typedef {Object} RefProxy\n   * @property {number} num\n   * @property {number} gen\n   */\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well. The default value is `false`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {boolean} [includeAnnotationStorage] - Render stored interactive\n *   form element data, from the {@link AnnotationStorage}-instance, onto the\n *   canvas itself; useful e.g. for printing. The default value is `false`.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this._annotationsPromise || this._annotationsIntent !== intent) {\n      this._annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this._annotationsIntent = intent;\n    }\n    return this._annotationsPromise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    includeAnnotationStorage = false,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const annotationStorage = includeAnnotationStorage\n      ? this._transport.annotationStorage.serializable\n      : null;\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage,\n      });\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new AbortException(reason?.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof URL) {\n        throw new Error(`LoopbackPort.postMessage - cannot clone: ${value}`);\n      }\n      result = Array.isArray(value) ? [] : Object.create(null);\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty?.(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript?.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker?.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n    // modified by ngx-extended-pdf-viewer #376\n    let cMapUrl = params.cMapUrl;\n    if (cMapUrl.constructor.name === \"Function\") {\n      cMapUrl = cMapUrl();\n    }\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n    // end of modification\n    this.StandardFontDataFactory = new params.StandardFontDataFactory({\n      baseUrl: params.standardFontDataUrl,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed\"));\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._cancelBound = this.cancel.bind(this);\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager?.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const { canvasContext, viewport, transform, imageLayer, background } =\n        this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nfunction fetchData(url) {\n  return new Promise((resolve, reject) => {\n    const fs = __non_webpack_require__(\"fs\");\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n      resolve(new Uint8Array(data));\n    });\n  });\n}\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          this.setValue(key, undefined, obj); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    return obj !== undefined ? obj : defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      this._storage.set(key, value);\n      modified = true;\n    }\n    if (modified) {\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPattern, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] = m[0] * x;\n    m[1] = m[1] * x;\n    m[2] = m[2] * y;\n    m[3] = m[3] * y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\n/**\n * @type {any}\n */\nconst CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  const EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  const EXECUTION_STEPS = 10;\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0,\n      destPos;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n    let i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      const srcLength = src.byteLength;\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      const dest32DataLength = dest32.length;\n      const fullSrcDiff = (width + 7) >> 3;\n      let white = 0xffffffff;\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          const srcDiff = srcLength - srcPos;\n          let k = 0;\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          const kEndUnrolled = kEnd & ~7;\n          let mask = 0;\n          let srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n\n    for (let i = 0; i < totalChunks; i++) {\n      const thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      let destPos = 3; // alpha component offset\n      for (let j = 0; j < thisChunkHeight; j++) {\n        let elem,\n          mask = 0;\n        for (let k = 0; k < width; k++) {\n          if (!mask) {\n            elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    const properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (let i = 0, ii = properties.length; i < ii; i++) {\n      const property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    const length = bytes.length;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        const alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    const scale = 1 / 255;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    for (let i = 3; i < length; i += 4) {\n      const y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    const hasBackdrop = !!backdrop;\n    const r0 = hasBackdrop ? backdrop[0] : 0;\n    const g0 = hasBackdrop ? backdrop[1] : 0;\n    const b0 = hasBackdrop ? backdrop[2] : 0;\n\n    let composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    const PIXELS_TO_PROCESS = 1048576;\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (let row = 0; row < height; row += chunkSize) {\n      const chunkHeight = Math.min(chunkSize, height - row);\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx) {\n    const mask = smask.canvas;\n    const maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      smask.backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  const NORMAL_CLIP = {};\n  const EO_CLIP = {};\n\n  // eslint-disable-next-line no-shadow\n  class CanvasGraphics {\n    constructor(\n      canvasCtx,\n      commonObjs,\n      objs,\n      canvasFactory,\n      imageLayer,\n      optionalContentConfig\n    ) {\n      this.ctx = canvasCtx;\n      this.current = new CanvasExtraState();\n      this.stateStack = [];\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.res = null;\n      this.xobjs = null;\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.canvasFactory = canvasFactory;\n      this.imageLayer = imageLayer;\n      this.groupStack = [];\n      this.processingType3 = null;\n      // Patterns are painted relative to the initial page/form transform, see\n      // PDF spec 8.7.2 NOTE 1.\n      this.baseTransform = null;\n      this.baseTransformStack = [];\n      this.groupLevel = 0;\n      this.smaskStack = [];\n      this.smaskCounter = 0;\n      this.tempSMask = null;\n      this.contentVisible = true;\n      this.markedContentStack = [];\n      this.optionalContentConfig = optionalContentConfig;\n      this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n      if (canvasCtx) {\n        // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n        // the transformation must already be set in canvasCtx._transformMatrix.\n        addContextCurrentTransform(canvasCtx);\n      }\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      const width = this.ctx.canvas.width;\n      const height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        const transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n      this._combinedScaleFactor = Math.hypot(\n        this.baseTransform[0],\n        this.baseTransform[2]\n      );\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    }\n\n    executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      let i = executionStartIdx || 0;\n      const argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      const chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      let steps = 0;\n\n      const commonObjs = this.commonObjs;\n      const objs = this.objs;\n      let fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    }\n\n    endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    }\n\n    // Graphics state\n    setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    }\n\n    setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    }\n\n    setDash(dashArray, dashPhase) {\n      const ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (let i = 0, ii = states.length; i < ii; i++) {\n        const state = states[i];\n        const key = state[0];\n        const value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    }\n\n    beginSMaskGroup() {\n      const activeSMask = this.current.activeSMask;\n      const drawnWidth = activeSMask.canvas.width;\n      const drawnHeight = activeSMask.canvas.height;\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      const currentCtx = this.ctx;\n      const currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      const groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    }\n\n    suspendSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    }\n\n    resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      const groupCtx = this.current.resumeSMaskCtx;\n      const currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    }\n\n    endSMaskGroup() {\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    }\n\n    save() {\n      this.ctx.save();\n      const old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    }\n\n    restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    }\n\n    transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    // Path\n    constructPath(ops, args) {\n      const ctx = this.ctx;\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n\n            const xw = x + width;\n            const yh = y + height;\n            ctx.moveTo(x, y);\n            if (width === 0 || height === 0) {\n              ctx.lineTo(xw, yh);\n            } else {\n              ctx.lineTo(xw, y);\n              ctx.lineTo(xw, yh);\n              ctx.lineTo(x, yh);\n            }\n\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    }\n\n    closePath() {\n      this.ctx.closePath();\n    }\n\n    stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n          const lineWidth = this.getSinglePixelWidth();\n          ctx.save();\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          const lineWidth = this.getSinglePixelWidth();\n          if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n            // The current transform will transform a square pixel into a\n            // parallelogram where both heights are lower than 1 and not equal.\n            ctx.save();\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            // Prevent drawing too thin lines by enforcing a minimum line width.\n            ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n            ctx.stroke();\n          }\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      let needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    }\n\n    eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    }\n\n    fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    }\n\n    eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    }\n\n    endPath() {\n      this.consumePath();\n    }\n\n    // Clipping\n    clip() {\n      this.pendingClip = NORMAL_CLIP;\n    }\n\n    eoClip() {\n      this.pendingClip = EO_CLIP;\n    }\n\n    // Text\n    beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    }\n\n    endText() {\n      const paths = this.pendingTextPaths;\n      const ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    }\n\n    setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    }\n\n    setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setFont(fontRefName, size) {\n      const fontObj = this.commonObjs.get(fontRefName);\n      const current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      const name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    }\n\n    setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    }\n\n    setTextRise(rise) {\n      this.current.textRise = rise;\n    }\n\n    moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.hypot(a, b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const textRenderingMode = current.textRenderingMode;\n      const fontSize = current.fontSize / current.fontSizeScale;\n      const fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      const isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      let addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          }\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.save();\n            ctx.moveTo(x, y);\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.strokeText(character, 0, 0);\n            ctx.restore();\n          } else {\n            ctx.strokeText(character, x, y);\n          }\n        }\n      }\n\n      if (isAddToPathSet) {\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    }\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      const data = ctx.getImageData(0, 0, 10, 10).data;\n      let enabled = false;\n      for (let i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      const ctx = this.ctx;\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const glyphsLength = glyphs.length;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      const simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      let lineWidth = current.lineWidth;\n      let resetLineWidthToOne = false;\n      const scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        const fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth();\n          resetLineWidthToOne = lineWidth < 0;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      let x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        const glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        let restoreNeeded = false;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        const accent = glyph.accent;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          const vx =\n            -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n\n          // #707 modified by ngx-extended-pdf-viewer\n          const measurement = ctx.measureText(character);\n          if (measurement) {\n            const measuredWidth = ((measurement.width * 1000) / fontSize) * fontSizeScale;\n            if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n              const characterScaleX = width / measuredWidth;\n              restoreNeeded = true;\n              ctx.save();\n              ctx.scale(characterScaleX, 1);\n              scaledX /= characterScaleX;\n            } else if (width !== measuredWidth) {\n              scaledX += (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n            }\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(\n              character,\n              scaledX,\n              scaledY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n            if (accent) {\n              const scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              const scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform,\n                resetLineWidthToOne\n              );\n            }\n          }\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n      return undefined;\n    }\n\n    showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      const fontDirection = current.fontDirection;\n      const spacingDir = font.vertical ? 1 : -1;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const textHScale = current.textHScale * fontDirection;\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      const glyphsLength = glyphs.length;\n      const isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      let i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    }\n\n    // Type3 fonts\n    setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    }\n\n    setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    }\n\n    // Color\n    getColorN_Pattern(IR) {\n      let pattern;\n      if (IR[0] === \"TilingPattern\") {\n        const color = IR[1];\n        const baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        const canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPattern(IR);\n      }\n      return pattern;\n    }\n\n    setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    }\n\n    setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    }\n\n    setFillRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    }\n\n    shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      this.save();\n      const pattern = getShadingPattern(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      const inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        const canvas = ctx.canvas;\n        const width = canvas.width;\n        const height = canvas.height;\n\n        const bl = Util.applyTransform([0, 0], inv);\n        const br = Util.applyTransform([0, height], inv);\n        const ul = Util.applyTransform([width, 0], inv);\n        const ur = Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    }\n\n    // Images\n    beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    }\n\n    beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    }\n\n    beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      const currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      const currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      let bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      const canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      let scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      let cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Resetting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    }\n\n    endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      const groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    }\n\n    beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    }\n\n    endAnnotations() {\n      this.restore();\n    }\n\n    beginAnnotation(rect, transform, matrix) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        const width = rect[2] - rect[0];\n        const height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    }\n\n    endAnnotation() {\n      this.restore();\n    }\n\n    paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph?.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    }\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      const ctx = this.ctx;\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    }\n\n    paintImageMaskXObjectGroup(images) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      for (let i = 0, ii = images.length; i < ii; i++) {\n        const image = images[i];\n        const width = image.width,\n          height = image.height;\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    }\n\n    paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      const width = imgData.width;\n      const height = imgData.height;\n      const map = [];\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    }\n\n    paintInlineImageXObject(imgData) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      const currentTransform = ctx.mozCurrentTransformInverse;\n      let widthScale = Math.max(\n        Math.hypot(currentTransform[0], currentTransform[1]),\n        1\n      );\n      let heightScale = Math.max(\n        Math.hypot(currentTransform[2], currentTransform[3]),\n        1\n      );\n\n      let imgToPaint, tmpCanvas, tmpCtx;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      let paintWidth = width,\n        paintHeight = height;\n      let tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        let newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    }\n\n    paintInlineImageXObjectGroup(imgData, map) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (let i = 0, ii = map.length; i < ii; i++) {\n        const entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    }\n\n    paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    }\n\n    // Marked content\n\n    markPoint(tag) {\n      // TODO Marked content.\n    }\n\n    markPointProps(tag, properties) {\n      // TODO Marked content.\n    }\n\n    beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n\n    beginMarkedContentProps(tag, properties) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    }\n\n    endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    }\n\n    // Compatibility\n\n    beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    }\n\n    endCompat() {\n      // TODO stop ignoring undefined operators\n    }\n\n    // Helper functions\n\n    consumePath() {\n      const ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    }\n\n    getSinglePixelWidth() {\n      if (this._cachedGetSinglePixelWidth === null) {\n        // If transform is [a b] then a pixel (square) is transformed\n        //                 [c d]\n        // into a parallelogram: its area is the abs value of the determinant.\n        // This parallelogram has 2 heights:\n        //  - Area / |col_1|;\n        //  - Area / |col_2|.\n        // so in order to get a height of at least 1, pixel height\n        // must be computed as followed:\n        //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n        // This is equivalent to:\n        //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n        const m = this.ctx.mozCurrentTransform;\n\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n        const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n        const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n        if (\n          sqNorm1 !== sqNorm2 &&\n          this._combinedScaleFactor * pixelHeight > 1\n        ) {\n          // The parallelogram isn't a square and at least one height\n          // is lower than 1 so the resulting line width must be 1\n          // but it cannot be achieved with one scale: when scaling a pixel\n          // we'll get a rectangle (see issue #12295).\n          // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n          // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n          // then we'll get a rectangle 1x1e5 which is wrong.\n          // In this case, we must reset the transform, set linewidth to 1\n          // and then stroke.\n          this._cachedGetSinglePixelWidth = -(\n            this._combinedScaleFactor * pixelHeight\n          );\n        } else if (absDet > Number.EPSILON) {\n          this._cachedGetSinglePixelWidth = pixelHeight;\n        } else {\n          // Matrix is non-invertible.\n          this._cachedGetSinglePixelWidth = 1;\n        }\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    }\n\n    getCanvasPosition(x, y) {\n      const transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    }\n\n    isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  for (const op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n\nlet svgElement;\n\n// TODO: remove this when Firefox ESR supports DOMMatrix.\nfunction createMatrix(matrix) {\n  if (typeof DOMMatrix !== \"undefined\") {\n    return new DOMMatrix(matrix);\n  }\n  if (!svgElement) {\n    const svgFactory = new DOMSVGFactory();\n    svgElement = svgFactory.createElement(\"svg\");\n  }\n  return svgElement.createSVGMatrix(matrix);\n}\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this._matrix = IR[8];\n  }\n\n  getPattern(ctx, owner, shadingFill) {\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      ctx.canvas.width,\n      ctx.canvas.height,\n      true\n    );\n\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n    tmpCtx.beginPath();\n    tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n\n    if (!shadingFill) {\n      tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\n      if (this._matrix) {\n        tmpCtx.transform.apply(tmpCtx, this._matrix);\n      }\n    } else {\n      tmpCtx.setTransform.apply(tmpCtx, ctx.mozCurrentTransform);\n    }\n    applyBoundingBox(tmpCtx, this._bbox);\n\n    let grad;\n    if (this._type === \"axial\") {\n      grad = tmpCtx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = tmpCtx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    tmpCtx.fillStyle = grad;\n    tmpCtx.fill();\n\n    const pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\n    pattern.setTransform(createMatrix(ctx.mozCurrentTransformInverse));\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y1 === y2) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._matrix = IR[6];\n    this._bbox = IR[7];\n    this._background = IR[8];\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, shadingFill) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (shadingFill) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this._matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this._matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      shadingFill ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (!shadingFill) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this._matrix) {\n        ctx.transform.apply(ctx, this._matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, bbox, x0, y0, x1, y1) {\n    if (Array.isArray(bbox) && bbox.length === 4) {\n      const bboxWidth = x1 - x0;\n      const bboxHeight = y1 - y0;\n      graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n      graphics.clip();\n      graphics.endPath();\n    }\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, shadingFill) {\n    ctx = this.ctx;\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = ctx.mozCurrentTransformInverse;\n    if (!shadingFill) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = createMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        ).catch((reason) => {\n          console.log(\"Caught an error of the worker thread: \" + reason);\n        });\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    return (\n      (navigator.platform.includes(\"Win\") && event.ctrlKey) ||\n      (navigator.platform.includes(\"Mac\") && event.metaKey)\n    );\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of document.getElementsByName(base.name)) {\n      if (element !== base) {\n        element[key] = value;\n        const data = Object.create(null);\n        data[keyInStorage] = value;\n        storage.setValue(element.getAttribute(\"id\"), data);\n      }\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value:\n        data.fieldValue &&\n        ((data.exportValue && data.exportValue === data.fieldValue) ||\n          (!data.exportValue && data.fieldValue !== \"Off\")),\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: event.target.checked,\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: event.target.checked\n            });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, this.data.fieldName, { value }, this.data.buttonValue);  // #718 modified by ngx-extended-pdf-viewer\n    }\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          if (window.setFormValue) { // #718 modified by ngx-extended-pdf-viewer\n            window.setFormValue(radio.getAttribute(\"id\"), false); // #718 modified by ngx-extended-pdf-viewer\n          } // #718 modified by ngx-extended-pdf-viewer\n          storage.setValue(radio.getAttribute(\"id\"), this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n            value: false,\n            emitMessage: false, // #718 modified by ngx-extended-pdf-viewer\n          });\n        }\n      }\n      storage.setValue(id, this.data.fieldName, {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: target.checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              radio.checked = radioId === id && checked;\n              storage.setValue(radioId, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                value: radio.checked,\n              });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = value; // #718 modified by ngx-extended-pdf-viewer\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const options = selectElement.options;\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          element.style.transform = transform;\n        }\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    originalTransform: null,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    scale: 1,\n  };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\"' +\n          \" parameters specified.\"\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PageViewport } from \"./display_utils.js\";\n\nclass XfaLayer {\n  static setupStorage(html, fieldId, element, storage, intent) {\n    const storedData = storage.getValue(fieldId, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(fieldId, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (element.attributes.type === \"radio\") {\n          if (storedData.value) {\n            html.setAttribute(\"checked\", true);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            const { target } = event;\n            for (const radio of document.getElementsByName(target.name)) {\n              if (radio !== target) {\n                const id = radio.id;\n                storage.setValue(id.split(\"-\")[0], { value: false });\n              }\n            }\n            storage.setValue(fieldId, { value: target.checked });\n          });\n        } else if (element.attributes.type === \"checkbox\") {\n          if (storedData.value) {\n            html.setAttribute(\"checked\", true);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(fieldId, { value: event.target.checked });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(fieldId, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? null\n              : options[options.selectedIndex].value;\n          storage.setValue(fieldId, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes(html, element, storage, intent) {\n    const { attributes } = element;\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined || key === \"fieldId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          html.setAttribute(key, value.join(\" \"));\n        } else {\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.fieldId !== undefined) {\n      this.setupStorage(html, attributes.fieldId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const root = parameters.xfa;\n    const intent = parameters.intent;\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes(rootHtml, root);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    let { viewport } = parameters;\n    if (!(viewport instanceof PageViewport)) {\n      viewport = new PageViewport(viewport);\n    }\n    const coeffs = viewport.transform.join(\",\");\n    rootDiv.style.transform = `matrix(${coeffs})`;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        html.appendChild(document.createTextNode(child.value));\n        continue;\n      }\n\n      const childHtml = document.createElement(name);\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes(childHtml, child, storage, intent);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        childHtml.appendChild(document.createTextNode(child.value));\n      }\n    }\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(exception);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason?.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\n// modified by ngx-extended-pdf-viewer\n// import { apiCompatibilityParams } from \"./display/api_compatibility.js\";\n// end of modification\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  if (isFetchSupported()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    // modified by ngx-extended-pdf-viewer - removed node.js support\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  // apiCompatibilityParams,\n  // end of modification\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}