{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","deprecated","details","console","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","window","filenameForDownload","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","getXfaPageViewport","xfaPage","scale","rotation","width","height","style","viewBox","parseInt","PageViewport","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","error","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","_base_factory","PixelsPerInch","CSS","PDF","PDF_TO_CSS_UNITS","shadow","DOMCanvasFactory","BaseCanvasFactory","constructor","ownerDocument","globalThis","super","_document","_createCanvas","canvas","createElement","async","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","fetch","ok","statusText","Uint8Array","stringToBytes","text","request","XMLHttpRequest","DONE","data","responseText","DOMCMapReaderFactory","BaseCMapReaderFactory","_fetchData","isCompressed","then","cMapData","compressionType","DOMStandardFontDataFactory","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","type","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","name","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","baseUrl","protocol","URL","pdfDateStringRegex","PDFDateString","static","input","isString","RegExp","matches","year","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","reason","createValidAbsoluteUrl","options","dots","tryConvertEncoding","stringToUTF8String","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","replaceInvisible","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","utf8StringToString","unescape","encodeURIComponent","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","cond","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","InvisibleCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","r","g","b","m1","m2","p","m","d","p1","p2","p3","p4","transpose","a","c","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","mt","j","jlen","escape","create","context","reset","canvasAndContext","destroy","CMapCompressionType","catch","svg","_display_utils","_font_loader","_node_utils","_annotation_storage","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","baseHref","params","rangeTransport","worker","href","location","Buffer","isNaN","docBaseUrl","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","cMapUrl","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","standardFontDataUrl","idCounters","doc","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","fingerprints","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","getAnnotations","intent","intentArgs","getRenderingIntent","cacheKey","renderingIntent","set","annotations","annotation","_jsActionsPromise","getPageJSActions","children","render","canvasContext","viewport","annotationMode","AnnotationMode","imageLayer","canvasFactory","background","optionalContentConfigPromise","arguments","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","intentPrint","RenderingIntentFlag","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","sendWithStream","combineTextItems","highWaterMark","textContent","getTextContent","getXfa","xfa","XfaText","readableStream","reader","getReader","items","styles","pump","done","getStructTree","_structTreePromise","_destroy","pageCache","waitOn","values","force","completed","cancel","clear","resetStats","_startRenderPage","_renderPageChunk","operatorListChunk","streamReader","setTimeout","curCacheKey","curIntentState","delete","stats","LoopbackPort","_listeners","_deferred","postMessage","event","cloneValue","object","structuredClone","transfers","cloned","WeakMap","fallbackCloneValue","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","require","pdfjsFilePath","wrapper","_workerPorts","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","WorkerMessageHandler","workerHandler","has","_setupFakeWorkerGlobal","loader","mainWorkerMessageHandler","eval","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","CMapReaderFactory","cMapPacked","StandardFontDataFactory","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","AnnotationStorage","isOpList","lastModified","page","hasOwnProperty","resetModified","terminated","_getFieldObjectsPromise","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","featureId","serializable","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","cssFontInfo","css","weight","fontWeight","italicAngle","FontFace","fontFamily","mimetype","getPathGenerator","character","cmds","jsBuf","current","args","__non_webpack_require__","fs","Canvas","process","nw","versions","electron","_storage","_timeStamp","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","modified","entry","_setModified","setFormValue","radioValue","getAll","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","canvasEntry","trackTransform","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","intersect","Infinity","getClippedPathBoundingBox","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","layerBox","layerOffsetX","layerOffsetY","layerWidth","layerHeight","genericComposeSMask","maskCtx","subtype","backdrop","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","chunkSize","row","chunkHeight","getImageSmoothingEnabled","interpolate","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","markedContentStack","cachedCanvases","cachedPatterns","_cachedGetSinglePixelWidth","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","executionStartIdx","argsArrayLen","chunkOperations","continueCallback","endTime","steps","fnId","OPS","depObjId","objsPool","drawImage","endLayout","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","inverseTransform","heightScale","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","normalizeRect","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","inverse","lineCap","lineJoin","miterLimit","limit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","checkSMaskState","inSMaskMode","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","mirrorContextOperations","_removeMirroring","bezierCurveTo","beginPath","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","__originalTransform","__originalSetTransform","__originalResetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","cp1x","cp1y","cp2x","cp2y","compose","dirtyBox","clearRect","startX","startY","ops","xw","yh","consumePath","getPattern","getSinglePixelWidth","needRestore","paths","pendingTextPaths","path","spacing","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","showType3Text","glyphs","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","operatorListId","transformed","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","strokeStyle","matrix","getShadingPattern","SHADING","inv","bl","br","ul","ur","bbox","currentCtx","group","isolated","knockout","currentTransform","canvasBounds","scaleX","scaleY","groupCtx","startTransformInverse","imageSmoothingEnabled","currentMtx","getAxialAlignedBoundingBox","COMPILE_TYPE3_GLYPHS","compileType3Glyph","POINT_TYPES","width1","j0","points","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","position","getCanvasPosition","appendImage","left","top","visible","tag","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","RadialAxialShadingPattern","MeshShadingPattern","DummyShadingPattern","applyBoundingBox","Path2D","region","BaseShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","colorStop","ownerBBox","owner","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","boundsWidth","boundsHeight","combinedScale","paddedWidth","BORDER_SIZE","paddedHeight","backgroundColor","matrixScale","temporaryPatternCanvas","PaintType","MAX_PATTERN_SIZE","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","maxSize","realOutputSize","bboxWidth","bboxHeight","cssColor","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","streamController","_deleteStreamController","allSettled","metadataMap","parsedData","rawData","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","output","walk","node","child","_scripting_utils","_xfa_layer","DEFAULT_TAB_INDEX","GetElementsByNameSet","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","_fieldObjects","fieldObjects","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","titleObj","modificationDate","contentsObj","richText","hideWrapper","_renderQuadrilaterals","quadrilateral","className","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","platform","isWin","isMac","isTooltipOnly","resetForm","actions","Action","newWindow","_bindNamedAction","_bindLink","hasClickAction","_bindJSAction","_bindResetFormAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","onclick","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","storage","allIds","valueAsString","Event","hasPopup","toLowerCase","JSON","alternativeText","title","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_setBackgroundColor","_dispatchEventFromSandbox","setColor","styleName","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","storedData","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","readOnly","defaultFieldValue","blurListener","activeElement","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","checkbox","curChecked","buttonValue","radio","emitMessage","pdfButtonValue","fieldvalue","fontSizeStyle","selectElement","combo","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","prototype","call","multipleSelection","selected","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dir","dateObject","stringify","toLocaleDateString","toLocaleTimeString","contents","_formatContents","XfaLayer","html","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","registerAcroformAnnotations","rendered","renderedElement","elements","makeColorComp","G","components","RGB_HTML","CMYK_RGB","xfaOn","xfaOff","attributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","setupStorage","rootHtml","setAttributes","stack","rootDiv","textDivs","parent","childHtml","xmlns","el","renderTextLayer","renderParameters","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","timeout","DEFAULT_FONT_SIZE","ascentCache","AllWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","_enhanceTextSelection","canvasWidth","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","_textDivs","textDivsLength","findPositiveMin","ts","expand","_viewport","expanded","expandBounds","boxes","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","jj","boxScale","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","classList","setAttribute","parentNode","_layoutText","measureText","fingerprintIsBlockedException","_render","styleCache","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","http","https","fileUriRegex","PDFNodeStream","parseUrl","sourceUrl","parsedUrl","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","stat","createReadStream","createResponseStatusError","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","err","quotindex","extvalue","encodingend","langvalue","charset","hex","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_requestId","onClosed","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  isString,\n  removeNullCharacters,\n  shadow,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nconst PixelsPerInch = {\n  CSS: 96.0,\n  PDF: 72.0,\n\n  /** @type {number} */\n  get PDF_TO_CSS_UNITS() {\n    return shadow(this, \"PDF_TO_CSS_UNITS\", this.CSS / this.PDF);\n  },\n};\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLAnchorElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    // modified by ngx-extended-pdf-viewer #864\n    return protocol === \"http:\" || protocol === \"https:\" || protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function (error) {\n      console.log(error);\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  addLinkAttributes,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\": // modified by ngx-extended-pdf-viewer #864\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nconst NullCharactersRegExp = /\\x00+/g;\nconst InvisibleCharactersRegExp = /[\\x01-\\x1F]/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str, replaceInvisible = false) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  if (replaceInvisible) {\n    str = str.replace(InvisibleCharactersRegExp, \" \");\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const baseHref = src.baseHref;\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            // #929/#813 modified by ngx-extended-pdf-viewer\n            // to restore the drag'n'drop functionality\n            if (baseHref) {\n              params[key] = new URL(value, window.location.origin + baseHref).href;\n            } else {\n              params[key] = new URL(value, window.location).href;\n            }\n            // #929/#813 end of modification\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  // #376 modified by ngx-extended-pdf-viewer\n  let cMapUrl = source.cMapUrl;\n  if (cMapUrl.constructor.name === \"Function\") {\n    cMapUrl = cMapUrl();\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        promise = promise.then(annotations => {\n          for (const annotation of annotations) {\n            if (annotation.titleObj !== undefined) {\n              Object.defineProperty(annotation, \"title\", {\n                get() {\n                  deprecated(\n                    \"`title`-property on annotation, please use `titleObj` instead.\"\n                  );\n                  return annotation.titleObj.str;\n                },\n              });\n            }\n            if (annotation.contentsObj !== undefined) {\n              Object.defineProperty(annotation, \"contents\", {\n                get() {\n                  deprecated(\n                    \"`contents`-property on annotation, please use `contentsObj` instead.\"\n                  );\n                  return annotation.contentsObj.str;\n                },\n              });\n            }\n          }\n          return annotations;\n        });\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve();\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(object) {\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        globalThis.structuredClone\n      ) {\n        return globalThis.structuredClone(object, transfers);\n      }\n\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      function fallbackCloneValue(value) {\n        if (\n          typeof value === \"function\" ||\n          typeof value === \"symbol\" ||\n          value instanceof URL\n        ) {\n          throw new Error(\n            `LoopbackPort.postMessage - cannot clone: ${value?.toString()}`\n          );\n        }\n\n        if (typeof value !== \"object\" || value === null) {\n          return value;\n        }\n        if (cloned.has(value)) {\n          // already cloned the object\n          return cloned.get(value);\n        }\n        let buffer, result;\n        if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n          // We found object with ArrayBuffer (typed array).\n          if (transfers?.includes(buffer)) {\n            result = new value.constructor(\n              buffer,\n              value.byteOffset,\n              value.byteLength\n            );\n          } else {\n            result = new value.constructor(value);\n          }\n          cloned.set(value, result);\n          return result;\n        }\n        if (value instanceof Map) {\n          result = new Map();\n          cloned.set(value, result); // Adding to cache now for cyclic references.\n          for (const [key, val] of value) {\n            result.set(key, fallbackCloneValue(val));\n          }\n          return result;\n        }\n        if (value instanceof Set) {\n          result = new Set();\n          cloned.set(value, result); // Adding to cache now for cyclic references.\n          for (const val of value) {\n            result.add(fallbackCloneValue(val));\n          }\n          return result;\n        }\n        result = Array.isArray(value) ? [] : Object.create(null);\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        // Cloning all value and object properties, however ignoring properties\n        // defined via getter.\n        for (const i in value) {\n          let desc,\n            p = value;\n          while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n            p = Object.getPrototypeOf(p);\n          }\n          if (typeof desc.value === \"undefined\") {\n            continue;\n          }\n          if (typeof desc.value === \"function\") {\n            if (i === 'cMapUrl') {\n              result[i] = cloneValue(desc.value());\n            } else if (!value.hasOwnProperty?.(i)) {\n              continue;\n            }\n          }\n          result[i] = fallbackCloneValue(desc.value);\n        }\n        return result;\n      }\n\n      const cloned = new WeakMap();\n      return fallbackCloneValue(object);\n    }\n\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.postMessageTransfers = true;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            // supportTypedArray\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n            if (!data.supportTransfers) {\n              this.postMessageTransfers = false;\n            }\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      // modified by ngx-extended-pdf-viewer #376\n\t  let cMapUrl = params.cMapUrl;\n\t  if (cMapUrl.constructor.name === \"Function\") {\n\t    cMapUrl = cMapUrl();\n\t  }\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let lastModified = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        lastModified = this.annotationStorage.lastModified;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${lastModified}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    this.loadingTask.onUnsupportedFeature?.(featureId);\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      ref,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return (this._getFieldObjectsPromise ||=\n      this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    window.ngxZone.runOutsideAngular(() => {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    });\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  RenderTask,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._timeStamp = Date.now();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          this.setValue(key, undefined, obj); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    if (obj === undefined) {\n      return defaultValue;\n    }\n    return Object.assign(defaultValue, obj);\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._timeStamp = Date.now();\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get lastModified() {\n    return this._timeStamp.toString();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = null;\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    this.updatePathMinMax(transform, box[0], box[1]);\n    this.updatePathMinMax(transform, box[2], box[3]);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.current.activeSMask !== null) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = !!this.suspendedCtx;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.suspendedCtx) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.suspendedCtx) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.current.activeSMask = null;\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    this.ctx.save();\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.current.activeSMask) {\n      this.endSMaskMode();\n    }\n\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      this.ctx.restore();\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, xw, yh);\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse,\n          PathType.STROKE\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (isNum(glyph)) {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (isNum(glyph)) {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      PathType.SHADING\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[0],\n        bbox[1]\n      );\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[2],\n        bbox[3]\n      );\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    const suspendedCtx = this.suspendedCtx;\n    if (this.current.activeSMask) {\n      this.suspendedCtx = null;\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push({\n      ctx: currentCtx,\n      suspendedCtx,\n    });\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const { ctx, suspendedCtx } = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (suspendedCtx) {\n      this.suspendedCtx = suspendedCtx;\n    }\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = this.ctx.mozCurrentTransform;\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform.apply(this.ctx, currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix) {\n    this.save();\n    resetCtxToDefault(this.ctx);\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n      this.ctx.rect(rect[0], rect[1], width, height);\n      this.clip();\n      this.endPath();\n    }\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        ctx.mozCurrentTransform\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform.apply(tmpCtx, this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  warn,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      throw new Error(\n        'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n      );\n    }\n    warn('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n    return reason;\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(\n            streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason))\n          );\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall && streamController.startCall.promise,\n      streamController.pullCall && streamController.pullCall.promise,\n      streamController.cancelCall && streamController.cancelCall.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n      if (borderColor) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      richText: data.richText,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.getElementById(id);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { id, exportValue } = domElement;\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      parameters.data.resetForm ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"LinkAnnotationElement.render - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(link, data.url, data.newWindow);\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      let hasClickAction = false;\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        hasClickAction = true;\n        this._bindJSAction(link, data);\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n      } else if (!hasClickAction) {\n        this._bindLink(link, \"\");\n      }\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    link.className = \"internalLink\";\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    link.className = \"internalLink\";\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      if (otherClickAction) {\n        otherClickAction();\n      }\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value, valueAsString: value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n        const domElement = document.getElementById(id);\n        if (!domElement || !GetElementsByNameSet.has(domElement)) {\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id,  this.data.fieldName, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue || \"\";\n        element.value = elementData.userValue = defaultValue;\n        delete elementData.formattedValue;\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, `${this.data.fieldName}/${this.data.exportValue}`, { // #718 modified by ngx-extended-pdf-viewer\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, this.data.fieldName, { value }); // #868 modified by ngx-extended-pdf-viewer\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id,\n          this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n          { value: curChecked });\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: checked\n      });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: event.target.checked\n            });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, this.data.fieldName, { value }, this.data.buttonValue);  // #718 modified by ngx-extended-pdf-viewer\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, this.data.fieldName, {\n          value: false,\n          emitMessage: false, // #718 modified by ngx-extended-pdf-viewer\n        });\n      }\n      storage.setValue(id, this.data.fieldName, {\n        value: checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(\n                radio.id,\n                fieldName, // #718 / #868 modified by ngx-extended-pdf-viewer\n                { value: curChecked }\n              );\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const fieldvalue = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = fieldvalue; // #718 modified by ngx-extended-pdf-viewer\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value(event) {\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.richText = parameters.richText;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    if (\n      this.richText?.str &&\n      (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)\n    ) {\n      XfaLayer.render({\n        xfa: this.richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.className = \"richText popupContent\";\n    } else {\n      const contents = this._formatContents(this.contentsObj);\n      popup.appendChild(contents);\n    }\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.className = \"popupContent\";\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (\n      !this.data.hasPopup &&\n      (this.data.titleObj?.str ||\n        this.data.contentsObj?.str ||\n        this.data.richText)\n    ) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    // #958 modified by ngx-extended-pdf-viewer\n    if (window.registerAcroformAnnotations) {\n      window.registerAcroformAnnotations(sortedAnnotations);\n    }\n    // #958 end of modification by ngx-extended-pdf-viewer\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          element.style.transform = transform;\n        }\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { warn } from \"../shared/util.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n        } else {\n          if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n            continue; // Handled below.\n          }\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"XfaLayer.setAttribute - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfa;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          const scale = textDivProperties.canvasWidth / width;\n          if (this._enhanceTextSelection) {\n            textDivProperties.scale = scale;\n          }\n          transform = `scaleX(${scale})`;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      if (typeof args === \"string\") {\n        args = this.objs.get(args);\n      }\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      // modified by ngx-extended-pdf-viewer #864\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\" || this.url.protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  getXfaPageViewport,\n  // From \"./shared/util.js\":\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}