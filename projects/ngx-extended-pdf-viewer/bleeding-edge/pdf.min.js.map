{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","window","filenameForDownload","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","getXfaPageViewport","xfaPage","scale","rotation","width","height","style","viewBox","parseInt","PageViewport","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","_base_factory","PixelsPerInch","CSS","PDF","PDF_TO_CSS_UNITS","shadow","DOMCanvasFactory","BaseCanvasFactory","constructor","ownerDocument","globalThis","super","_document","_createCanvas","canvas","createElement","async","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","fetch","ok","statusText","Uint8Array","stringToBytes","text","request","XMLHttpRequest","DONE","data","responseText","DOMCMapReaderFactory","BaseCMapReaderFactory","_fetchData","isCompressed","then","cMapData","compressionType","DOMStandardFontDataFactory","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","type","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","name","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","baseUrl","protocol","URL","pdfDateStringRegex","PDFDateString","toDateObject","input","isString","RegExp","matches","year","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","reason","createValidAbsoluteUrl","options","dots","tryConvertEncoding","stringToUTF8String","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","utf8StringToString","unescape","encodeURIComponent","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","cond","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","makeHexColor","r","g","b","m1","m2","p","m","d","getAxialAlignedBoundingBox","p1","p2","p3","p4","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","a","c","first","sx","sy","normalizeRect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","escape","create","context","reset","canvasAndContext","destroy","CMapCompressionType","catch","svg","_display_utils","_font_loader","_node_utils","_annotation_storage","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","baseHref","params","rangeTransport","worker","href","location","Buffer","isNaN","docBaseUrl","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","cMapUrl","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","standardFontDataUrl","idCounters","doc","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","fingerprints","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","getAnnotations","intent","intentArgs","getRenderingIntent","cacheKey","renderingIntent","set","annotations","annotation","_jsActionsPromise","getPageJSActions","getXfa","children","render","canvasContext","viewport","annotationMode","AnnotationMode","imageLayer","canvasFactory","background","optionalContentConfigPromise","arguments","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","intentPrint","RenderingIntentFlag","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","sendWithStream","combineTextItems","highWaterMark","textContent","getTextContent","xfa","XfaText","readableStream","reader","getReader","items","styles","pump","done","getStructTree","_structTreePromise","_destroy","pageCache","waitOn","values","force","completed","cancel","clear","resetStats","_startRenderPage","_renderPageChunk","operatorListChunk","streamReader","setTimeout","curCacheKey","curIntentState","delete","stats","LoopbackPort","_listeners","_deferred","postMessage","cloned","WeakMap","event","cloneValue","transfers","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","require","pdfjsFilePath","wrapper","_workerPorts","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","WorkerMessageHandler","workerHandler","fromPort","has","_setupFakeWorkerGlobal","loader","mainWorkerMessageHandler","eval","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","CMapReaderFactory","cMapPacked","StandardFontDataFactory","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","AnnotationStorage","isOpList","lastModified","page","hasOwnProperty","resetModified","terminated","_getFieldObjectsPromise","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","featureId","serializable","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","cssFontInfo","css","weight","fontWeight","italicAngle","FontFace","fontFamily","mimetype","getPathGenerator","character","cmds","jsBuf","current","args","__non_webpack_require__","fs","Canvas","process","nw","versions","electron","_storage","_timeStamp","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","modified","entry","_setModified","setFormValue","radioValue","getAll","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","canvasEntry","trackTransform","LRUCache","maxSize","_cache","_maxSize","next","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","setCurrentPoint","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","genericComposeSMask","subtype","backdrop","hasBackdrop","composeFn","chunkSize","row","chunkHeight","getImageSmoothingEnabled","interpolate","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","cachedCanvasPatterns","cachedPatterns","_cachedGetSinglePixelWidth","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","executionStartIdx","argsArrayLen","chunkOperations","continueCallback","endTime","steps","fnId","OPS","depObjId","objsPool","drawImage","endLayout","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","inverse","lineCap","lineJoin","miterLimit","limit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","deltaTransform","resumeSMaskGroup","ops","xw","yh","consumePath","getPattern","getSinglePixelWidth","needRestore","paths","pendingTextPaths","beginPath","path","spacing","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","showType3Text","glyphs","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","operatorListId","transformed","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","strokeStyle","matrix","getShadingPattern","inv","bl","br","ul","ur","x0","y0","x1","y1","bbox","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","imageSmoothingEnabled","COMPILE_TYPE3_GLYPHS","compileType3Glyph","POINT_TYPES","width1","j0","points","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","position","getCanvasPosition","appendImage","left","top","visible","tag","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","RadialAxialShadingPattern","MeshShadingPattern","DummyShadingPattern","applyBoundingBox","Path2D","region","BaseShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","colorStop","owner","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","boundsWidth","boundsHeight","combinedScale","paddedWidth","BORDER_SIZE","paddedHeight","backgroundColor","matrixScale","temporaryPatternCanvas","PaintType","MAX_PATTERN_SIZE","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","bboxWidth","bboxHeight","cssColor","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","streamController","_deleteStreamController","allSettled","parsedData","rawData","_metadataMap","_data","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","output","walk","node","child","shouldBuildText","_scripting_utils","DEFAULT_TAB_INDEX","GetElementsByNameSet","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","_fieldObjects","fieldObjects","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","titleObj","modificationDate","contentsObj","hideWrapper","_renderQuadrilaterals","quadrilateral","className","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","platform","isWin","isMac","isTooltipOnly","actions","Action","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","onclick","hasPopup","toLowerCase","JSON","alternativeText","title","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_setBackgroundColor","_dispatchEventFromSandbox","setColor","styleName","ColorConverters","commonActions","display","hidden","fieldName","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","hasAppearance","fieldValue","setPropertyOnSiblings","storage","keyInStorage","storedData","valueAsString","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","readOnly","blurListener","activeElement","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","checkbox","curChecked","buttonValue","radio","pdfButtonValue","fontSizeStyle","selectElement","combo","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","prototype","call","multipleSelection","selected","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dir","dateObject","stringify","toLocaleDateString","toLocaleTimeString","contents","_formatContents","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","rendered","renderedElement","update","elements","makeColorComp","CMYK_G","G_CMYK","G_RGB","G_HTML","G","RGB_G","RGB_HTML","T_HTML","CMYK_RGB","CMYK_HTML","components","RGB_CMYK","renderTextLayer","renderParameters","TextLayerRenderTask","textContentStream","textDivs","textContentItemsStr","enhanceTextSelection","timeout","DEFAULT_FONT_SIZE","ascentCache","AllWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","_enhanceTextSelection","canvasWidth","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","_textDivs","textDivsLength","findPositiveMin","ts","t","expand","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","jj","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","parent","classList","setAttribute","parentNode","_layoutText","measureText","fingerprintIsBlockedException","_render","styleCache","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","XfaLayer","setupStorage","html","xfaOn","xfaOff","setAttributes","attributes","dataId","rootHtml","stack","rootDiv","childHtml","xmlns","el","_network_utils","http","https","fileUriRegex","PDFNodeStream","parseUrl","sourceUrl","parsedUrl","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","stat","createReadStream","createResponseStatusError","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","err","quotindex","extvalue","encodingend","langvalue","charset","hex","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_requestId","onClosed","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg","_xfa_layer"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  isString,\n  removeNullCharacters,\n  shadow,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nconst PixelsPerInch = {\n  CSS: 96.0,\n  PDF: 72.0,\n\n  /** @type {number} */\n  get PDF_TO_CSS_UNITS() {\n    return shadow(this, \"PDF_TO_CSS_UNITS\", this.CSS / this.PDF);\n  },\n};\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    // modified by ngx-extended-pdf-viewer #864\n    return protocol === \"http:\" || protocol === \"https:\" || protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  addLinkAttributes,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\": // modified by ngx-extended-pdf-viewer #864\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const baseHref = src.baseHref;\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            // #929/#813 modified by ngx-extended-pdf-viewer\n            // to restore the drag'n'drop functionality\n            if (baseHref) {\n              params[key] = new URL(value, window.location.origin + baseHref).href;\n            } else {\n              params[key] = new URL(value, window.location).href;\n            }\n            // #929/#813 end of modification\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  // #376 modified by ngx-extended-pdf-viewer\n  let cMapUrl = source.cMapUrl;\n  if (cMapUrl.constructor.name === \"Function\") {\n    cMapUrl = cMapUrl();\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        promise = promise.then(annotations => {\n          for (const annotation of annotations) {\n            if (annotation.titleObj !== undefined) {\n              Object.defineProperty(annotation, \"title\", {\n                get() {\n                  deprecated(\n                    \"`title`-property on annotation, please use `titleObj` instead.\"\n                  );\n                  return annotation.titleObj.str;\n                },\n              });\n            }\n            if (annotation.contentsObj !== undefined) {\n              Object.defineProperty(annotation, \"contents\", {\n                get() {\n                  deprecated(\n                    \"`contents`-property on annotation, please use `contentsObj` instead.\"\n                  );\n                  return annotation.contentsObj.str;\n                },\n              });\n            }\n          }\n          return annotations;\n        });\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (\n        typeof value === \"function\" ||\n        typeof value === \"symbol\" ||\n        value instanceof URL\n      ) {\n        throw new Error(\n          `LoopbackPort.postMessage - cannot clone: ${value?.toString()}`\n        );\n      }\n\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      result = Array.isArray(value) ? [] : Object.create(null);\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (i === 'cMapUrl') {\n            result[i] = cloneValue(desc.value());\n          } else if (!value.hasOwnProperty?.(i)) {\n            continue;\n          }\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.postMessageTransfers = true;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            // supportTypedArray\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n            if (!data.supportTransfers) {\n              this.postMessageTransfers = false;\n            }\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      // modified by ngx-extended-pdf-viewer #376\n\t  let cMapUrl = params.cMapUrl;\n\t  if (cMapUrl.constructor.name === \"Function\") {\n\t    cMapUrl = cMapUrl();\n\t  }\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let lastModified = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        lastModified = this.annotationStorage.lastModified;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${lastModified}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      ref,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return (this._getFieldObjectsPromise ||=\n      this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  RenderTask,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._timeStamp = Date.now();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          this.setValue(key, undefined, obj); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    if (obj === undefined) {\n      return defaultValue;\n    }\n    return Object.assign(defaultValue, obj);\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._timeStamp = Date.now();\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get lastModified() {\n    return this._timeStamp.toString();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPattern, TilingPattern } from \"./pattern_helper.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// This value comes from sampling a few PDFs that re-use patterns, there doesn't\n// seem to be any that benefit from caching more than 2 patterns.\nconst MAX_CACHED_CANVAS_PATTERNS = 2;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\n/**\n * Least recently used cache implemented with a JS Map. JS Map keys are ordered\n * by last insertion.\n */\nclass LRUCache {\n  constructor(maxSize = 0) {\n    this._cache = new Map();\n    this._maxSize = maxSize;\n  }\n\n  has(key) {\n    return this._cache.has(key);\n  }\n\n  get(key) {\n    if (this._cache.has(key)) {\n      // Delete and set the value so it's moved to the end of the map iteration.\n      const value = this._cache.get(key);\n      this._cache.delete(key);\n      this._cache.set(key, value);\n    }\n    return this._cache.get(key);\n  }\n\n  set(key, value) {\n    if (this._maxSize <= 0) {\n      return;\n    }\n    if (this._cache.size + 1 > this._maxSize) {\n      // Delete the least recently used.\n      this._cache.delete(this._cache.keys().next().value);\n    }\n    this._cache.set(key, value);\n  }\n\n  clear() {\n    this._cache.clear();\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n    const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    maskCtx.putImageData(layerData, 0, row);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx) {\n  const mask = smask.canvas;\n  const maskCtx = smask.context;\n\n  ctx.setTransform(\n    smask.scaleX,\n    0,\n    0,\n    smask.scaleY,\n    smask.offsetX,\n    smask.offsetY\n  );\n\n  genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    mask.width,\n    mask.height,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap\n  );\n  ctx.drawImage(mask, 0, 0);\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedCanvasPatterns = new LRUCache(MAX_CACHED_CANVAS_PATTERNS);\n    this.cachedPatterns = new Map();\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.current.activeSMask !== null) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedCanvasPatterns.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, false)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          if (this.current.activeSMask) {\n            // If SMask is currrenly used, it needs to be suspended or\n            // finished. Suspend only makes sense when at least one save()\n            // was performed and state needs to be reverted on restore().\n            if (\n              this.stateStack.length > 0 &&\n              this.stateStack[this.stateStack.length - 1].activeSMask ===\n                this.current.activeSMask\n            ) {\n              this.suspendSMaskGroup();\n            } else {\n              this.endSMaskGroup();\n            }\n          }\n          this.current.activeSMask = value ? this.tempSMask : null;\n          if (this.current.activeSMask) {\n            this.beginSMaskGroup();\n          }\n          this.tempSMask = null;\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  beginSMaskGroup() {\n    const activeSMask = this.current.activeSMask;\n    const drawnWidth = activeSMask.canvas.width;\n    const drawnHeight = activeSMask.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n\n    const currentCtx = this.ctx;\n    const currentTransform = currentCtx.mozCurrentTransform;\n    this.ctx.save();\n\n    const groupCtx = scratchCanvas.context;\n    groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n    groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  suspendSMaskGroup() {\n    // Similar to endSMaskGroup, the intermediate canvas has to be composed\n    // and future ctx state restored.\n    const groupCtx = this.ctx;\n    this.groupLevel--;\n    this.ctx = this.groupStack.pop();\n\n    composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n    this.ctx.restore();\n    this.ctx.save(); // save is needed since SMask will be resumed.\n    copyCtxState(groupCtx, this.ctx);\n\n    // Saving state for resuming.\n    this.current.resumeSMaskCtx = groupCtx;\n    // Transform was changed in the SMask canvas, reflecting this change on\n    // this.ctx.\n    const deltaTransform = Util.transform(\n      this.current.activeSMask.startTransformInverse,\n      groupCtx.mozCurrentTransform\n    );\n    this.ctx.transform.apply(this.ctx, deltaTransform);\n\n    // SMask was composed, the results at the groupCtx can be cleared.\n    groupCtx.save();\n    groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n    groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n    groupCtx.restore();\n  }\n\n  resumeSMaskGroup() {\n    // Resuming state saved by suspendSMaskGroup. We don't need to restore\n    // any groupCtx state since restore() command (the only caller) will do\n    // that for us. See also beginSMaskGroup.\n    const groupCtx = this.current.resumeSMaskCtx;\n    const currentCtx = this.ctx;\n    this.ctx = groupCtx;\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endSMaskGroup() {\n    const groupCtx = this.ctx;\n    this.groupLevel--;\n    this.ctx = this.groupStack.pop();\n\n    composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n    this.ctx.restore();\n    copyCtxState(groupCtx, this.ctx);\n    // Transform was changed in the SMask canvas, reflecting this change on\n    // this.ctx.\n    const deltaTransform = Util.transform(\n      this.current.activeSMask.startTransformInverse,\n      groupCtx.mozCurrentTransform\n    );\n    this.ctx.transform.apply(this.ctx, deltaTransform);\n  }\n\n  save() {\n    this.ctx.save();\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n    this.current.resumeSMaskCtx = null;\n  }\n\n  restore() {\n    // SMask was suspended, we just need to resume it.\n    if (this.current.resumeSMaskCtx) {\n      this.resumeSMaskGroup();\n    }\n    // SMask has to be finished once there is no states that are using the\n    // same SMask.\n    if (\n      this.current.activeSMask !== null &&\n      (this.stateStack.length === 0 ||\n        this.stateStack[this.stateStack.length - 1].activeSMask !==\n          this.current.activeSMask)\n    ) {\n      this.endSMaskGroup();\n    }\n\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      this.ctx.restore();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    } else {\n      // We've finished all the SMask groups, reflect that in our state.\n      this.current.activeSMask = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          break;\n        case OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath();\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse\n      );\n      needRestore = true;\n    }\n\n    if (this.contentVisible) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath();\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    let patternTransform;\n    if (current.patternFill) {\n      // TODO: Patterns are not applied correctly to text if a non-embedded\n      // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (isNum(glyph)) {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (isNum(glyph)) {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(\n        this.objs.get(objId),\n        this.cachedCanvasPatterns\n      );\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      true\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n\n    // Resetting mask state, masks will be applied on restore of the group.\n    this.current.activeSMask = null;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    this.ctx = this.groupStack.pop();\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n    } else {\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n    }\n    this.restore();\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix) {\n    this.save();\n    resetCtxToDefault(this.ctx);\n    this.current = new CanvasExtraState();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n      this.ctx.rect(rect[0], rect[1], width, height);\n      this.clip();\n      this.endPath();\n    }\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            false\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath() {\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR, cachedCanvasPatterns) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n    this.cachedCanvasPatterns = cachedCanvasPatterns;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    let pattern;\n    if (!shadingFill) {\n      if (this.cachedCanvasPatterns.has(this)) {\n        pattern = this.cachedCanvasPatterns.get(this);\n      } else {\n        const tmpCanvas = owner.cachedCanvases.getCanvas(\n          \"pattern\",\n          owner.ctx.canvas.width,\n          owner.ctx.canvas.height,\n          true\n        );\n\n        const tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n        tmpCtx.beginPath();\n        tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n\n        tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\n        if (this.matrix) {\n          tmpCtx.transform.apply(tmpCtx, this.matrix);\n        }\n        applyBoundingBox(tmpCtx, this._bbox);\n\n        tmpCtx.fillStyle = this._createGradient(tmpCtx);\n        tmpCtx.fill();\n\n        pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\n        this.cachedCanvasPatterns.set(this, pattern);\n      }\n    } else {\n      // Don't bother caching gradients, they are quick to rebuild.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    if (!shadingFill) {\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (shadingFill) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      shadingFill ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (!shadingFill) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR, cachedCanvasPatterns) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR, cachedCanvasPatterns);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (!shadingFill) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  warn,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      throw new Error(\n        'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n      );\n    }\n    warn('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n    return reason;\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(\n            streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason))\n          );\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall && streamController.startCall.promise,\n      streamController.pullCall && streamController.pullCall.promise,\n      streamController.cancelCall && streamController.cancelCall.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n      if (borderColor) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.getElementById(id);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { id, exportValue } = domElement;\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id,  this.data.fieldName, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, this.data.fieldName, { value }); // #868 modified by ngx-extended-pdf-viewer\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id,\n          this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n          { value: curChecked });\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: checked\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: event.target.checked\n            });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, this.data.fieldName, { value }, this.data.buttonValue);  // #718 modified by ngx-extended-pdf-viewer\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, { value: false });\n      }\n      storage.setValue(id, this.data.fieldName, { value: checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(\n                radio.id,\n                fieldName, // #718 / #868 modified by ngx-extended-pdf-viewer\n                { value: curChecked }\n              );\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = value; // #718 modified by ngx-extended-pdf-viewer\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value(event) {\n            const options = selectElement.options;\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.titleObj?.str || parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contentsObj);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (\n      !this.data.hasPopup &&\n      (this.data.titleObj?.str || this.data.contentsObj?.str)\n    ) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          element.style.transform = transform;\n        }\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          const scale = textDivProperties.canvasWidth / width;\n          if (this._enhanceTextSelection) {\n            textDivProperties.scale = scale;\n          }\n          transform = `scaleX(${scale})`;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { XfaText } from \"./xfa_text.js\";\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes(html, element, storage, intent) {\n    const { attributes } = element;\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          html.setAttribute(key, value.join(\" \"));\n        } else {\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const root = parameters.xfa;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes(rootHtml, root);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    rootDiv.style.transform = transform;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes(childHtml, child, storage, intent);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      // modified by ngx-extended-pdf-viewer #864\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\" || this.url.protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  getXfaPageViewport,\n  // From \"./shared/util.js\":\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}