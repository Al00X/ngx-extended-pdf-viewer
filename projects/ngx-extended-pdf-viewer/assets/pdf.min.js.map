{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","window","filenameForDownload","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","SVG_NS","BaseCanvasFactory","constructor","unreachable","create","reset","canvasAndContext","canvas","width","height","destroy","DOMCanvasFactory","ownerDocument","globalThis","super","_document","createElement","context","BaseCMapReaderFactory","baseUrl","isCompressed","[object Object]","name","compressionType","CMapCompressionType","BINARY","_fetchData","catch","reason","DOMCMapReaderFactory","isFetchSupported","isValidFetchUrl","baseURI","fetch","then","async","response","ok","statusText","cMapData","Uint8Array","arrayBuffer","stringToBytes","text","request","XMLHttpRequest","DONE","responseText","DOMSVGFactory","svg","type","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","Response","prototype","ReadableStream","protocol","URL","pdfDateStringRegex","PDFDateString","input","isString","RegExp","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","data","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","createValidAbsoluteUrl","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","stringToUTF8String","escape","utf8StringToString","unescape","encodeURIComponent","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","errorMarkedContent","NEED_PASSWORD","INCORRECT_PASSWORD","cond","shadow","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","r","g","b","m1","m2","p","m","d","p1","p2","p3","p4","transpose","a","c","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","_display_utils","_font_loader","_node_utils","_annotation_storage","_api_compatibility","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_webgl","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","params","rangeTransport","worker","location","href","Buffer","isNaN","docBaseUrl","maxImageSize","disableFontFace","apiCompatibilityParams","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","PDFDocumentLoadingTaskClosure","nextDocumentId","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","annotationStorage","AnnotationStorage","numPages","fingerprint","isPureXfa","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","rotate","userUnit","view","getViewport","getAnnotations","intent","_annotationsPromise","_annotationsIntent","_jsActionsPromise","getPageJSActions","getXfa","_xfaPromise","getPageXfa","render","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","optionalContentConfigPromise","_intentState","renderingIntent","intentState","set","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","webGLContext","WebGLContext","enable","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","_intentState2","streamTextContent","normalizeWhitespace","disableCombineTextItems","sendWithStream","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","getReader","items","styles","pump","done","_destroy","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","curIntentState","delete","stats","LoopbackPort","_listeners","_deferred","postMessage","cloned","WeakMap","event","cloneValue","transfers","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","pdfjsFilePath","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","workerHandler","fontLoader","FontLoader","_onUnsupportedFeature","bind","_params","cMapUrl","CMapReaderFactory","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","loadingTaskSettled","settled","forEach","page","terminated","annotationStorageResetModified","pdfDocument","resetModified","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","exception","updatePassword","exportedData","has","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","FontFace","mimetype","getPathGenerator","character","cmds","current","js","cmd","__non_webpack_require__","Canvas","fs","process","nw","versions","electron","_storage","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","getOrCreateValue","modified","entry","_setModified","setFormValue","radioValue","getAll","serializable","compatibilityParams","checkFontFace","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","CachedCanvasesClosure","cache","getCanvas","CachedCanvases_getCanvas","trackTransform","canvasEntry","CanvasExtraState","CanvasExtraStateClosure","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","CanvasExtraState_clone","setCurrentPoint","CanvasExtraState_setCurrentPoint","CanvasGraphicsClosure","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","backdrop","isEnabled","genericComposeSMask","subtype","hasBackdrop","composeFn","chunkSize","row","chunkHeight","composed","layer","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","CanvasGraphics_executeOperatorList","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","steps","fnId","OPS","depObjId","objsPool","CanvasGraphics_endDrawing","drawImage","endLayout","CanvasGraphics_setLineWidth","CanvasGraphics_setLineCap","style","lineCap","CanvasGraphics_setLineJoin","lineJoin","CanvasGraphics_setMiterLimit","limit","miterLimit","CanvasGraphics_setDash","dashArray","dashPhase","CanvasGraphics_setGState","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","CanvasGraphics_beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","mozCurrentTransformInverse","CanvasGraphics_endSMaskGroup","deltaTransform","resumeSMaskGroup","CanvasGraphics_resumeSMaskGroup","CanvasGraphics_save","CanvasGraphics_restore","CanvasGraphics_transform","CanvasGraphics_constructPath","ops","xw","yh","CanvasGraphics_closePath","CanvasGraphics_stroke","consumePath","getPattern","getSinglePixelWidth","scaledLineWidth","CanvasGraphics_closeStroke","CanvasGraphics_fill","needRestore","CanvasGraphics_eoFill","CanvasGraphics_fillStroke","CanvasGraphics_eoFillStroke","CanvasGraphics_closeFillStroke","CanvasGraphics_closeEOFillStroke","CanvasGraphics_endPath","CanvasGraphics_clip","CanvasGraphics_eoClip","CanvasGraphics_beginText","CanvasGraphics_endText","paths","pendingTextPaths","beginPath","path","CanvasGraphics_setCharSpacing","spacing","CanvasGraphics_setWordSpacing","CanvasGraphics_setHScale","CanvasGraphics_setLeading","CanvasGraphics_setFont","fontRefName","fontObj","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","CanvasGraphics_setTextRenderingMode","mode","CanvasGraphics_setTextRise","rise","CanvasGraphics_moveText","CanvasGraphics_setLeadingMoveText","CanvasGraphics_setTextMatrix","CanvasGraphics_nextLine","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","CanvasGraphics_showText","glyphs","showType3Text","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measurement","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","CanvasGraphics_showType3Text","spacingLength","operatorListId","transformed","CanvasGraphics_setCharWidth","xWidth","yWidth","CanvasGraphics_setCharWidthAndBounds","llx","lly","urx","ury","getColorN_Pattern","CanvasGraphics_getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","CanvasGraphics_setStrokeColorN","arguments","CanvasGraphics_setFillColorN","CanvasGraphics_setStrokeRGBColor","strokeStyle","CanvasGraphics_setFillRGBColor","CanvasGraphics_shadingFill","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","CanvasGraphics_beginInlineImage","CanvasGraphics_beginImageData","CanvasGraphics_paintFormXObjectBegin","matrix","bbox","CanvasGraphics_paintFormXObjectEnd","CanvasGraphics_beginGroup","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","CanvasGraphics_endGroup","imageSmoothingEnabled","mozImageSmoothingEnabled","CanvasGraphics_beginAnnotations","CanvasGraphics_endAnnotations","CanvasGraphics_beginAnnotation","CanvasGraphics_endAnnotation","CanvasGraphics_paintImageMaskXObject","img","isPatternFill","COMPILE_TYPE3_GLYPHS","compileType3Glyph","width1","j0","points","POINT_TYPES","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","maskCanvas","skewX","skewY","positions","CanvasGraphics_paintImageMaskXObjectGroup","images","image","CanvasGraphics_paintImageXObject","CanvasGraphics_paintImageXObjectRepeat","w","h","CanvasGraphics_paintInlineImageXObject","imgToPaint","tmpCanvas","tmpCtx","widthScale","heightScale","HTMLElement","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","getCanvasPosition","appendImage","left","top","CanvasGraphics_paintInlineImageXObjectGroup","CanvasGraphics_paintSolidColorImageMask","CanvasGraphics_markPoint","tag","CanvasGraphics_markPointProps","CanvasGraphics_beginMarkedContent","visible","CanvasGraphics_beginMarkedContentProps","isVisible","isContentVisible","CanvasGraphics_endMarkedContent","CanvasGraphics_beginCompat","CanvasGraphics_endCompat","CanvasGraphics_consumePath","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","CanvasGraphics_getCanvasPosition","CanvasGraphics_isContentVisible","op","raw","shadingIR","ShadingIRs","applyBoundingBox","Path2D","region","fromIR","RadialAxial_fromIR","colorStops","r1","RadialAxial_getPattern","grad","createMeshCanvas","createMeshCanvasClosure","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","boundsWidth","boundsHeight","paddedWidth","BORDER_SIZE","paddedHeight","drawFigures","Mesh_fromIR","Mesh_getPattern","owner","matrixScale","temporaryPatternCanvas","Dummy_fromIR","Dummy_fromIR_getPattern","TilingPatternClosure","PaintType","xstep","ystep","paintType","tilingType","createPatternCanvas","TilinPattern_createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","TilingPattern_getSizeAndScale","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","TilingPattern_getPattern","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","parsedData","rawData","_metadataMap","_data","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","_enabled","WebGLUtils","tryInitGL","WebGLUtilsClosure","loadShader","gl","shaderType","shader","COMPILE_STATUS","errorMsg","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","LINK_STATUS","createTexture","textureId","texture","CLAMP_TO_EDGE","NEAREST","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskCache","figuresCache","initSmaskGL","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","Float32Array","STATIC_DRAW","drawingBufferHeight","TEXTURE0","maskTexture","TEXTURE1","positionLocation","BLEND","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","flush","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","jj","coordsBuffer","colorsBuffer","colorLocation","_scripting_utils","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","svgFactory","enableScripting","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","normalizeRect","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","_renderQuadrilaterals","quadrilateral","className","isTooltipOnly","actions","Action","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","hasPopup","toLowerCase","JSON","alternativeText","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","element","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_setColor","ColorConverters","hasAppearance","fieldValue","storage","storedData","fieldName","valueAsString","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","blurListener","activeElement","focus","preventScroll","userName","hidden","editable","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","readOnly","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","exportValue","checkbox","radio","emitMessage","buttonValue","pdfButtonValue","radioId","selectElement","combo","options","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","call","multipleSelection","selected","indices","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dateObject","stringify","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","rendered","renderedElement","elements","makeColorComp","G","components","RGB_HTML","CMYK_RGB","renderTextLayer","renderTextLayerClosure","DEFAULT_FONT_SIZE","ascentCache","NonWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","isWhitespace","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","isAllWhitespace","tx","fontName","fontHeight","fontAscent","getAscent","fontFamily","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","dir","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","getAxialAlignedBoundingBox","right","bottom","_canceled","textDivs","_textDivs","textDivsLength","findPositiveMin","ts","t","expand","_bounds","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","TextLayer_cancel","_processItems","len","_layoutText","measureText","fingerprintIsBlockedException","_render","TextLayer_render","timeout","styleCache","textItems","textStyles","expandTextDivs","TextLayer_expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","renderParameters","SVGGraphics","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opList","fn","opListToTree","opTree","opListElement","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","XfaLayer","html","attrs","xfa","rootHtml","attributes","stack","rootDiv","coeffs","parent","child","childHtml","_network_utils","NetworkManager","isHttp","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_rangeChunkSize","_rangeRequestReaders","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","createResponseStatusError","_requestId","onClosed","_close","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","from","ch","err","quotindex","extvalue","encodingend","langvalue","charset","hex","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","_headersCapability","AbortController","_abortController","_headers","_readCapability","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg","_xfa_layer"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        let cMapData;\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = stringToBytes(await response.text());\n        }\n        return { cMapData, compressionType };\n      });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  addLinkAttributes,\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isDataScheme,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(String.fromCharCode((char >> 8) & 0xff));\n    buf.push(String.fromCharCode(char & 0xff));\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { NodeCanvasFactory, NodeCMapReaderFactory } from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return this._pdfInfo.isPureXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise<{num: number, gen: number}>} A promise that is resolved\n   *   with the page index (starting from zero) that is associated with the\n   *   reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any>>} A promise that is resolved with all\n   *   information of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @param {AnnotationStorage} annotationStorage - Storage for annotation\n   *   data in forms.\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument(annotationStorage) {\n    return this._transport.saveDocument(annotationStorage);\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem>} items - Array of {@link TextItem} objects.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {AnnotationStorage} [annotationStorage] - Storage for annotation\n *   data in forms.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this._annotationsPromise || this._annotationsIntent !== intent) {\n      this._annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this._annotationsIntent = intent;\n    }\n    return this._annotationsPromise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  getXfa() {\n    return (this._xfaPromise ||= this._transport.getPageXfa(this._pageIndex));\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    annotationStorage = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage: annotationStorage?.serializable || null,\n      });\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._xfaPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._xfaPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new AbortException(reason?.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty?.(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript?.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker?.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n    });\n    this._params = params;\n    // modified by ngx-extended-pdf-viewer #376\n    let cMapUrl = params.cMapUrl;\n    if (cMapUrl.constructor.name === \"Function\") {\n      cMapUrl = cMapUrl();\n    }\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n    // end of modification\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get loadingTaskSettled() {\n    return this.loadingTask._capability.settled;\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.loadingTaskSettled) {\n      const annotationStorageResetModified = this.loadingTask.promise\n        .then(pdfDocument => {\n          // Avoid initializing the `annotationStorage` if it doesn't exist.\n          if (pdfDocument.hasOwnProperty(\"annotationStorage\")) {\n            pdfDocument.annotationStorage.resetModified();\n          }\n        })\n        .catch(() => {});\n      waitOn.push(annotationStorageResetModified);\n    }\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument(annotationStorage) {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: annotationStorage?.serializable || null,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getPageXfa(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageXfa\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._cancelBound = this.cancel.bind(this);\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager?.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(nativeFontFace => {\n      this._document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    return shadow(this, \"isFontLoadingAPISupported\", !!this._document?.fonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { BaseCanvasFactory, BaseCMapReaderFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return new Promise((resolve, reject) => {\n        const fs = __non_webpack_require__(\"fs\");\n        fs.readFile(url, (error, data) => {\n          if (error || !data) {\n            reject(new Error(error));\n            return;\n          }\n          resolve({ cMapData: new Uint8Array(data), compressionType });\n        });\n      });\n    }\n  };\n}\n\nexport { NodeCanvasFactory, NodeCMapReaderFactory };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deprecated } from \"./display_utils.js\";\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable efffects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          this.setValue(key, undefined, obj); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    return obj !== undefined ? obj : defaultValue;\n  }\n\n  /**\n   * @deprecated\n   */\n  getOrCreateValue(key, defaultValue) {\n    deprecated(\"Use getValue instead.\");\n    if (this._storage.has(key)) {\n      return this._storage.get(key);\n    }\n\n    this._storage.set(key, defaultValue);\n    return defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      this._storage.set(key, value);\n      modified = true;\n    }\n    if (modified) {\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n    ctx._originalResetTransform = ctx.resetTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    try {\n      // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n      // \"TypeError: Method lineWidth called on incompatible receiver\n      //  #<CanvasRenderingContext2D>\".\n      const desc = Object.getOwnPropertyDescriptor(\n        Object.getPrototypeOf(ctx),\n        \"lineWidth\"\n      );\n\n      ctx._setLineWidth = desc.set;\n      ctx._getLineWidth = desc.get;\n\n      Object.defineProperty(ctx, \"lineWidth\", {\n        set: function setLineWidth(width) {\n          this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n        },\n        get: function getLineWidth() {\n          return this._getLineWidth();\n        },\n      });\n    } catch (_) {}\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        const m = this._transformMatrix;\n        const a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        const ad_bc = a * d - b * c;\n        const bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      const old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      const prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      const m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      const m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.resetTransform = function ctxResetTransform() {\n      this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n      ctx._originalResetTransform();\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      const cosValue = Math.cos(angle);\n      const sinValue = Math.sin(angle);\n\n      const m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nconst CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      let canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (const id in this.cache) {\n        const canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  const POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nconst CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\n/**\n * @type {any}\n */\nconst CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  const EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  const EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0,\n      destPos;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n    let i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      const srcLength = src.byteLength;\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      const dest32DataLength = dest32.length;\n      const fullSrcDiff = (width + 7) >> 3;\n      let white = 0xffffffff;\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          const srcDiff = srcLength - srcPos;\n          let k = 0;\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          const kEndUnrolled = kEnd & ~7;\n          let mask = 0;\n          let srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n\n    for (let i = 0; i < totalChunks; i++) {\n      const thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      let destPos = 3; // alpha component offset\n      for (let j = 0; j < thisChunkHeight; j++) {\n        let elem,\n          mask = 0;\n        for (let k = 0; k < width; k++) {\n          if (!mask) {\n            elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    const properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (let i = 0, ii = properties.length; i < ii; i++) {\n      const property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    const length = bytes.length;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        const alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    const scale = 1 / 255;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    for (let i = 3; i < length; i += 4) {\n      const y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    const hasBackdrop = !!backdrop;\n    const r0 = hasBackdrop ? backdrop[0] : 0;\n    const g0 = hasBackdrop ? backdrop[1] : 0;\n    const b0 = hasBackdrop ? backdrop[2] : 0;\n\n    let composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    const PIXELS_TO_PROCESS = 1048576;\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (let row = 0; row < height; row += chunkSize) {\n      const chunkHeight = Math.min(chunkSize, height - row);\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    const mask = smask.canvas;\n    const maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    const backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  const NORMAL_CLIP = {};\n  const EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      const width = this.ctx.canvas.width;\n      const height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        const transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n      this._combinedScaleFactor = Math.hypot(\n        this.baseTransform[0],\n        this.baseTransform[2]\n      );\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      let i = executionStartIdx || 0;\n      const argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      const chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      let steps = 0;\n\n      const commonObjs = this.commonObjs;\n      const objs = this.objs;\n      let fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      const ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (let i = 0, ii = states.length; i < ii; i++) {\n        const state = states[i];\n        const key = state[0];\n        const value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      const activeSMask = this.current.activeSMask;\n      const drawnWidth = activeSMask.canvas.width;\n      const drawnHeight = activeSMask.canvas.height;\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      const currentCtx = this.ctx;\n      const currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      const groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      const groupCtx = this.current.resumeSMaskCtx;\n      const currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      const old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      const ctx = this.ctx;\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n\n            const xw = x + width;\n            const yh = y + height;\n            ctx.moveTo(x, y);\n            if (width === 0 || height === 0) {\n              ctx.lineTo(xw, yh);\n            } else {\n              ctx.lineTo(xw, y);\n              ctx.lineTo(xw, yh);\n              ctx.lineTo(x, yh);\n            }\n\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n          // for patterns, we transform to pattern space, calculate\n          // the pattern, call stroke, and restore to user space\n          ctx.save();\n          // The current transform will be replaced while building the pattern,\n          // but the line width needs to be adjusted by the current transform,\n          // so we must scale it. To properly fix this we should be using a\n          // pattern transform instead (see #10955).\n          const transform = ctx.mozCurrentTransform;\n          const scale = Util.singularValueDecompose2dScale(transform)[0];\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          const lineWidth = this.getSinglePixelWidth();\n          const scaledLineWidth = this.current.lineWidth * scale;\n          if (lineWidth < 0 && -lineWidth >= scaledLineWidth) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          } else {\n            ctx.lineWidth = Math.max(lineWidth, scaledLineWidth);\n          }\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          const lineWidth = this.getSinglePixelWidth();\n          if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n            // The current transform will transform a square pixel into a\n            // parallelogram where both heights are lower than 1 and not equal.\n            ctx.save();\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            // Prevent drawing too thin lines by enforcing a minimum line width.\n            ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n            ctx.stroke();\n          }\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      let needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      const paths = this.pendingTextPaths;\n      const ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      const fontObj = this.commonObjs.get(fontRefName);\n      const current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      const name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.hypot(a, b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const textRenderingMode = current.textRenderingMode;\n      const fontSize = current.fontSize / current.fontSizeScale;\n      const fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      const isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      let addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          }\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.save();\n            ctx.moveTo(x, y);\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.strokeText(character, 0, 0);\n            ctx.restore();\n          } else {\n            ctx.strokeText(character, x, y);\n          }\n        }\n      }\n\n      if (isAddToPathSet) {\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      const data = ctx.getImageData(0, 0, 10, 10).data;\n      let enabled = false;\n      for (let i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      const ctx = this.ctx;\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const glyphsLength = glyphs.length;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      const simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      let lineWidth = current.lineWidth;\n      let resetLineWidthToOne = false;\n      const scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        const fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth();\n          resetLineWidthToOne = lineWidth < 0;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      let x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        const glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        let restoreNeeded = false;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        const accent = glyph.accent;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          const vx =\n            -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n\n          // #707 modified by ngx-extended-pdf-viewer\n          const measurement = ctx.measureText(character);\n          if (measurement) {\n            const measuredWidth = ((measurement.width * 1000) / fontSize) * fontSizeScale;\n            if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n              const characterScaleX = width / measuredWidth;\n              restoreNeeded = true;\n              ctx.save();\n              ctx.scale(characterScaleX, 1);\n              scaledX /= characterScaleX;\n            } else if (width !== measuredWidth) {\n              scaledX += (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n            }\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(\n              character,\n              scaledX,\n              scaledY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n            if (accent) {\n              const scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              const scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform,\n                resetLineWidthToOne\n              );\n            }\n          }\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      const fontDirection = current.fontDirection;\n      const spacingDir = font.vertical ? 1 : -1;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const textHScale = current.textHScale * fontDirection;\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      const glyphsLength = glyphs.length;\n      const isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      let i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      let pattern;\n      if (IR[0] === \"TilingPattern\") {\n        const color = IR[1];\n        const baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        const canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      this.save();\n      const pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      const inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        const canvas = ctx.canvas;\n        const width = canvas.width;\n        const height = canvas.height;\n\n        const bl = Util.applyTransform([0, 0], inv);\n        const br = Util.applyTransform([0, height], inv);\n        const ul = Util.applyTransform([width, 0], inv);\n        const ur = Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      const currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      const currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      let bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      const canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      let scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      let cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      const groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        const width = rect[2] - rect[0];\n        const height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph?.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      const ctx = this.ctx;\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      for (let i = 0, ii = images.length; i < ii; i++) {\n        const image = images[i];\n        const width = image.width,\n          height = image.height;\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      const width = imgData.width;\n      const height = imgData.height;\n      const map = [];\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      const currentTransform = ctx.mozCurrentTransformInverse;\n      let widthScale = Math.max(\n        Math.hypot(currentTransform[0], currentTransform[1]),\n        1\n      );\n      let heightScale = Math.max(\n        Math.hypot(currentTransform[2], currentTransform[3]),\n        1\n      );\n\n      let imgToPaint, tmpCanvas, tmpCtx;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      let paintWidth = width,\n        paintHeight = height;\n      let tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        let newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (let i = 0, ii = map.length; i < ii; i++) {\n        const entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      const ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth() {\n      if (this._cachedGetSinglePixelWidth === null) {\n        // If transform is [a b] then a pixel (square) is transformed\n        //                 [c d]\n        // into a parallelogram: its area is the abs value of the determinant.\n        // This parallelogram has 2 heights:\n        //  - Area / |col_1|;\n        //  - Area / |col_2|.\n        // so in order to get a height of at least 1, pixel height\n        // must be computed as followed:\n        //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n        // This is equivalent to:\n        //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n        const m = this.ctx.mozCurrentTransform;\n\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n        const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n        const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n        if (\n          sqNorm1 !== sqNorm2 &&\n          this._combinedScaleFactor * pixelHeight > 1\n        ) {\n          // The parallelogram isn't a square and at least one height\n          // is lower than 1 so the resulting line width must be 1\n          // but it cannot be achieved with one scale: when scaling a pixel\n          // we'll get a rectangle (see issue #12295).\n          // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n          // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n          // then we'll get a rectangle 1x1e5 which is wrong.\n          // In this case, we must reset the transform, set linewidth to 1\n          // and then stroke.\n          this._cachedGetSinglePixelWidth = -(\n            this._combinedScaleFactor * pixelHeight\n          );\n        } else if (absDet > Number.EPSILON) {\n          this._cachedGetSinglePixelWidth = pixelHeight;\n        } else {\n          // Matrix is non-invertible.\n          this._cachedGetSinglePixelWidth = 1;\n        }\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      const transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n\n    isContentVisible: function CanvasGraphics_isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n\n  for (const op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nconst ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    const type = raw[1];\n    const bbox = raw[2];\n    const colorStops = raw[3];\n    const p0 = raw[4];\n    const p1 = raw[5];\n    const r0 = raw[6];\n    const r1 = raw[7];\n    return {\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        let grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (let i = 0, ii = colorStops.length; i < ii; ++i) {\n          const c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nconst createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    const coords = context.coords,\n      colors = context.colors;\n    const bytes = data.data,\n      rowSize = data.width * 4;\n    let tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    const c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    const c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    const c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    const minY = Math.round(y1),\n      maxY = Math.round(y3);\n    let xa, car, cag, cab;\n    let xb, cbr, cbg, cbb;\n    for (let y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      const x1_ = Math.round(Math.min(xa, xb));\n      const x2_ = Math.round(Math.max(xa, xb));\n      let j = rowSize * y + x1_ * 4;\n      for (let x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    const ps = figure.coords;\n    const cs = figure.colors;\n    let i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        const verticesPerRow = figure.verticesPerRow;\n        const rows = Math.floor(ps.length / verticesPerRow) - 1;\n        const cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          let q = i * verticesPerRow;\n          for (let j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    const boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    let canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      const tmpCtx = tmpCanvas.context;\n\n      const data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        const bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    const coords = raw[2];\n    const colors = raw[3];\n    const figures = raw[4];\n    const bounds = raw[5];\n    const matrix = raw[6];\n    const bbox = raw[7];\n    const background = raw[8];\n    return {\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        let scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            const matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        const temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  const shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\n/**\n * @type {any}\n */\nconst TilingPattern = (function TilingPatternClosure() {\n  const PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      const operatorList = this.operatorList;\n      const bbox = this.bbox;\n      const xstep = this.xstep;\n      const ystep = this.ystep;\n      const paintType = this.paintType;\n      const tilingType = this.tilingType;\n      const color = this.color;\n      const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      const x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      const curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      const combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      const dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      const dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      const tmpCtx = tmpCanvas.context;\n      const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      const maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      let size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        const bboxWidth = x1 - x0;\n        const bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          const ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        ).catch((reason) => {\n          console.log(\"Caught an error of the worker thread: \" + reason);\n        });\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available. Until\n      // we implement this, just fallback to using the group policy for now.\n      if (group.expression) {\n        warn(\"Visibility expression not supported yet.\");\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nconst WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    const shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      const errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    const program = gl.createProgram();\n    for (let i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      const errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  let currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  const smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  const smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  let smaskCache = null;\n\n  function initSmaskGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    const texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    const texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    const texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    const texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    const width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    const cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    const texture = createTexture(gl, layer, gl.TEXTURE0);\n    const maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  const figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  const figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  let figuresCache = null;\n\n  function initFiguresGL() {\n    generateGL();\n    const canvas = currentCanvas;\n    currentCanvas = null;\n    const gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    const vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    const fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    const program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    const cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    const cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    let count = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          const rows =\n            (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    const coords = new Float32Array(count * 2);\n    const colors = new Uint8Array(count * 3);\n    const coordsMap = context.coords,\n      colorsMap = context.colors;\n    let pIndex = 0,\n      cIndex = 0;\n    for (let i = 0, ii = figures.length; i < ii; i++) {\n      const figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          const cols = figure.verticesPerRow;\n          const rows = (ps.length / cols) | 0;\n          for (let row = 1; row < rows; row++) {\n            let offset = row * cols + 1;\n            for (let col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (let j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    const coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    const colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache?.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache?.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    this.quadrilaterals.forEach(quadrilateral => {\n      quadrilateral.className = className;\n    });\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    return (\n      (navigator.platform.includes(\"Win\") && event.ctrlKey) ||\n      (navigator.platform.includes(\"Mac\") && event.metaKey)\n    );\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setColor(event) {\n    const { detail, target } = event;\n    const { style } = target;\n    for (const name of [\n      \"bgColor\",\n      \"fillColor\",\n      \"fgColor\",\n      \"textColor\",\n      \"borderColor\",\n      \"strokeColor\",\n    ]) {\n      let color = detail[name];\n      if (!color) {\n        continue;\n      }\n      color = ColorConverters[`${color[0]}_HTML`](color.slice(1));\n      switch (name) {\n        case \"bgColor\":\n        case \"fillColor\":\n          style.backgroundColor = color;\n          break;\n        case \"fgColor\":\n        case \"textColor\":\n          style.color = color;\n          break;\n        case \"borderColor\":\n        case \"strokeColor\":\n          style.borderColor = color;\n          break;\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        event.target.setSelectionRange(0, 0);\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", event => {\n          const { detail } = event;\n          const actions = {\n            value() {\n              elementData.userValue = detail.value || \"\";\n              storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString() {\n              elementData.formattedValue = detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            focus() {\n              setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n            },\n            userName() {\n              // tooltip\n              event.target.title = detail.userName;\n            },\n            hidden() {\n              event.target.style.visibility = detail.hidden\n                ? \"hidden\"\n                : \"visible\";\n              storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                hidden: detail.hidden,\n              });\n            },\n            editable() {\n              event.target.disabled = !detail.editable;\n            },\n            selRange() {\n              const [selStart, selEnd] = detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          Object.keys(detail)\n            .filter(name => name in actions)\n            .forEach(name => actions[name]());\n          this._setColor(event);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value:\n        data.fieldValue &&\n        ((data.exportValue && data.exportValue === data.fieldValue) ||\n          (!data.exportValue && data.fieldValue !== \"Off\")),\n    }).value;\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: event.target.checked,\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            event.target.checked = detail.value !== \"Off\";\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: event.target.checked,\n            });\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              hidden: detail.hidden,\n            });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n        this._setColor(event);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          if (window.setFormValue) { // #718 modified by ngx-extended-pdf-viewer\n            window.setFormValue(radio.getAttribute(\"id\"), false); // #718 modified by ngx-extended-pdf-viewer\n          } // #718 modified by ngx-extended-pdf-viewer\n          storage.setValue(radio.getAttribute(\"id\"), this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n            value: false,\n            emitMessage: false, // #718 modified by ngx-extended-pdf-viewer\n          });\n        }\n      }\n      storage.setValue(id, this.data.fieldName, {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: target.checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            const checked = pdfButtonValue === detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              radio.checked = radioId === id && checked;\n              storage.setValue(radioId, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n                value: radio.checked,\n              });\n            }\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              hidden: detail.hidden,\n            });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n        this._setColor(event);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = value; // #718 modified by ngx-extended-pdf-viewer\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", event => {\n        const { detail } = event;\n        const actions = {\n          value() {\n            const options = selectElement.options;\n            const value = detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection() {\n            selectElement.multiple = true;\n          },\n          remove() {\n            const options = selectElement.options;\n            const index = detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear() {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert() {\n            const { index, displayValue, exportValue } = detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items() {\n            const { items } = detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices() {\n            const indices = new Set(detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          focus() {\n            setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n          },\n          hidden() {\n            event.target.style.visibility = detail.hidden\n              ? \"hidden\"\n              : \"visible\";\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              hidden: detail.hidden,\n            });\n          },\n          editable() {\n            event.target.disabled = !detail.editable;\n          },\n        };\n        Object.keys(detail)\n          .filter(name => name in actions)\n          .forEach(name => actions[name]());\n        this._setColor(event);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.forEach(element => {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    });\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        elements.forEach(element => {\n          element.style.transform = transform;\n        });\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\n/**\n * @typedef {Object} TextLayerRenderTask\n * @property {Promise<void>} promise\n * @property {() => void} cancel\n * @property {(expandDivs: boolean) => void} expandTextDivs\n */\n\n/**\n * @type {(renderParameters: TextLayerRenderParameters) => TextLayerRenderTask}\n */\nconst renderTextLayer = (function renderTextLayerClosure() {\n  const MAX_TEXT_DIVS_TO_RENDER = 100000;\n  const DEFAULT_FONT_SIZE = 30;\n  const DEFAULT_FONT_ASCENT = 0.8;\n  const ascentCache = new Map();\n\n  const NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function getAscent(fontFamily, ctx) {\n    const cachedAscent = ascentCache.get(fontFamily);\n    if (cachedAscent) {\n      return cachedAscent;\n    }\n\n    ctx.save();\n    ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n    const metrics = ctx.measureText(\"\");\n\n    // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n    if (ascent) {\n      ctx.restore();\n      const ratio = ascent / (ascent + descent);\n      ascentCache.set(fontFamily, ratio);\n      return ratio;\n    }\n\n    // Try basic heuristic to guess ascent/descent.\n    // Draw a g with baseline at 0,0 and then get the line\n    // number where a pixel has non-null red component (starting\n    // from bottom).\n    ctx.strokeStyle = \"red\";\n    ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n    ctx.strokeText(\"g\", 0, 0);\n    let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE)\n      .data;\n    descent = 0;\n    for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n      if (pixels[i] > 0) {\n        descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n        break;\n      }\n    }\n\n    // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n    // number where a pixel has non-null red component (starting\n    // from top).\n    ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n    ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n    pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n    ascent = 0;\n    for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n      if (pixels[i] > 0) {\n        ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n        break;\n      }\n    }\n\n    ctx.restore();\n\n    if (ascent) {\n      const ratio = ascent / (ascent + descent);\n      ascentCache.set(fontFamily, ratio);\n      return ratio;\n    }\n\n    ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n    return DEFAULT_FONT_ASCENT;\n  }\n\n  function appendText(task, geom, styles, ctx) {\n    // Initialize all used properties to keep the caches monomorphic.\n    const textDiv = document.createElement(\"span\");\n    const textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    const tx = Util.transform(task._viewport.transform, geom.transform);\n    let angle = Math.atan2(tx[1], tx[0]);\n    const style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    const fontHeight = Math.hypot(tx[2], tx[3]);\n    const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // geom.dir may be 'ttb' for vertical texts.\n    textDiv.dir = geom.dir;\n\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      let angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      const divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      const divHeight = fontHeight;\n\n      let m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    const textDivs = task._textDivs;\n    const capability = task._capability;\n    const textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (let i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    const bounds = task._bounds;\n    const viewport = task._viewport;\n\n    const expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (let i = 0; i < expanded.length; i++) {\n      const div = bounds[i].div;\n      const divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      const e = expanded[i],\n        b = bounds[i];\n      const m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      const ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        const t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    const bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    const expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      const e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      const i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    const fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    const horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      let i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      let j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      let horizonPart, affectedBoundary;\n      let q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        let xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      const changedHorizon = [];\n      let lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        const useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        let used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      const affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache, this._layoutTextCtx);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        try { // #707 modified by ngx-extended-pdf-viewer\n          const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n          if (width > 0) {\n            textDivProperties.scale = textDivProperties.canvasWidth / width;\n            transform = `scaleX(${textDivProperties.scale})`;\n          }\n        } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    const task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaLayer {\n  static setAttributes(html, attrs) {\n    for (const [key, value] of Object.entries(attrs)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        html.setAttribute(key, value);\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n  }\n\n  static render(parameters) {\n    const root = parameters.xfa;\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      XfaLayer.setAttributes(rootHtml, root.attributes);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n    const coeffs = parameters.viewport.transform.join(\",\");\n    rootDiv.style.transform = `matrix(${coeffs})`;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        html.appendChild(document.createTextNode(child.value));\n        continue;\n      }\n\n      const childHtml = document.createElement(name);\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        XfaLayer.setAttributes(childHtml, child.attributes);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        childHtml.appendChild(document.createTextNode(child.value));\n      }\n    }\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason?.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\n// modified by ngx-extended-pdf-viewer\n// import { apiCompatibilityParams } from \"./display/api_compatibility.js\";\n// end of modification\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  if (isFetchSupported()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    // modified by ngx-extended-pdf-viewer - removed node.js support\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  // apiCompatibilityParams,\n  // end of modification\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}